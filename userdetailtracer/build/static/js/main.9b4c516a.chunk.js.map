{"version":3,"sources":["components/SingleComponents/Axiosapi.js","context.js","components/mycsv.js","components/SingleComponents/Home.js","components/SingleComponents/Login.js","components/SingleComponents/Logout.js","components/SingleComponents/Register.js","components/SingleComponents/Error.js","components/SingleComponents/Navbar.js","components/SingleComponents/ModalPayment.js","components/SingleComponents/Spinner.js","components/WorkerComponent/WorkersListMap.js","components/SingleComponents/Title.js","components/FilterComponent/WorkerFilter.js","components/SingleComponents/WorkersPaginate.js","components/WorkerComponent/WorkersList.js","components/WorkerComponent/WorkersInfoInputComp.js","components/WorkerComponent/WorkersInfoInput.js","components/WorkerComponent/EditWorkerCompRe.js","components/KilnComponent/KilnInfoInputComp.js","components/KilnComponent/KilnInfoInput.js","components/KilnComponent/KilnListMap.js","components/FilterComponent/KilnFilter.js","components/KilnComponent/KilnList.js","components/SingleComponents/NgosList.js","components/SingleComponents/NewSummary.js","components/SingleComponents/LoadingScreen.js","App.js","serviceWorker.js","index.js"],"names":["csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","axios","create","baseURL","process","headers","Authorization","JSON","parse","localStorage","getItem","myContext","React","createContext","ContextProvider","state","workersInfo","sortedWorkersInfo","singleWorkerInfo","editWorkerInfoId","kilnInfo","sortedkilnInfo","kname","gender","searchbyworkername","searchbycode","searchbycountry","searchbydistrict","searchbymunicipality","searchbyward","searchbyworkercategory","searchbynaike_f_name","searchbykilnname","searchbypaidstatus","mobileNav","searchbykiln","searchbykilnowner","ModalData","alertData","user","offlineWorkers","moneypaidworker","moneypaidkiln","InitialDataStatus","csvData","csvKilnData","ngos","syncing","syncPayments","setState","Axiosapi","method","url","data","Object","values","then","res","status","statusText","hookState","catch","err","console","log","cancelPayment","worker","extra","id","WorkerEditStatefunc","fetchAllData","navigator","onLine","keys","Promise","all","get","workers","kilns","er","cb","setItem","stringify","KilnNewStatefunc","newState","WorkerNewStatefunc","idx","findIndex","e","splice","WorkerEditPaymentFunc","ChangeOptionFilter","value","target","filterAllOptions","filterKilnData","tempWorkersInfo","search","toLowerCase","filter","f_name","includes","code","naike_name","startsWith","district","municipality","category","kiln","payment","amount","CsvWorkerDataFunc","tempkilnInfo","CsvKilnDataFunc","ReduceKeyValFunc","s","k","v","reduce","acc","cur","parseInt","xy","peoplecount","totalamount","entries","clone","map","item","kilnname","kilnaddress","address","amountpaid","amountpayer","username","children","join","OpenNavMenu","CloseNavMenu","filterById","arr","deleteWorker","type","msg","filteredWorker","deleteKiln","filteredKiln","isSuperUser","is_superuser","isSuperUserSummary","OpenModal","ModalStatus","sendModalData","CloseModal","AlertFunc","this","Provider","SearchWorkerName","EditWorker","props","Component","Consumer","Mycsv","useContext","useEffect","filename","label","key","Button","variant","color","Home","to","pathname","Login","userInfo","first_name","last_name","email","password","alertInfo","context","InputHandle","prevState","login","preventDefault","token","window","location","href","isAuthenticated","prevProps","isAlreadyAuthenticated","classes","Container","maxWidth","component","Box","mt","className","paper","my","Avatar","avatar","mb","Typography","form","onSubmit","Grid","container","spacing","xs","TextField","autoComplete","required","fullWidth","onChange","autoFocus","submit","contextType","withStyles","theme","display","flexDirection","alignItems","backgroundColor","width","Logout","removeItem","Register","ngo","toString","register","sm","justify","Error","Card","style","Navbar","AppBar","position","Toolbar","edge","onClick","reload","amounts","Fireman","Moulder","Transporter","Others","dAmount","ModalPayment","valuea","paymentdat","timeofpay","handleChangeAmount","setUpdatedPayment","handleSubmit","Date","toLocaleString","pay_id","uuidv4","ModalDataId","placeholder","helperText","margin","InputLabelProps","shrink","marginTop","Spinner","CircularProgress","useStyles","makeStyles","root","minWidth","title","fontSize","pos","marginBottom","buttonMargin","marginRight","WorkersListMap","cancelBtn","md","CardContent","gutterBottom","l_name","age","ward","phone","marginLeft","borderBottom","element","scroller","scrollTo","duration","delay","smooth","Title","formControl","selectEmpty","inputSection","WorkerFilter","uniqueFilter","grp","Set","selectOptionFunc","val","index","MenuItem","categoryOption","districtOption","municipalityOption","kilnlist","kilnOption","sort","FormControl","InputLabel","Select","labelId","WorkersPaginate","itemsPerPage","totalItems","paginate","useState","page","setPage","Pagination","count","Math","ceil","event","addIcon","justifyContent","AddIconLink","textDecoration","WorkersList","currentPage","setCurrentPage","workersPerPage","indexOfLastWorker","indexOfFirstWorker","sortedworkersInfoComp","slice","pageNumber","csvFunc","csvheader","WorkersInfoInputComp","SubmitHandler","InputHandler","InputHandlerKiln","action","country","kiln_id","WorkersInfoInput","naike_l_name","salary","setValue","workerInfoValue","setworkerInfoValue","setalertInfo","toUpperCase","codes","curr","substr","c","genCode","find","EditWorkerCompRe","match","params","scrollToElement","textAlign","KilnInfoInputComp","KilnInfoInput","kilnInfoValue","setkilnInfoValue","posBtn","KilnListMap","KilnFilter","KilnList","kilnsPerPage","indexOfLastKiln","indexOfFirstKiln","kilnInfoComp","NgosList","ngolist","uuid","NewSummary","allworkers","summary","ga","kpis","max_amount","total","getSummaryFunc","summarystate","group","getProp","push","paymentSum","parseFloat","nest","nkpis","k2","g","max","OuterAmountBar","height","styled","div","LoadingScreen","App","alert","Collapse","in","Alert","IconButton","aria-label","size","severity","super_user_routes","exact","path","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","getElementById","URL","origin","addEventListener","fetch","response","contentType","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9b4c516a.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst getCookie = (name) => {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n   \n    return cookieValue;\n};\n\nconst csrftoken = getCookie('csrftoken');\n\nexport default axios.create({\n    baseURL:`${process.env.REACT_APP_BASE_URL}/api`,\n    headers: {\n        'content-type':'application/json',\n        'X-CSRFToken':csrftoken,\n        Authorization:`Token ${JSON.parse(localStorage.getItem('item'))}`,\n       \n    }\n});\n\nexport {csrftoken}","import { CssBaseline } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport Axiosapi from './components/SingleComponents/Axiosapi'\nconst myContext = React.createContext();\n\nclass ContextProvider extends Component {\n  state = {\n    workersInfo: [],\n    sortedWorkersInfo: [],\n    singleWorkerInfo: '',\n    editWorkerInfoId: '',\n    kilnInfo: [],\n    sortedkilnInfo: [],\n    kname: \"All\",\n    gender: \"All\",\n    searchbyworkername: '',\n    searchbycode:'',\n    searchbycountry: '',\n    searchbydistrict:'All' ,\n    searchbymunicipality: 'All',\n    searchbyward: '',\n    searchbyworkercategory: 'All',\n    searchbynaike_f_name: '',\n    searchbykilnname: '',\n    searchbypaidstatus:'All',\n    mobileNav: false,\n    searchbykiln: '',\n    searchbykilnowner: '',\n    ModalData:null,\n    alertData: null,\n    csrftoken:'',\n    user: null,\n    offlineWorkers: {},\n    moneypaidworker:'All',\n    moneypaidkiln:'All',\n    InitialDataStatus:false,\n    csvData:[],\n    csvKilnData:[],\n    ngos:[],\n    syncing:false\n\n  };\n\n  componentDidMount() {\n    this.fetchAllData();\n   \n  }\n\n\n  syncPayments = () => {\n    this.setState({syncing:true})\n    Axiosapi({\n      method:'POST',\n      url:`sync-payments/`,\n      data:Object.values(this.state.offlineWorkers)\n      \n    }).then(res=>{\n      if (res.status === 200 && res.statusText === \"OK\") {\n          this.hookState({offlineWorkers: {}});\n          this.setState({syncing:false})\n        }\n    })\n    .catch((err) => {\n      console.log(err);\n      this.setState({syncing:false})\n    })\n  }\n\n  cancelPayment = (worker) =>{\n    worker.extra = null;\n    Axiosapi({\n      method:'PUT',\n      url:`workers/${worker.id}`,\n      data:worker\n    })\n    .then(res=>{\n      if (res.status === 200 && res.statusText === \"OK\") {\n        this.WorkerEditStatefunc(worker);\n      }\n      })\n      .catch((err) => {\n        this.setState({})\n    });\n}\n\n  //********Data Fetching**********/ \n\n  fetchAllData = () => {\n    if( localStorage.getItem('app-data')){\n      const values = JSON.parse(localStorage.getItem('app-data'))\n      this.setState({\n        workersInfo:values.workersInfo,\n        sortedWorkersInfo:values.workersInfo,\n       \n        kilnInfo:values.kilnInfo,\n        sortedkilnInfo:values.kilnInfo,\n        offlineWorkers: values.offlineWorkers,\n        user:values.user,\n        ngos:values.ngos,\n        InitialDataStatus:true\n      },()=>{\n        if( navigator.onLine && Object.keys(values.offlineWorkers).length ){\n          this.syncPayments()\n          //console.log( Object.values(values.offlineWorkers) );\n          //this.hookState({offlineWorkers: {}});\n        }\n      });\n\n     \n    }  else {\n    Promise.all([Axiosapi.get('workers'), Axiosapi.get('kiln'), Axiosapi.get('user'),Axiosapi.get('ngos')])\n      .then(([workers, kilns, user,ngos]) => {\n        this.hookState({ \n          workersInfo: workers.data, sortedWorkersInfo: workers.data,\n          kilnInfo: kilns.data, sortedkilnInfo: kilns.data,\n          user: user.data ,\n          InitialDataStatus:true,\n          ngos:ngos.data\n        })\n      }).catch(er => console.log(er))\n    }\n  }\n\n  hookState = (state, cb) => {\n  \n    this.setState(state, cb);\n    const {workersInfo, kilnInfo, user, offlineWorkers,ngos} = this.state;\n  \n   \n    localStorage.setItem('app-data', JSON.stringify({workersInfo, kilnInfo, user, offlineWorkers,ngos}));\n    \n  }\n\n\n\n\n\n//**********Add new values to state******//\n\n  KilnNewStatefunc =(newState)=> {\n          this.hookState({sortedkilnInfo:newState,kilnInfo:newState})\n  }\n\n  WorkerNewStatefunc =(newState)=> {\n    this.hookState({workersInfo:newState,sortedWorkersInfo:newState})\n  }\n\n  WorkerEditStatefunc =(worker)=> {\n    const workersInfo = this.state.workersInfo;\n    const idx = workersInfo.findIndex(e => e.id === worker.id);\n    if( idx > -1 ){\n      workersInfo.splice(idx, 1, worker);  \n      this.hookState({workersInfo,sortedWorkersInfo: workersInfo});\n    }\n  }\n\n  WorkerEditPaymentFunc =(worker)=> {\n    this.state.offlineWorkers[worker.id] = worker;\n    this.hookState({offlineWorkers: this.state.offlineWorkers});\n  }\n\n\n//********* SelectOption in filter worker/kiln******//\n\n  ChangeOptionFilter = (e) => {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState({ [name]: value }, () => {\n      this.filterAllOptions();\n      this.filterKilnData();\n      \n    });\n  };\n\n\n  //**********Filter func for worker*************//\n\n  filterAllOptions = () => {\n    const {\n      kname,\n      workersInfo,\n      gender,\n      searchbyworkername,    \n      searchbydistrict,\n      searchbymunicipality,   \n      searchbyworkercategory,\n      searchbynaike_f_name,\n      searchbycode,\n      searchbypaidstatus\n      \n    } = this.state;\n    let tempWorkersInfo = [...workersInfo];\n    if (searchbyworkername !== '') {\n     const search = searchbyworkername.toLowerCase()\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return worker.f_name.toLowerCase().includes(search);\n      });\n    }\n\n    if (searchbycode !== '') {\n      const search = searchbycode.toLowerCase()\n       tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n         return worker.code.toLowerCase().includes(search);\n       });\n     }\n\n\n   if (searchbynaike_f_name !== '') {\n     const search = searchbynaike_f_name.toLowerCase()\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return worker.naike_name && worker.naike_name.toLowerCase().includes(search);\n      });\n     \n    }\n\n\n    if (gender !== \"All\") {\n     const search = gender.toLowerCase()\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return worker.gender && worker.gender.toLowerCase().startsWith(search);\n      });\n      \n    }\n \n    if (searchbydistrict !== \"All\") {\n      const search = searchbydistrict.toLowerCase()\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return worker.district.toLowerCase().includes(search);\n      });\n    }\n\n    if (searchbymunicipality !== \"All\") {\n      const search = searchbymunicipality.toLowerCase()\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return worker.municipality && worker.municipality.toLowerCase().includes(search);\n      });\n    }\n\n \n    if (searchbyworkercategory !== 'All') {\n    const search =  searchbyworkercategory.toLowerCase()\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return worker.category && worker.category.toLowerCase().includes(search);\n      });\n     \n    }\n\n    if (kname !== \"All\") {\n      const search = kname.toLowerCase()\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return worker.kiln.name.toLowerCase() === search;\n      });\n    } \n\n\n    if (searchbypaidstatus == \"paid\") {\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return (worker.extra && (worker.extra.payment || worker.extra.payment.amount > 0))     \n      });\n    } \n    else if(searchbypaidstatus == \"unpaid\"){\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return worker.extra == null\n      });\n    }\n    else {\n      tempWorkersInfo = tempWorkersInfo;\n    }\n\n    \n    this.hookState({ sortedWorkersInfo: tempWorkersInfo },()=>{this.CsvWorkerDataFunc()});\n  };\n\n//**********Filter func for kiln*************//\n\n  filterKilnData = () => {\n    const {\n      kilnInfo,\n      searchbykiln,\n      \n     \n    } = this.state;\n\n    let tempkilnInfo = [...kilnInfo];\n\n    if (searchbykiln !== '') {\n      const search = searchbykiln.toLowerCase()\n      tempkilnInfo = tempkilnInfo.filter((kiln) => {\n        return kiln.name.toLowerCase().includes(search);\n      });\n    }\n\n \n\n    this.hookState({ sortedkilnInfo: tempkilnInfo },()=>this.CsvKilnDataFunc());\n  };\n\n\n\nReduceKeyValFunc = (s) => {\n  let data = {}\n \n     for(var [k,v] of Object.entries(s))\n           {\n             const amount = v.reduce((acc,cur)=>{\n               if(cur.extra !== null){\n                 acc = acc + parseInt(cur.extra.amount)\n                 return acc\n               }\n               return acc;\n             },0)\n\n           var xy =   v.reduce((acc, cur) => {\n             acc[k] = {peoplecount:v.length,totalamount:amount}\n               return acc\n             }, {})\n\n             data = {...data, ...xy}\n             \n             }\n     return data\n}\n\n\nclone = (v) => {\n  return JSON.parse(JSON.stringify(v));\n}\n\nCsvWorkerDataFunc = () => {\n  const {sortedWorkersInfo} =  this.state\n\n  const data = this.clone(sortedWorkersInfo).map(item=>{\n      item.kilnname = item.kiln.name;\n      item.kilnaddress = item.kiln.address  ;     \n\n    if(item.extra !== null){\n      item.amountpaid = item.extra.payment.amount;\n      item.amountpayer = item.extra.payment.amountpayer.username;\n    }\n\n    if(item.children !== null){\n      item.children = item.children.map(e=>e.join('/')).join(',')\n    }\n    delete item['kiln']\n   return item\n  })\n\nthis.setState({csvData:data})\n}\n\nCsvKilnDataFunc = () => {\n  const {sortedkilnInfo} = this.state\n\n  const data = this.clone(sortedkilnInfo).map((item)=>{\n    return item\n  })\n\n  this.setState({csvKilnData:data})\n}\n\n\n  OpenNavMenu = () => {\n    this.hookState({ mobileNav: true });\n  };\n\n  CloseNavMenu = () => {\n    this.hookState({ mobileNav: false });\n  };\n\n  filterById = (id,arr) => {\n    let filteredList =arr.filter(item=>{\n      return item.id !== id\n    })\n    return filteredList\n  }\n\n  \n  deleteWorker = (id) => {\n\n      Axiosapi({\n        method:'DELETE',\n        url:`workers/${id}`,\n        \n      }).then(res=>{\n        if (res.status === 204 && res.statusText === \"No Content\") {\n        this.hookState({alertData:{type: 'success', msg: 'Worker deleted successfully'}})\n        let filteredWorker = this.filterById(id,this.state.workersInfo)\n        this.hookState({workersInfo:filteredWorker, sortedWorkersInfo:filteredWorker, searchbyworkername: '',\n        gender: 'All',\n        searchbydistrict:'All' ,\n        searchbymunicipality: 'All',  \n        searchbyworkercategory: 'All',\n        searchbynaike_f_name: '',\n        searchbykilnname: ''})\n      \n        }\n      })\n      .catch((err) => {\n        this.hookState({alertData:{type: 'error', msg: 'Something went wrong. Please try again.'}})\n      })\n      \n\n  };\n\n  deleteKiln = (id) => {\n\n      Axiosapi({\n        method:'DELETE',\n        url:`kiln/${id}`,\n        \n      }).then(res=>{\n        if (res.status === 204 && res.statusText === \"No Content\") {\n        this.hookState({alertData:{type: 'success', msg: 'Kiln deleted successfully'}})\n        let filteredKiln = this.filterById(id,this.state.kilnInfo)\n        this.hookState({kilnInfo:filteredKiln, sortedkilnInfo:filteredKiln, searchbykiln: '',\n        })\n       \n     \n        }\n      })\n      .catch((err) => {\n        this.hookState({alertData:{type: 'error', msg: 'Something went wrong. Please try again.'}})\n      })\n  };\n\n  isSuperUser = () => {\n      return navigator.onLine && this.state.user && this.state.user.is_superuser;\n  };\n\n  isSuperUserSummary = () => {\n    return  this.state.user && this.state.user.is_superuser;\n};\n\n  OpenModal = (worker) => {\n      this.setState({ModalStatus:true,ModalData:worker},()=>this.sendModalData())\n  }\n\n  sendModalData = ()=>{\n    const data = this.state.ModalData\n    return data\n\n  }\n\n\n\n\n  CloseModal = (id) => {\n    this.hookState({ModalData:null})\n\n  }\n\n\n\n\n  AlertFunc = (res) => {\n    this.hookState({alertData:res})\n  }\n\n\n  render() {\n    return (\n      <myContext.Provider\n        value={{\n          ...this.state,\n          ChangeOptionFilter: this.ChangeOptionFilter,\n          SearchWorkerName: this.SearchWorkerName,\n          EditWorker: this.EditWorker,\n          OpenNavMenu: this.OpenNavMenu,\n          CloseNavMenu: this.CloseNavMenu,\n          deleteWorker: this.deleteWorker,\n          deleteKiln:this.deleteKiln,\n          fetchAllData:this.fetchAllData,\n          KilnNewStatefunc:this.KilnNewStatefunc,\n          WorkerNewStatefunc:this.WorkerNewStatefunc,\n          WorkerEditStatefunc:this.WorkerEditStatefunc,\n          OpenModal:this.OpenModal,\n          CloseModal:this.CloseModal,\n          AlertFunc:this.AlertFunc,\n          isSuperUser: this.isSuperUser,\n          WorkerEditPaymentFunc: this.WorkerEditPaymentFunc,\n          CsvWorkerDataFunc:this.CsvWorkerDataFunc,\n          CsvKilnDataFunc:this.CsvKilnDataFunc,\n          cancelPayment:this.cancelPayment,\n          sendModalData:this.sendModalData,\n          isSuperUserSummary:this.isSuperUserSummary\n        }}\n      >\n        {this.props.children}\n      </myContext.Provider>\n    );\n  }\n}\nconst ContextConsumer = myContext.Consumer;\nexport { ContextProvider, myContext, ContextConsumer };\n","import React,{useContext,useEffect} from 'react'\nimport { Button } from \"@material-ui/core\";\nimport { myContext } from \"../context\";\nimport { CSVLink } from \"react-csv\";\n\n\nconst Mycsv = () => {\n  \n  const { csvData,CsvWorkerDataFunc} = useContext(myContext);\n  useEffect(()=>{\n    CsvWorkerDataFunc()\n  },[])\n\n const headers = [\n    { label: \"First Name\", key: \"f_name\" },\n    { label: \"Last Name\", key: \"l_name\" },\n    { label: \"Naike\", key: \"naike_name\" },\n    { label: \"NaikePhone\", key: \"naike_phone\" },\n    { label: \"Priority\", key: \"priority\" },\n    { label: \"Ngo\", key: \"org\" },\n    { label: \"Duplicate\", key: \"duplicate\" },\n    { label: \"Gender\", key: \"gender\" },\n    { label: \"Age\", key: \"age\" },\n    { label: \"Country\", key: \"country\" },\n    { label: \"District\", key: \"district\" },\n    { label: \"Municipality\", key: \"municipality\" },\n    { label: \"Ward\", key: \"ward\" },\n    { label: \"Category\", key: \"category\" },\n    { label: \"Kiln Id\", key: \"kiln_id\" },\n    { label: \"Children\", key: \"children\" },\n    { label: \"Kiln\", key: \"kilnname\" },\n    { label: \"Kiln Address\", key: \"kilnaddress\" },\n    { label: \"Amount Paid\", key: \"amountpaid\" },\n    { label: \"Amount Payer\", key: \"amountpayer\" },\n  ];\n\n    return (\n        <div>\n        \n        <CSVLink  filename={\"kiln-workers.csv\"} data={csvData} headers={headers}>\n          <Button variant=\"contained\" color=\"secondary\">\n\n              ExportCSV\n          </Button>\n      </CSVLink>\n        </div>\n    )\n}\n\nexport default Mycsv\n\n","import React from 'react'\nimport { Redirect } from \"react-router-dom\";\n\nconst Home = () => {\n  \n    return (\n        <div>\n            <Redirect to ={{pathname:'workers'}} />     \n        </div>\n    )\n}\n\nexport default Home\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from 'axios'\nimport {csrftoken} from './Axiosapi'\nimport { myContext } from \"../../context\";\n\nimport {\n  Grid,\n  Container,\n  Avatar,\n  Typography,\n  TextField,\n  Button,\n \n  Box,\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport \"../../App.css\";\n\nconst styles = (theme) => ({\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    backgroundColor: \"#3f51b5\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n  },\n  submit: {},\n});\n\nclass Login extends React.Component {\n  state = {\n   userInfo:{\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n   },\n   alertInfo:this.context.alertData\n  };\n\n  componentDidUpdate(prevProps,prevState){\n    \n    if( prevState.alertInfo !== this.state.alertInfo){\n   \n     this.context.AlertFunc(this.state.alertInfo);\n    }\n  }\n\n  InputHandle = (e) => {\n    let value = e.target.value;\n    let name = e.target.name;\n  \n    this.setState((prevState)=>{\n      return ({...prevState,[name]:value})\n    });\n  };\n\n  login = (e) => {\n    e.preventDefault();\n    \n      axios({\n        method:'POST',\n        headers: {\n          'X-CSRFToken':csrftoken\n      },\n        url : `${process.env.REACT_APP_BASE_URL}/auth/`,\n        data:this.state\n      })\n      .then(res=>{\n      \n        localStorage.setItem(\"item\", JSON.stringify(res.data.token));\n      \n     \n       this.setState({})\n       window.location.href = ''\n      })\n      .catch((err) => this.setState({alertInfo:{type: 'error', msg: 'Something went wrong. Please try again.'}}));\n      \n\n\n  };\n\n  isAuthenticated = () => {\n    const token = localStorage.getItem(\"item\");\n    return token && token.length > 10;\n  };\n\n  static contextType = myContext;\n\n  render() {\n    const isAlreadyAuthenticated = this.isAuthenticated();\n    const { classes } = this.props;\n\n    return (\n      <div>\n        {isAlreadyAuthenticated ? (\n          <Redirect to={{ pathname: \"workers\" }} />\n        ) : (\n          <Container maxWidth=\"sm\" component=\"main\">\n            <Box component=\"div\" mt={10}>\n              <div className={classes.paper}>\n                <Box component=\"div\" my={1}>\n                  <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                  </Avatar>\n                </Box>\n                <Box component=\"div\" mb={2}>\n                  <Typography component=\"h1\" variant=\"h5\">\n                    Login\n                  </Typography>\n                </Box>\n                <form className={classes.form} onSubmit={this.login}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete=\"username\"\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        name=\"username\"\n                        value={this.state.username}\n                        onChange={this.InputHandle}\n                        id=\"userName\"\n                        label=\"User Name\"\n                        autoFocus\n                      />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        value={this.state.password}\n                        onChange={this.InputHandle}\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                      />\n                    </Grid>\n                  </Grid>\n                  <Box component=\"div\" my={3}>\n                    <Button\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.submit}\n                      \n                    >\n                      Login\n                    </Button>\n                  </Box>\n                </form>\n           \n              </div>\n            </Box>\n          </Container>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Login);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {Button,Box} from '@material-ui/core'\n\nconst Logout = () => {\n  localStorage.removeItem(\"item\");\n  localStorage.removeItem(\"app-data\");\n\n  return (\n    <div className=\"logoutSection\">\n      <div className=\"logoutIn\">\n        <h2>You have been successfully logged out.</h2>\n    <Box component=\"div\" mb={2}></Box>\n        <Link to=\"login\">\n          <Button variant=\"contained\" color=\"primary\">\n            Login Again\n          </Button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Logout;\n","import React from \"react\";\nimport {\n  Grid,\n  Container,\n  Avatar,\n  Typography,\n  TextField,\n  Button,\n  Box,\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { csrftoken } from \"./Axiosapi\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport { myContext } from \"../../context\";\n\nconst styles = (theme) => ({\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    backgroundColor: \"#3f51b5\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n  },\n  submit: {},\n});\n\nclass Register extends React.Component {\n  state = {\n    userInfo: {\n      username: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      password: \"\",\n      ngo: window.location.toString().split(\"ngo=\")[1],\n    },\n    alertInfo: this.context.alertData,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.alertInfo !== this.state.alertInfo) {\n      this.context.AlertFunc(this.state.alertInfo);\n    }\n  }\n\n  register = (e) => {\n    e.preventDefault();\n\n    axios({\n      method: \"POST\",\n      headers: {\n        \"X-CSRFToken\": csrftoken,\n      },\n      url: `${process.env.REACT_APP_BASE_URL}/api/users/`,\n      data: this.state.userInfo,\n    })\n      .then((res) => {\n        if (res.status === 201 && res.statusText === \"Created\") {\n          this.setState({\n            alertInfo: {\n              type: \"success\",\n              msg: \"Worker Registered Successfully.\",\n            },\n          });\n          this.setState((prevState) => {\n            return { prevState, userInfo: this.state.userInfo };\n          });\n          window.location.href = `/#/login`;\n        }\n      })\n      .catch((err) => {\n        this.setState({\n          alertInfo: {\n            type: \"error\",\n            msg: \"Something went wrong. Please try again.\",\n          },\n        });\n      });\n  };\n\n  InputHandle = (e) => {\n    let value = e.target.value;\n    let name = e.target.name;\n    const { userInfo } = this.state;\n    this.setState({ userInfo: { ...userInfo, [name]: value } });\n  };\n\n  static contextType = myContext;\n  render() {\n    const { classes } = this.props;\n    if (!this.state.userInfo.ngo) {\n      return <Redirect to={{ pathname: \"/login\" }} />;\n    }\n\n    return (\n      <div>\n        <Container maxWidth=\"sm\" component=\"main\">\n          <Box component=\"div\" mt={5}>\n            <div className={classes.paper}>\n              <Box component=\"div\" my={1}>\n                <Avatar className={classes.avatar}>\n                  <LockOutlinedIcon />\n                </Avatar>\n              </Box>\n              <Box component=\"div\" mb={2}>\n                <Typography component=\"h1\" variant=\"h5\">\n                  Register\n                </Typography>\n              </Box>\n              <form className={classes.form} onSubmit={this.register}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      autoComplete=\"username\"\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      name=\"username\"\n                      value={this.state.username}\n                      onChange={this.InputHandle}\n                      id=\"userName\"\n                      label=\"User Name\"\n                      autoFocus\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      autoComplete=\"fname\"\n                      variant=\"outlined\"\n                      fullWidth\n                      name=\"first_name\"\n                      value={this.state.first_name}\n                      onChange={this.InputHandle}\n                      id=\"firstName\"\n                      label=\"First Name\"\n                      autoFocus\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      autoComplete=\"lname\"\n                      variant=\"outlined\"\n                      fullWidth\n                      name=\"last_name\"\n                      value={this.state.last_name}\n                      onChange={this.InputHandle}\n                      id=\"lastName\"\n                      label=\"Last Name\"\n                      autoFocus\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      value={this.state.email}\n                      onChange={this.InputHandle}\n                      id=\"email\"\n                      label=\"Email Address\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      value={this.state.password}\n                      onChange={this.InputHandle}\n                      name=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      id=\"password\"\n                      autoComplete=\"current-password\"\n                    />\n                  </Grid>\n                </Grid>\n                <Box component=\"div\" my={3}>\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                  >\n                    Register\n                  </Button>\n                </Box>\n              </form>\n              <Grid container justify=\"flex-end\">\n                <Grid item>\n                  <Typography>\n                  <Link href=\"#login\" variant=\"body2\" className='alreadyLogin'>\n                    Already have an account? Login\n                  </Link>\n                  </Typography>\n                </Grid>\n              </Grid>\n            </div>\n          </Box>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Register);\n","import React from \"react\";\nimport { Typography ,Card} from \"@material-ui/core\";\n\nconst Error = () => {\n  return (\n    <div className='errorSection'>\n      {\" \"}\n      <Card style={{'padding':'20px'}} >\n        <Typography\n         \n          color=\"primary\"\n          component=\"h1\"\n          variant=\"h4\"\n        >\n          Error! 404 Not Found\n        </Typography>\n      </Card>\n    </div>\n  );\n};\n\nexport default Error;\n","import React, { useContext } from \"react\";\nimport { AppBar, Button } from \"@material-ui/core\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport {Link} from 'react-router-dom'\nimport { myContext } from \"../../context\";\nimport \"../../App.css\";\n\n\n\nconst isAuthenticated = () => {\n  const token = localStorage.getItem(\"item\");\n  return token && token.length > 10;\n};\n\nconst Navbar = () => {\n  const { mobileNav,CloseNavMenu,OpenNavMenu } = useContext(myContext);\n  const isAlreadyAuthenticated = isAuthenticated();\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar className=\"nav\">\n          <div className=\"navLeft\">\n            <Typography edge=\"start\" className=\"logoTitle\" variant=\"h6\">\n            Global Fairness Initiative\n            </Typography>\n            <div className=\"burgerBar\">\n              { mobileNav ?  \n\n              <MenuOpenIcon onClick= {()=>CloseNavMenu()}/>\n            :\n            <MenuIcon onClick= {()=>OpenNavMenu()}/>\n}\n            </div>\n          </div>\n\n          <div className={mobileNav ? 'navRight hide' : 'navRight' }>\n            <Link to='/kilnlist'>\n            <Button  className=\"loginButton\">\n              Kiln\n            </Button>\n            </Link>\n            <Link to='/workers'>\n            <Button  className=\"loginButton\" >\n              Workers\n            </Button>\n            </Link>\n            <Link to='/ngos'>\n            <Button  className=\"loginButton\" >\n              Ngos\n            </Button>\n            </Link>\n            <div>\n              {isAlreadyAuthenticated ? (\n                <div>\n                <span>\n                   <Link to='/logout'>\n                  <Button onClick={()=>window.location.reload()} className=\"loginButton\">\n                    Logout\n                  </Button>\n                  </Link>\n                </span>\n              </div>\n              ) : (\n                <span>\n                   <Link to='/login'>\n                  <Button   className=\"loginButton\" variant=\"h6\">\n                    Login\n                  </Button>\n                  </Link>\n                </span>\n              )}\n            </div>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { TextField, Container, Button } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { myContext } from \"../../context\";\nimport Axiosapi from './Axiosapi'\nimport { v4 as uuidv4 } from 'uuid';\n\nconst amounts  = {\n  Fireman:5650,\n  Moulder:7750,\n  Transporter:7400,\n  Others:5150\n};\n\nconst dAmount = (ModalData) => {\n  if( ModalData ){\n    const amount = ModalData.extra && ModalData.extra.payment ?\n       ModalData.extra.payment.amount : \n       amounts[ModalData.category];\n      return amount;\n  }\n  return 0;\n};\n\nclass ModalPayment extends React.Component {\n  state = {\n      valuea:this.context.ModalData,\n\n      paymentdat: {\n      amount:dAmount(this.context.ModalData),\n      timeofpay: \"\",\n      amountpayer:this.context.user && this.context.user.username\n    }\n\n  };\n\n\n  handleChangeAmount = (e) => {\n          const amount = e.target.value     \n          this.setState({paymentdat:{...this.state.paymentdat,amount:amount }})\n  };\n\n  setUpdatedPayment = (worker) => {\n    this.context.WorkerEditStatefunc(worker);\n}\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const worker = this.context.ModalData;\n    if (!worker.extra){\n      worker.extra = {}\n    }\n    worker.extra.payment = {...this.state.paymentdat,amountpayer:this.context.user,timeofpay:new Date().toLocaleString(),pay_id:uuidv4()}\n    const ModalDataId = this.context.ModalData.id\n\n\n    if(navigator.onLine ){\n\n      Axiosapi({\n        method:'PUT',\n        url:`workers/${ModalDataId}`,\n        data:worker\n      })\n      .then(res=>{\n        if (res.status === 200 && res.statusText === \"OK\") {\n            this.setUpdatedPayment(worker);\n        }\n        this.context.CloseModal()\n\n        })\n        .catch((err) => {\n          this.setState({})\n          this.context.CloseModal()\n\n\n      });\n\n    } else {\n      this.setUpdatedPayment(worker);\n      this.context.WorkerEditPaymentFunc(\n        worker\n     );\n     this.context.CloseModal()\n\n   }\n\n\n\n  };\n\n  \n\n    // componentDidUpdate(prevProps, prevState) {\n    //   if (prevState.valuea !== this.state.valuea) {\n    //     const data = this.context.sendModalData()\n    //     console.log(data)\n    //   }\n    // }\n\n  \n  static contextType = myContext;\n  render() {\n    const { CloseModal, ModalStatus, ModalData, user,sendModalData } = this.context;\n   \n    return (\n      <div className=\"modalOverlay\">\n        <Container maxWidth=\"sm\" component=\"main\">\n          <div className=\"modalInner\">\n            <CloseIcon\n              className=\"CloseModelIcon\"\n              onClick={() => CloseModal()}\n            />\n            <form onSubmit={this.handleSubmit}>\n            <h2>Enter Amount</h2>\n            <TextField\n              id=\"outlined-full-width\"\n              label=\"Enter Amount\"\n              placeholder=\"Enter Amount\"\n              helperText=\"\"\n              fullWidth\n              value={this.state.paymentdat.amount}\n              onChange={this.handleChangeAmount}\n              name=\"amount\"\n              margin=\"normal\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n            />\n            <Button\n              style={{ marginTop: 8 }}\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Save Payment\n            </Button>\n            </form>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default ModalPayment;\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst Spinner = () => {\n    return (\n        <div className='spinnerSection'>\n            <div>\n            <CircularProgress color=\"secondary\" />\n            </div>\n        </div>\n    )\n}\n\nexport default Spinner\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { scroller } from \"react-scroll\";\nimport { Link } from \"react-router-dom\";\nimport { myContext } from \"../../context\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 8,\n  },\n  buttonMargin: {\n    marginTop: 15,\n    marginRight: 15,\n  },\n});\nconst WorkersListMap = ({ worker }) => {\n  const { deleteWorker, OpenModal, isSuperUser ,user,cancelPayment} = useContext(myContext);\n  const classes = useStyles();\n\n  const scrollToElement = (element) => {\n    scroller.scrollTo(element, {\n      duration: 1000,\n      delay: 100,\n      smooth: true,\n    });\n  };\n\n  const cancelBtn =  navigator.onLine ? \n            (\n              <span>\n            <Button\n              onClick={() => cancelPayment(worker)}\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.buttonMargin}\n            >\n              Cancel\n            </Button>\n          </span>\n            ) : null\n\n  return (\n    <Grid item xs={12} sm={6} md={4}>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {worker.f_name} {worker.l_name}\n          </Typography>\n          <Typography gutterBottom variant=\"h6\" >\n            {worker.code} \n          </Typography>\n\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Category: {worker.category}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Naike: {worker.naike_name}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Gender: {worker.gender}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Age: {worker.age}\n          </Typography>\n\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            District: {worker.district}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Municipality: {worker.municipality}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Ward: {worker.ward}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Phone: {worker.phone}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Kiln: {worker.kiln.name}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            <span>Children :</span>\n            {worker.children ? (\n              worker.children.map((e,i)=><span key={i} style={{ marginLeft:'10px', borderBottom: '1px solid' }} >{e.join('/')}</span>)\n            ) : null}\n          </Typography>\n\n          <Typography className={classes.pos} variant=\"body1\" component=\"div\">\n            <span>Paid By: </span>\n\n            {worker.extra && worker.extra.payment? (\n              <div style={{display:\"inline\"}}>\n                <strong>{worker.extra.payment.amountpayer.username}</strong> from \n               <strong> {worker.extra.payment.amountpayer.ngo.name}</strong> on {worker.extra.payment.timeofpay}\n              </div>\n            ) : 'None'}\n          </Typography>\n\n          <Typography className={classes.pos} variant=\"body1\" component=\"div\">\n            <span>Paid Amount:  </span>\n\n            {worker.extra && worker.extra.payment ? (\n              <Typography variant=\"subtitle2\" display=\"inline\">Rs.{worker.extra.payment.amount} </Typography>\n            ) : 'Not Paid'}\n          </Typography>\n\n\n\n          <span>\n            {isSuperUser() ? (\n              <span>\n                <Link to={`/workers/${worker.id}/`}>\n                  <Button\n                    className={classes.buttonMargin}\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Edit\n                  </Button>\n                </Link>\n                <Button\n                  onClick={() => {\n                    deleteWorker(worker.id);\n                    scrollToElement(\"Home\");\n                  }}\n                  className={classes.buttonMargin}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Delete\n                </Button>\n              </span>\n            ) : null}{\" \"}\n          </span>\n{\n  user.ngo ?\n          <span>\n            <Button\n              onClick={() => OpenModal(worker)}\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.buttonMargin}\n            >\n              Payment\n            </Button>\n          </span>\n             :\n             cancelBtn\n} \n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default WorkersListMap;\n","import React from 'react'\nimport '../../App.css';\n \n\nconst Title = ({title,children}) => {\n    return (\n        <div className='title'>        \n            <p>{title}</p>\n            <div/>\n        </div>\n    )\n}\n\nexport default Title\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { myContext } from \"../../context\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n   \n    width:'100%'\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  inputSection: {\n    width: \"95%\",\n    margin: \"auto\",\n  },\n}));\n\nconst WorkerFilter = () => {\n  const classes = useStyles();\n  const {\n    workersInfo,\n    kname,\n    gender,\n    searchbyworkername,\n    searchbycode,\n    ChangeOptionFilter,\n    searchbydistrict,\n    searchbymunicipality,\n    searchbyworkercategory,\n    searchbynaike_f_name,\n    searchbypaidstatus\n  \n  } = useContext(myContext);\n\n const uniqueFilter = (arr,grp) => {\n\n  return ['All',...new Set(arr.map(e => e[grp]))];\n\n}\n\n const   selectOptionFunc = (arr,val) => {\n    return  arr.map((val, index) => {\n    return (\n      <MenuItem key={index} value={val}>\n        {val}\n      </MenuItem>\n    );\n    });\n    }\n\nlet uniquecategory = uniqueFilter(workersInfo,'category')\nlet categoryOption = selectOptionFunc(uniquecategory,'category')\n\nlet uniquedistrict = uniqueFilter(workersInfo,'district')\nlet districtOption = selectOptionFunc(uniquedistrict,'district')\n\nlet uniquemunicipality = uniqueFilter(workersInfo,'municipality')\nlet municipalityOption = selectOptionFunc(uniquemunicipality,'municipality')\n\n  let kilnlist = workersInfo.map((worker) => {\n    return worker.kiln.name;\n  });\n  let uniquekiln = [...new Set(kilnlist), \"All\"].sort();\n\n  let kilnOption = uniquekiln.map((kiln,index) => {\n    return <MenuItem key={index} value={kiln}>{kiln}</MenuItem>;\n  });\n\n\n\n\n\n  return (\n    <div>\n      <div className={classes.inputSection}>\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={6} md={4}>\n            <TextField\n              fullWidth\n              label=\"Search by Name\"\n              id=\"outlined-size-small\"\n              name=\"searchbyworkername\"\n              value={searchbyworkername}\n              onChange={ChangeOptionFilter}\n              variant=\"outlined\"\n             \n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={4}>\n            <TextField\n              fullWidth\n              label=\"Search by Code\"\n              id=\"outlined-size-small\"\n              name=\"searchbycode\"\n              value={searchbycode}\n              onChange={ChangeOptionFilter}\n              variant=\"outlined\"\n             \n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={4}>\n            <TextField\n              fullWidth\n              label=\"Search by Naike name\"\n              id=\"outlined-size-normal\"\n              name=\"searchbynaike_f_name\"\n              value={searchbynaike_f_name}\n              onChange={ChangeOptionFilter}\n              variant=\"outlined\"\n              \n            />\n          \n        </Grid>\n\n\n        <Grid item xs={6} sm={6} md={4}  className='categoryMargin'>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                By Category\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                name=\"searchbyworkercategory\"\n                value={searchbyworkercategory}\n                onChange={ChangeOptionFilter}\n                label=\"Category\"\n               \n              >\n                {categoryOption}\n              </Select>\n            </FormControl>\n          </Grid>\n\n\n          <Grid item xs={6} sm={4} >\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                By District\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                name=\"searchbydistrict\"\n                value={searchbydistrict}\n                onChange={ChangeOptionFilter}\n                label=\"Districtname\"\n                \n              >\n                {districtOption}\n              </Select>\n            </FormControl>\n          </Grid>\n\n\n          <Grid item xs={6} sm={4}>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                By Municipality\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                name=\"searchbymunicipality\"\n                value={searchbymunicipality}\n                onChange={ChangeOptionFilter}\n                label=\"Municipalityname\"\n              \n              >\n                {municipalityOption}\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={6} sm={4}>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                By Kiln\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                name=\"kname\"\n                value={kname}\n                onChange={ChangeOptionFilter}\n                label=\"Kilnname\"\n               \n              >\n                {kilnOption}\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={6} sm={4}>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                By Gender\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                name=\"gender\"\n                value={gender}\n                onChange={ChangeOptionFilter}\n                label=\"Gender\"\n              >\n                <MenuItem value=\"All\">All</MenuItem>\n                <MenuItem value=\"Male\">Male</MenuItem>\n                <MenuItem value=\"Female\">Female</MenuItem>\n                <MenuItem value=\"Others\">Others</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={6} sm={4}>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                Paid Status\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                name=\"searchbypaidstatus\"\n                value={searchbypaidstatus}\n                onChange={ChangeOptionFilter}\n                label=\"Paid Status\"\n              >\n                <MenuItem value=\"All\">All</MenuItem>\n                <MenuItem value=\"paid\">Paid</MenuItem>\n                <MenuItem value=\"unpaid\">Unpaid</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n\n\n\n\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkerFilter;\n","import React from 'react'\n\nimport Pagination from '@material-ui/lab/Pagination';\n\nconst WorkersPaginate = ({itemsPerPage,totalItems,paginate}) => {\n\n    const [page, setPage] = React.useState(1);\n    const handleChange = (event, value) => {\n      setPage(value);     \n    };\n   \n    return (\n        <div className='paginateClass'>\n            <div>      \n                <Pagination count={Math.ceil(totalItems/itemsPerPage)}   onClick={paginate(page)} page={page} onChange={handleChange} color=\"secondary\"  className='paginateInner'/>       \n            </div>\n            <div >\n         \n               \n            </div>\n        </div>\n    )\n}\n\nexport default WorkersPaginate\n","import React, { useState, useContext } from \"react\";\nimport WorkersListMap from \"./WorkersListMap\";\nimport { Grid, Typography, makeStyles,Box } from \"@material-ui/core\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport Title from \"../SingleComponents/Title\";\nimport WorkerFilter from \"../FilterComponent/WorkerFilter\";\nimport WorkersPaginate from \"../SingleComponents/WorkersPaginate\";\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport Spinner from '../SingleComponents/Spinner'\nimport Mycsv from '../mycsv'\n\n\nimport { Link, Redirect } from \"react-router-dom\";\nimport \"../../App.css\";\nimport { myContext } from \"../../context\";\n\nconst isAuthenticated = () => {\n  const token = localStorage.getItem(\"item\");\n  return token && token.length > 10;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  pos: {\n    marginTop: 15,\n    width: \"95%\",\n    margin: \"auto\",\n  \n  },\n  addIcon: {\n    width: \"95%\",\n    marginTop: 30,\n    margin: \"auto\",\n    display: \"flex\",\n    justifyContent:'space-between',\n    alignItems: \"center\",\n    color: \"primary\",\n  },\n\n  AddIconLink: {\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n  },\n}));\n\nconst WorkersList = () => {\n  const classes = useStyles();\n  const isAlreadyAuthenticated = isAuthenticated();\n\n  const { sortedWorkersInfo, isSuperUserSummary, workersInfo,csvData,CsvWorkerDataFunc} = useContext(myContext);\n const workerscsvHeaders =  ['Id','First Name', 'Last Name','Naike Name','NaikePhone','Priority','Ngo','Duplicate','Gender','Age','Country','District','Municipality','Village','Ward','Phone','Category','Kiln Id','Children','Kiln','Kiln Address','Amount Paid','Amount Payer'] \n  const [currentPage, setCurrentPage] = useState(1);\n  const [workersPerPage] = useState(9);\n  if(!sortedWorkersInfo)\n  {\n    return <Spinner/>\n  }\n\n  const indexOfLastWorker = currentPage * workersPerPage;\n  const indexOfFirstWorker = indexOfLastWorker - workersPerPage;\n  const curretWorkers = sortedWorkersInfo.slice(\n    indexOfFirstWorker,\n    indexOfLastWorker\n  );\n\n  let sortedworkersInfoComp = curretWorkers.map((worker) => {\n    return <WorkersListMap worker={worker} key={worker.id} />;\n  });\n\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <div className='workerList-Section'>\n    \n      {isAlreadyAuthenticated ? (\n        <div>\n          {isSuperUserSummary() ? (\n            <span className={classes.addIcon}>\n              <Link to=\"/inputnewworker\" className={classes.AddIconLink}>\n                <AddCircleIcon color=\"primary\" fontSize=\"large\" />\n                <Typography\n                  className=\"addnewWorker\"\n                  color=\"primary\"\n                  component=\"h1\"\n                  variant=\"h6\"\n                >\n                  Add new worker\n                </Typography>\n              </Link>\n              <Link to=\"/summary\" className={classes.AddIconLink}>\n              \n                <Typography\n                  className=\"addnewWorker\"\n                  color=\"primary\"\n                  component=\"h1\"\n                  variant=\"h6\"\n                >\n                 \n                  Summary\n                </Typography>\n                <ArrowRightAltIcon color=\"primary\" fontSize=\"large\" />\n              </Link>\n            </span>\n          ) : (\n            \"\"\n          )}\n          <Title title=\"Workers List\" />\n          <WorkerFilter />\n          <Box>\n          <Typography variant='h5' className='SelectedWorkers'>Selected <strong className='sortedOutof'>{sortedWorkersInfo.length}</strong> out of <strong className='sortedOutoflength'>{workersInfo.length}</strong> workers</Typography>\n          </Box>\n          <div className={classes.pos}>\n            <Grid container spacing={2}>\n              {sortedworkersInfoComp}\n            </Grid>\n          </div>\n\n         <div className='CsvBtnSec'>\n            <WorkersPaginate\n                itemsPerPage={workersPerPage}\n                totalItems={sortedWorkersInfo.length}\n                paginate={paginate}\n                csvData = {csvData}\n                csvFunc = {CsvWorkerDataFunc}\n                csvheader = {workerscsvHeaders}\n              />\n             <div className='csvbtn'>\n             <Mycsv/>\n             </div>\n         </div>\n        </div>\n      ) : (\n        <Redirect to={{ pathname: \"/login\" }} />\n      )}\n    </div>\n  );\n};\n\nexport default WorkersList;\n","import Title from \"../SingleComponents/Title\";\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { scroller } from \"react-scroll\";\nimport { Button, Grid, Container,InputLabel,MenuItem,FormControl,Select } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n}));\n\n\n\nconst WorkersInfoInputComp = ({\n  SubmitHandler,\n  valuea,\n  InputHandler,\n  kilnlist,\n  InputHandlerKiln,\n}) => {\n  const classes = useStyles();\n\n  const scrollToElement=(element)=>{\n    scroller.scrollTo(element,{\n\n     duration:1000,\n     delay:100,\n     smooth:true,\n\n    })\n  }\n\n\n  let kilnOption = kilnlist.map((kiln) => {\n    return (\n      <MenuItem key={kiln.id} value={kiln.id}>\n        {kiln.name}, {kiln.address}\n      </MenuItem>\n    );\n  });\n\n\n\n  return (\n    <Container maxWidth=\"sm\" component=\"main\">\n      <div className={classes.paper}>\n       \n          <Title title=\"Add Worker\" />\n      \n        <form className={classes.form} action=\"\" onSubmit={SubmitHandler}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"f_name\"\n                value={valuea.f_name}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Firstname\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"l_name\"\n                value={valuea.l_name}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Lastname\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                name=\"naike_name\"\n                value={valuea.naike_name}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Naike name\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                margin=\"normal\"\n                name=\"age\"\n                value={valuea.age}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Age\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                name=\"country\"\n                value={valuea.country}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Country\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                name=\"district\"\n                value={valuea.district}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter District\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                name=\"municipality\"\n                value={valuea.municipality}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Municipality\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                name=\"ward\"\n                value={valuea.ward}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Ward\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                name=\"category\"\n                value={valuea.category}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Category\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                name=\"phone\"\n                value={valuea.phone}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Phone\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <FormControl\n                variant=\"outlined\"\n                required\n                fullWidth\n                className={classes.formControl}\n              >\n                <InputLabel id=\"demo-simple-select-outlined-label\">\n                  Gender\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  value={valuea.gender}\n                  name=\"gender\"\n                  onChange={InputHandler}\n                  label=\"gender\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                >\n                  <MenuItem value=\"MALE\">Male</MenuItem>\n                  <MenuItem value=\"FEMALE\">Female</MenuItem>\n                  <MenuItem value=\"OTHERS\">Others</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n\n\n\n            <Grid item xs={12} sm={12}>\n              <FormControl\n                variant=\"outlined\"\n                fullWidth\n                required\n                className={classes.formControl}\n              >\n                <InputLabel id=\"demo-simple-select-outlined-label\">\n                  Kiln Name\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  value={valuea.kiln_id}\n                  name=\"kiln_id\"\n                  onChange={InputHandlerKiln}\n                  label=\"kiln\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                >\n                  {kilnOption}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n\n          <Button\n            onClick={()=>scrollToElement(\"Home\")}\n            className={classes.submit}\n            fullWidth\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Submit\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nexport default WorkersInfoInputComp;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Axiosapi from \"../SingleComponents/Axiosapi\";\n\nimport { myContext } from \"../../context\";\n\nimport WorkersInfoInputComp from \"./WorkersInfoInputComp\";\n\nconst isAuthenticated = () => {\n  const token = localStorage.getItem(\"item\");\n  return token && token.length > 10;\n};\n\nconst WorkersInfoInput = () => {\n  const {\n    workersInfo,\n    WorkerNewStatefunc,\n    kilnInfo,\n    alertData,\n    AlertFunc,\n  } = useContext(myContext);\n  const isAlreadyAuthenticated = isAuthenticated();\n\n  const workers = {\n    f_name: \"\",\n    l_name: \"\",\n    naike_name: \"\",\n    naike_l_name: \"\",\n    gender: \"\",\n    age: \"\",\n    country: \"\",\n    district: \"\",\n    municipality: \"\",\n    ward: \"\",\n    category: \"\",\n    phone: \"\",\n    salary: \"\",\n    kiln_id: \"\",\n    extra: null,\n    children: []\n  };\n\n  const [valuea, setValue] = useState(workers);\n  const [workerInfoValue, setworkerInfoValue] = useState(workersInfo);\n  const [alertInfo, setalertInfo] = useState(alertData);\n\n  const InputHandler = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    value = value.toUpperCase();\n\n    setValue((prevState) => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const InputHandlerKiln = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    setValue((prevState) => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  useEffect(() => {\n    WorkerNewStatefunc([...workerInfoValue]);\n  }, [workerInfoValue]);\n\n  useEffect(() => {\n    AlertFunc(alertInfo);\n  }, [alertInfo]);\n\n  const genCode = (valuea, codes) => {\n    const code = `${valuea.f_name.substr(0, 2)}${valuea.l_name.substr(0, 2)}-${valuea.gender[0]}-${valuea.age}`.toUpperCase();\n    let c = code;\n    let i = 1;\n    while( codes[c] ){\n      c = `${code}-${i}`;\n      i++;\n    }\n    return c;\n  };\n\n  const SubmitHandler = (e) => {\n    e.preventDefault();\n\n    const codes = workerInfoValue.reduce((acc,curr)=>{\n      acc[curr.code] = true;\n      return acc;\n    }, {});\n    valuea.code =  genCode(valuea, codes);\n    \n    Axiosapi({\n      method: \"POST\",\n      url: \"workers/\",\n      data: valuea,\n    })\n      .then((res) => {\n        valuea.id = res.data.id;\n        valuea.kiln = kilnInfo.find((e) => e.id === valuea.kiln_id);\n        setworkerInfoValue([...workerInfoValue, valuea]);\n        if (res.status === 201 && res.statusText === \"Created\") {\n          setalertInfo({ type: \"success\", msg: \"Worker saved\" });\n        }\n      })\n      .catch((err) => {\n        setalertInfo({\n          type: \"error\",\n          msg: \"Something went wrong. Please try again.\",\n        });\n      });\n\n    setValue(workers);\n  };\n\n  return (\n    <div className='workerInputSection'>\n      {isAlreadyAuthenticated ? (\n        <div>\n          <WorkersInfoInputComp\n            kilnlist={kilnInfo}\n            InputHandlerKiln={InputHandlerKiln}\n            InputHandler={InputHandler}\n            SubmitHandler={SubmitHandler}\n            valuea={valuea}\n          />\n        </div>\n      ) : (\n        <Redirect to={{ pathname: \"login\" }} />\n      )}\n    </div>\n  );\n};\n\nexport default WorkersInfoInput;\n","import React, { Component } from 'react'\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button, Grid, Container } from \"@material-ui/core\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Title from '../SingleComponents/Title'\nimport {scroller} from 'react-scroll'\nimport Axiosapi from '../SingleComponents/Axiosapi'\n\n\nimport { myContext } from \"../../context\";\n\n\nclass EditWorkerCompRe extends Component {\n\nstate={\n    singleWorkerInfo:{},\n    id:this.props.match.params.id,\n    alertInfo:this.context.alertData\n\n\n}\n\n   componentDidMount(){\n\n      Axiosapi({\n        method:'GET',\n        url:`workers/${this.state.id}`\n      })\n      .then(res=>{\n        this.setState({singleWorkerInfo: res.data})\n      })\n      .catch((err) => console.log(err));\n\n   }\n\n   componentDidUpdate(prevProps,prevState){\n    \n     if( prevState.alertInfo !== this.state.alertInfo){\n    \n      this.context.AlertFunc(this.state.alertInfo);\n     }\n   }\n\n    scrollToElement=(element)=>{\n    scroller.scrollTo(element,{\n\n     duration:1000,\n     delay:100,\n     smooth:true,\n\n    })\n  }\n\n\n    InputHandler = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n  \n    value = value.toUpperCase()\n    const singleWorkerInfo = {...this.state.singleWorkerInfo, [name]: value}\n    this.setState({singleWorkerInfo})\n   }\n\n\n    InputHandlerKiln = (e)=>{\n    let name = e.target.name;\n    let value = e.target.value;\n   \n    const singleWorkerInfo = {...this.state.singleWorkerInfo, [name]: value}\n    this.setState({singleWorkerInfo})\n  \n    }\n\n\n     SubmitHandler = (e) => {\n        e.preventDefault();\n          Axiosapi({\n            method:'PUT',\n            url:`workers/${this.state.singleWorkerInfo.id}`,\n            data:this.state.singleWorkerInfo\n          })\n          .then(res=>{\n          \n            if (res.status === 200 && res.statusText === \"OK\") {\n              this.state.singleWorkerInfo.id = res.data.id;\n              this.state.singleWorkerInfo.kiln = this.context.kilnInfo.find(e => e.id === this.state.singleWorkerInfo.kiln_id);\n              this.context.WorkerEditStatefunc(this.state.singleWorkerInfo);\n              this.setState({alertInfo:{type: 'success', msg: 'Worker Updated Successfully'}})\n             }\n            })\n            .catch((err) => {\n              this.setState({alertInfo:{type: 'error', msg: 'Something went wrong. Please try again.'}})\n          })\n    \n\n       \n      };\n\n  \n\n\n    static contextType = myContext;\n    render() {\n       \n     const {kilnInfo} =  this.context\n     let kilnOption = kilnInfo.map((kiln)=>{\n        return   <MenuItem value={kiln.id}>{kiln.name}</MenuItem>\n    }) \n\n        return (\n            <Container  maxWidth=\"sm\" component=\"main\">\n            <div>\n             \n              <Title title='Update Worker'/>\n              <form action=\"\" onSubmit={this.SubmitHandler}>\n                <Grid container spacing={2}>\n             \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      name=\"f_name\"\n                      value={this.state.singleWorkerInfo.f_name}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter firstname\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      name=\"l_name\"\n                      value={this.state.singleWorkerInfo.l_name}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter lastname\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n        \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                     \n                      fullWidth\n                      margin=\"normal\"\n                      name=\"naike_name\"\n                      value={this.state.singleWorkerInfo.naike_name}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter naike_name\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                    \n                      fullWidth\n                      margin=\"normal\"\n                      name=\"country\"\n                      value={this.state.singleWorkerInfo.country}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter country\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n                \n      \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      margin=\"normal\"\n                      name=\"age\"\n                      value={this.state.singleWorkerInfo.age}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter age\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n              \n      \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                    \n                      fullWidth\n                      margin=\"normal\"\n                      name=\"district\"\n                      value={this.state.singleWorkerInfo.district}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter district\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                     \n                      fullWidth\n                      margin=\"normal\"\n                      name=\"municipality\"\n                      value={this.state.singleWorkerInfo.municipality}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter municipality\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                    \n                      fullWidth\n                      margin=\"normal\"\n                      name=\"ward\"\n                      value={this.state.singleWorkerInfo.ward}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter ward\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                    \n                      fullWidth\n                      margin=\"normal\"\n                      name=\"category\"\n                      value={this.state.singleWorkerInfo.category}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter category\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n      \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                    \n                      fullWidth\n                      name=\"phone\"\n                      value={this.state.singleWorkerInfo.phone}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter phone\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n      \n                  <Grid item xs={12} sm={12}>\n                    <FormControl\n                      variant=\"outlined\"\n                      fullWidth                   \n                    >\n                      <InputLabel id=\"demo-simple-select-outlined-label\">\n                        Gender\n                      </InputLabel>\n                     \n                      <Select\n                        labelId=\"demo-simple-select-outlined-label\"\n                        id=\"demo-simple-select-outlined\"\n                        value={this.state.singleWorkerInfo.gender}\n                        name=\"gender\"\n                        onChange={this.InputHandler}\n                        label=\"gender\"\n                        InputLabelProps={{\n                          shrink: true,\n                        }}\n                      >\n                        <MenuItem value='MALE'>MALE</MenuItem>\n                        <MenuItem value='FEMALE'>FEMALE</MenuItem>\n                        <MenuItem value='OTHERS'>OTHERS</MenuItem>                   \n                      </Select>\n                    </FormControl>\n                  </Grid>\n      \n                 \n                  <Grid item xs={12} sm={12}>\n                    <FormControl\n                      variant=\"outlined\"\n                      fullWidth                  \n                    >\n                      <InputLabel id=\"demo-simple-select-outlined-label\">\n                        Kiln Name\n                      </InputLabel>\n                      <Select\n                        labelId=\"demo-simple-select-outlined-label\"\n                        id=\"demo-simple-select-outlined\"\n                        value={this.state.singleWorkerInfo.kiln_id}\n                        name=\"kiln_id\"\n                        onChange={this.InputHandlerKiln}\n                        label=\"kiln\"\n                        InputLabelProps={{\n                          shrink: true,\n                        }}\n                      >\n                       {kilnOption}                     \n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n               \n                <Button    \n                onClick={()=>this.scrollToElement(\"Home\")}   \n                 className='editWorkerBtn'\n                  fullWidth\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Submit\n                </Button>\n              \n              </form>\n            </div>\n          </Container>\n        )\n    }\n}\n\n\nexport default EditWorkerCompRe\n","import React from 'react'\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button, Grid, Container } from \"@material-ui/core\";\nimport {scroller} from 'react-scroll'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Title from '../SingleComponents/Title'\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    form: {\n      width: \"100%\", // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n      textAlign: \"center\",\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n\n  }));\n\nconst KilnInfoInputComp = ({InputHandler,SubmitHandler,valuea})=> {\n\n    const classes = useStyles();\n    const scrollToElement=(element)=>{\n      scroller.scrollTo(element,{\n  \n       duration:1000,\n       delay:100,\n       smooth:true,\n  \n      })\n    }\n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n      <div className={classes.paper}>\n      \n        <Title title='Add Kiln'/>\n        <form className={classes.form} action=\"\" onSubmit={SubmitHandler}>\n          <Grid container spacing={1}>\n            <Grid item xs={12} >\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"name\"\n                value={valuea.name}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Kilnname\"\n              />\n            </Grid>\n            <Grid item xs={12} >\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"address\"\n                value={valuea.address}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Kilnaddress\"\n              />\n            </Grid>\n\n\n           \n\n            </Grid>\n            <Button   \n           onClick={()=>scrollToElement(\"Home\")} \n            className={classes.submit}\n            fullWidth\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Submit\n          </Button>\n        </form>\n        </div>\n    </Container>\n    )\n}\n\nexport default KilnInfoInputComp\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport KilnInfoInputComp from \"./KilnInfoInputComp\";\nimport Axiosapi from '../SingleComponents/Axiosapi'\nimport { myContext } from \"../../context\";\n\nconst isAuthenticated = () => {\n  const token = localStorage.getItem(\"item\");\n  return token && token.length > 10;\n};\n\n\nconst KilnInfoInput = () => {\n  const kiln = {\n    name: \"\",\n    address: \"\",\n  };\n\n  const { KilnNewStatefunc, kilnInfo ,alertData,AlertFunc} = useContext(myContext);\n  const [kilnInfoValue, setkilnInfoValue] = useState(kilnInfo);\n  const [valuea, setValue] = useState(kiln);\n  const [alertInfo, setalertInfo] = useState(alertData);\n\n\n  const isAlreadyAuthenticated = isAuthenticated();\n\n  const InputHandler = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    value = value.toUpperCase();\n    setValue((prevState) => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n\n  useEffect(() => {\n    KilnNewStatefunc([...kilnInfoValue]);\n  }, [kilnInfoValue]);\n\n  useEffect(() => {\n    AlertFunc(alertInfo);\n  },[alertInfo]);\n\n  const SubmitHandler = (e) => {\n    e.preventDefault();\n\n\n      Axiosapi({\n        method:'POST',\n        url:'kiln/',\n        data:valuea\n      })\n     .then(res =>\n       {\n        valuea.id = res.data.id;\n        setkilnInfoValue([...kilnInfoValue, valuea]);\n        if (res.status === 201 && res.statusText === \"Created\") {\n          setalertInfo({type: 'success', msg: 'Kiln saved'})\n         }\n        })\n        .catch((err) => {\n        setalertInfo({type: 'error', msg: 'Something went wrong. Please try again.'})\n      })\n\n\n      setValue(kiln)\n  }\n\n  return (\n    <div>\n      {isAlreadyAuthenticated ? (\n        <div>\n          <KilnInfoInputComp\n            InputHandler={InputHandler}\n            SubmitHandler={SubmitHandler}\n            valuea={valuea}\n          />\n        </div>\n      ) : (\n        <Redirect to={{ pathname: \"login\" }} />\n      )}\n    </div>\n  );\n};\n\nexport default KilnInfoInput;\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { scroller } from \"react-scroll\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { myContext } from \"../../context\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 8,\n  },\n  posBtn: {\n    marginTop: 10,\n  },\n});\n\nconst KilnListMap = ({ kiln }) => {\n  const classes = useStyles();\n  const { deleteKiln, isSuperUser } = useContext(myContext);\n\n  const scrollToElement = (element) => {\n    scroller.scrollTo(element, {\n      duration: 1000,\n      delay: 100,\n      smooth: true,\n    });\n  };\n\n  return (\n    <Grid item xs={12} sm={6} md={4}>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {kiln.name}\n          </Typography>\n\n          {isSuperUser() ? (\n            <Button\n              onClick={() => {\n                deleteKiln(kiln.id);\n                scrollToElement(\"Home\");\n              }}\n              className={classes.posBtn}\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              Delete\n            </Button>\n          ) : null}\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default KilnListMap;\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport { myContext } from \"../../context\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  inputSection: {\n    width: \"95%\",\n    margin: \"auto\",\n  },\n}));\n\nconst KilnFilter = () => {\n  const classes = useStyles();\n\n  const {searchbykiln,ChangeOptionFilter} = useContext(myContext);\n\n  return (\n    <div>\n      <div className={classes.inputSection}>\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={6} >\n            <TextField\n              fullWidth\n              label=\"Search by Name\"\n              id=\"outlined-size-small\"\n              name=\"searchbykiln\"\n              value={searchbykiln}\n              onChange={ChangeOptionFilter}\n              variant=\"outlined\"\n             \n            />\n          </Grid>\n\n\n      \n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default KilnFilter;\n","import React,{useContext,useState} from 'react'\nimport KilnListMap from './KilnListMap'\nimport { Grid, Typography ,makeStyles,Box} from \"@material-ui/core\";\nimport {myContext} from '../../context'\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport KilnFilter from '../FilterComponent/KilnFilter'\nimport WorkersPaginate from '../SingleComponents/WorkersPaginate'\nimport Spinner from '../SingleComponents/Spinner'\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport {Link, Redirect} from 'react-router-dom'\n\nimport Title from '../SingleComponents/Title'\n\n\n\nconst useStyles = makeStyles({\n  \n    pos: {\n      marginTop: 30,\n      width: \"95%\",\n      margin: \"auto\",\n     \n    },\n\n    addIcon: {\n      width: \"95%\",\n      marginTop: 30,\n      margin: \"auto\",\n      display: \"flex\",\n      justifyContent:'space-between',\n      alignItems: \"center\",\n      color: \"primary\",\n    },\n\n    AddIconLink:{\n      display: \"flex\",\n      alignItems: \"center\",\n      textDecoration:'none'\n    }\n  });\n\n  const isAuthenticated = () => {\n    const token = localStorage.getItem(\"item\");\n    return token && token.length > 10;\n  };\n\n\nconst KilnList = () =>  {\n    const classes = useStyles()\n    const isAlreadyAuthenticated = isAuthenticated();\n\n    const {sortedkilnInfo,isSuperUserSummary,kilnInfo} = useContext(myContext)\n    const [currentPage,setCurrentPage] = useState(1)\n    const [kilnsPerPage] = useState(9)\n    if(!sortedkilnInfo)\n  {\n    return <Spinner/>\n  }\n    const indexOfLastKiln = currentPage * kilnsPerPage;\n    const indexOfFirstKiln  = indexOfLastKiln - kilnsPerPage\n    const curretKilns = sortedkilnInfo.slice(indexOfFirstKiln,indexOfLastKiln)\n\n    let kilnInfoComp = curretKilns.map(kiln=>{\n        return <KilnListMap kiln={kiln} key = {kiln.id}/>\n    })\n\n    const paginate = (pageNumber) => {\n      setCurrentPage(pageNumber)\n    }\n  \n\n    return (\n      <div  className='kilnList-Section'>\n\n     {isAlreadyAuthenticated ? \n      <div>\n{ isSuperUserSummary() ? \n        <span className={classes.addIcon}>\n          <Link to=\"/kiln\" className={classes.AddIconLink}>\n            <AddCircleIcon color=\"primary\" fontSize=\"large\" />\n          <Typography  className=\"addnewWorker\" color=\"primary\" component=\"h1\" variant=\"h6\">\n            Add new kiln\n          </Typography>\n          </Link>\n          <Link to=\"/summary\" className={classes.AddIconLink}>\n              \n                <Typography\n                  className=\"addnewWorker\"\n                  color=\"primary\"\n                  component=\"h1\"\n                  variant=\"h6\"\n                >\n                 \n                  Summary\n                </Typography>\n                <ArrowRightAltIcon color=\"primary\" fontSize=\"large\" />\n              </Link>\n        </span> : null\n}\n        <Title title='Kiln List'/>\n        <KilnFilter/>\n        <Box>\n          <Typography variant='h5' className='SelectedWorkers'>Selected <strong className='sortedOutof'>{sortedkilnInfo.length}</strong> out of <strong className='sortedOutoflength'>{kilnInfo.length}</strong> kilns</Typography>\n        </Box>\n        <div className={classes.pos}>    \n              <Grid container spacing={2}>\n                      {kilnInfoComp}\n            </Grid>\n        </div>\n        <WorkersPaginate\n        itemsPerPage={kilnsPerPage} \n        totalItems={sortedkilnInfo.length}\n        paginate={paginate}\n     \n        />\n\n      </div> : <Redirect to={{pathname:'login'}}/>\n      }\n      </div>\n    )\n}\n\nexport default KilnList\n","import React, { Component } from 'react'\nimport Axiosapi from './Axiosapi'\nimport Title from './Title'\nimport {myContext} from '../../context'\nimport {Card,Typography} from '@material-ui/core';\nimport Spinner from './Spinner'\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport {Redirect,Link} from 'react-router-dom'\n\n\n\nconst isAuthenticated = () => {\n    const token = localStorage.getItem(\"item\");\n    return token && token.length > 10;\n  };\n\nclass NgosList extends Component {\n\n   \n    state={\n        ngos :this.context.ngos,\n    }\n\n    static contextType = myContext;\n    render() {\n        const {isSuperUserSummary} = this.context\n        const {ngos} = this.state\n        const isAlreadyAuthenticated = isAuthenticated();\n\n        if(!ngos){\n            return <Spinner/>\n        }\n        const {workersInfo} = this.context\n       \n        let ngolist = ngos.map(ngo=>{\n        return <Card key={ngo.uuid} style={{'margin-bottom':'.5em', 'padding': '1em'}}>\n             <Typography key={ngo.uuid}>{ngo.name}</Typography>\n             <div style={{'margin-top': '.5em'}}>\n                <a href={`#register?ngo=${ngo.uuid}`} className='registerLink'>\n                Registration link\n                </a>\n            </div>\n            </Card>\n        })\n\n        return (\n            <div className='ngolist-Section'>\n               {\n                   isSuperUserSummary() ? \n                   <div className='ngosummaryLink'>\n                   <Link to=\"/summary\" >\n                 \n                 <Typography\n                   className=\"ngosummarytext\"\n                   color=\"primary\"\n                   component=\"h1\"\n                   variant=\"h6\"\n                 >\n                  \n                   Summary\n                 </Typography>\n               </Link>\n                 <ArrowRightAltIcon color=\"primary\" fontSize=\"large\" />\n                   </div> : ''\n               }\n                { isAlreadyAuthenticated ? \n            <div className='ngoSection'>\n                <Title title='NgoList'/>\n                <div className='ngoInnerSection'>\n                    {ngolist}\n                </div>\n            </div> : <Redirect to={{pathname:'/login'}}/>}\n            </div>\n        )\n    }\n}\n\nexport default NgosList\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Title from \"./Title\";\nimport { myContext } from \"../../context\";\nimport { Redirect } from \"react-router-dom\";\n\nimport {\n  Button,\n  Grid,\n  InputLabel,\n  MenuItem,\n  FormControl,\n  Select,\n  Typography,\n  Box,\n} from \"@material-ui/core\";\n\nconst isAuthenticated = () => {\n  const token = localStorage.getItem(\"item\");\n  return token && token.length > 10;\n};\n\nclass NewSummary extends Component {\n  state = {\n    allworkers: [],\n    summary: \"district\",\n    ga: {},\n    kpis: {},\n    max_amount: 0,\n    total: {\n      amount: 0,\n      workers: 0,\n    },\n  };\n\n  componentDidMount() {\n    this.setState({ allworkers: this.context.workersInfo }, () =>\n      this.getSummaryFunc()\n    );\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.summary !== this.state.summary) {\n      this.getSummaryFunc();\n    }\n  }\n\n  isAlreadyAuthenticated = isAuthenticated();\n\n  getSummaryFunc = () => {\n    const summarystate = this.state.summary;\n    const getProp = (v, k) => {\n      if (k !== \"ngo\") return v[k];\n      return v.extra.payment.amountpayer.ngo.name;\n    };\n\n    const workers = this.state.allworkers.filter(\n      (e) => e.extra && e.extra.payment\n    );\n\n    const group = (workers, key) => {\n      return workers.reduce((acc, cur) => {\n        const k = getProp(cur, key);\n        if (!acc[k]) acc[k] = [];\n        acc[k].push(cur);\n        return acc;\n      }, {});\n    };\n\n    const paymentSum = (workers) =>\n      workers.reduce(\n        (acc, cur) => acc + parseFloat(cur.extra.payment.amount),\n        0\n      );\n\n    const ga = group(workers, summarystate);\n    this.setState({\n      ga,\n      total: {\n        amount: paymentSum(workers),\n        workers: workers.length,\n      },\n    });\n\n    const kpis = {};\n    for (const k in ga) {\n      const nest = group(\n        ga[k],\n        summarystate == \"district\" ? \"ngo\" : \"district\"\n      );\n      const nkpis = {};\n      for (const k2 in nest) {\n        nkpis[k2] = {\n          name: k2,\n          value: paymentSum(nest[k2]),\n        };\n      }\n      kpis[k] = {\n        name: k,\n        value: paymentSum(ga[k]),\n        nest: {\n          g: nest,\n          nkpis,\n        },\n      };\n    }\n    this.setState({ kpis });\n\n    const max_amount = Math.max(...Object.values(kpis).map((e) => e.value));\n    this.setState({ max_amount });\n  };\n\n  InputHandler = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    this.setState({ [name]: value });\n  };\n\n  static contextType = myContext;\n  render() {\n    return (\n      <div>\n        {this.isAlreadyAuthenticated ? (\n          <div className=\"newSummary\">\n            <Title title=\"Summary\" />\n            <div className='mysum'>\n              <Grid item xs={12} sm={12}>\n                <FormControl\n                  variant=\"outlined\"\n                  fullWidth\n                  className='Summarydrop'\n                >\n                  <InputLabel id=\"demo-simple-select-outlined-label\">\n                    Summary\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    value={this.state.summary}\n                    name=\"summary\"\n                    onChange={this.InputHandler}\n                    label=\"Summamry\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  >\n                    <MenuItem name=\"district\" value=\"district\">\n                      District\n                    </MenuItem>\n                    <MenuItem name=\"ngo\" value=\"ngo\">\n                      Ngo\n                    </MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </div>\n            <div>\n              <Typography className='summaryTotalamount' style={{marginTop:'20px'}}>\n                Rs.{this.state.total.amount.toLocaleString(\"en-hi\")} paid to <span></span>\n                {this.state.total.workers.toLocaleString(\"en-hi\")} of <span></span>\n                {this.state.allworkers.length.toLocaleString(\"en-hi\")} workers\n              </Typography>\n            </div>\n            <div style={{ width: \"100%\" }}>\n              {Object.entries(this.state.ga).map(([k, workers], i) => {\n                return (\n                  <div key={i}>\n                    <OuterAmountBar>\n                      <Box mb={2}>\n                        <Typography variant=\"h6\">{k}</Typography>\n\n                        <Typography>\n                          Rs.{this.state.kpis[k].value.toLocaleString(\"en-hi\")}{\" \"}\n                          paid to {workers.length.toLocaleString(\"en-hi\")}{\" \"}\n                          workers\n                        </Typography>\n                        <div\n                          className=\"pay-bar\"\n                          style={{\n                            width: `${\n                              (this.state.kpis[k].value /\n                                this.state.max_amount) *\n                              100\n                            }%`,\n                            marginBottom: \".5em\",\n                          }}\n                        ></div>\n                      </Box>\n                      {Object.entries(this.state.kpis[k].nest.nkpis).map(\n                        ([k2], i) => {\n                          return (\n                            <div key={i}>\n                              <Box my={1}>\n                                <Typography>{k2}</Typography>\n                                <Typography variant=\"body2\">\n                                  Rs.\n                                  {this.state.kpis[k].nest.nkpis[\n                                    k2\n                                  ].value.toLocaleString(\"en-hi\")}{\" \"}\n                                  paid to{\" \"}\n                                  {this.state.kpis[k].nest.g[\n                                    k2\n                                  ].length.toLocaleString(\"en-hi\")}{\" \"}\n                                  workers\n                                </Typography>\n                                <div\n                                  className=\"pay-bar\"\n                                  style={{\n                                    width: `${\n                                      (this.state.kpis[k].nest.nkpis[k2].value /\n                                        this.state.max_amount) *\n                                      100\n                                    }%`,\n                                    height: \"10px\",\n                                  }}\n                                ></div>\n                              </Box>\n                            </div>\n                          );\n                        }\n                      )}\n                    </OuterAmountBar>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        ) : (\n          <Redirect to={{ pathname: \"/login\" }} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst OuterAmountBar = styled.div`\n  width: ${(props) => (props.width ? props.width : \"\")};\n\n  border-radius: 5px;\n  margin: 20px 0;\n  padding: 10px;\n  background-color: aliceblue;\n\n  .pay-bar {\n    background-color: orange;\n    height: 15px;\n    transition: 0.5s ease all;\n    text-align: center;\n    color: white;\n    border-radius: 5px;\n    padding: 3px 0;\n  }\n`;\n\nexport default NewSummary;\n","import React, { Component } from 'react'\n\nclass LoadingScreen extends Component {\n    render() {\n        return (\n            <div className='loadingscreen'>\n              <div>\n              <h1>Syncing offline data...</h1>\n              </div>\n            </div>\n        )\n    }\n}\n\nexport default LoadingScreen\n","import React, { useContext } from \"react\";\nimport \"./App.css\";\n\nimport Mycsv from './components/mycsv'\n\nimport Home from \"./components/SingleComponents/Home\";\nimport Login from \"./components/SingleComponents/Login\";\nimport Logout from \"./components/SingleComponents/Logout\";\nimport Register from \"./components/SingleComponents/Register\";\nimport Error from \"./components/SingleComponents/Error\";\nimport Navbar from \"./components/SingleComponents/Navbar\";\nimport ModalPayment from \"./components/SingleComponents/ModalPayment\";\nimport Spinner from './components/SingleComponents/Spinner'\n\nimport WorkersList from \"./components/WorkerComponent/WorkersList\";\nimport WorkersInfoInput from \"./components/WorkerComponent/WorkersInfoInput\";\nimport EditWorkerCompRe from \"./components/WorkerComponent/EditWorkerCompRe\";\n\nimport KilnInfoInput from \"./components/KilnComponent/KilnInfoInput\";\nimport KilnList from \"./components/KilnComponent/KilnList\";\n\nimport NgosList from \"./components/SingleComponents/NgosList\";\nimport NewSummary from './components/SingleComponents/NewSummary'\nimport LoadingScreen from './components/SingleComponents/LoadingScreen'\n\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {IconButton,Collapse} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Element } from \"react-scroll\";\nimport { myContext } from \"./context\";\n\n    const isAuthenticated = () => {\n      const token = localStorage.getItem(\"item\");\n      return token && token.length > 10;\n    };\n\nfunction App() {\n  const { alertData, isSuperUser, AlertFunc, user, ModalData,syncing } = useContext(myContext);\n  const isAlreadyAuthenticated = isAuthenticated();\n\n  if(isAlreadyAuthenticated){\n    if( !user )return <Spinner></Spinner>;\n  }\n\n  const alert = alertData ? (\n    <Collapse in={true}>\n      <Alert\n        action={\n          <IconButton\n            aria-label=\"close\"\n            color=\"inherit\"\n            size=\"small\"\n            onClick={() => {\n              AlertFunc(null)\n            }}\n          >\n            <CloseIcon fontSize=\"inherit\" />\n          </IconButton>\n        }\n        severity={alertData.type}\n      >\n        {alertData.msg}\n      </Alert>\n    </Collapse>\n  ) : null;\n\n  const super_user_routes = isSuperUser() ? (\n    <Route exact path=\"/workers/:id/\" component={EditWorkerCompRe} />\n  ) : null;\n\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Element name=\"Home\">\n          <Navbar />\n        </Element>\n\n        {alert}\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/inputnewworker\" component={WorkersInfoInput} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/logout\" component={Logout} />\n          <Route exact path=\"/kiln\" component={KilnInfoInput} />\n          <Route exact path=\"/workers\" component={WorkersList} />\n          <Route exact path=\"/ngos\" component={NgosList} />\n          <Route exact path=\"/kilnlist\" component={KilnList} />\n          <Route exact path=\"/csv\" component={Mycsv} />\n          <Route exact path=\"/summary\" component={NewSummary} />\n          {super_user_routes}\n          <Route component={Error} />\n        </Switch>\n        {ModalData ? <ModalPayment/> : null}\n       {syncing ?  <LoadingScreen/> : null }\n      </HashRouter>\n    </div>\n  );\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {ContextProvider} from './context'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n    <App />\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif(process.env.NODE_ENV === 'production'){\n  serviceWorker.register();\n}else{\n  serviceWorker.unregister();\n}\n\n"],"sourceRoot":""}