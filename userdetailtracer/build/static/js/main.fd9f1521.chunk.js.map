{"version":3,"sources":["components/Home.js","components/Axiosapi.js","components/Login.js","components/Error.js","context.js","components/Register.js","components/Logout.js","components/WorkersListMap.js","components/Title.js","components/FilterComponent/WorkerFilter.js","components/WorkersPaginate.js","components/WorkersList.js","components/WorkersInfoInputComp.js","components/WorkersInfoInput.js","components/Navbar.js","components/KilnInfoInputComp.js","components/KilnInfoInput.js","components/KilnListMap.js","components/FilterComponent/KilnFilter.js","components/KilnList.js","components/EditWorkerCompRe.js","components/ModalPayment.js","components/NgoListMap.js","components/NgosList.js","App.js","serviceWorker.js","index.js"],"names":["Home","to","pathname","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","axios","create","baseURL","process","headers","Authorization","JSON","parse","localStorage","getItem","Login","state","userInfo","username","first_name","last_name","email","password","InputHandle","e","value","target","setState","prevState","login","preventDefault","method","url","data","then","res","setItem","stringify","token","window","location","href","catch","err","console","log","isAuthenticated","isAlreadyAuthenticated","this","classes","props","Container","maxWidth","component","Box","mt","className","paper","my","Avatar","avatar","mb","Typography","variant","form","onSubmit","Grid","container","spacing","item","xs","TextField","autoComplete","required","fullWidth","onChange","id","label","autoFocus","type","Button","color","submit","justify","React","Component","withStyles","theme","display","flexDirection","alignItems","backgroundColor","width","Error","myContext","createContext","ContextProvider","workersInfo","sortedWorkersInfo","singleWorkerInfo","editWorkerInfoId","kilnInfo","sortedkilnInfo","kname","gender","searchbyworkername","searchbycountry","searchbydistrict","searchbymunicipality","searchbyward","searchbyworkercategory","searchbynaike_f_name","searchbykilnname","mobileNav","searchbykiln","searchbykilnlocation","searchbykilnowner","ModalStatus","ModalData","alertData","user","fetchAllData","Axiosapi","get","hookState","KilnNewStatefunc","newState","WorkerNewStatefunc","WorkerEditStatefunc","worker","idx","findIndex","splice","ChangeOptionFilter","filterAllOptions","filterKilnData","tempWorkersInfo","search","toLowerCase","filter","f_name","includes","naike_f_name","startsWith","district","municipality","category","kiln","tempkilnInfo","address","OpenNavMenu","CloseNavMenu","filterByIdworker","filterByIdkiln","deleteWorker","status","statusText","msg","filteredWorker","deleteKiln","filteredKiln","isSuperUser","is_superuser","OpenModal","modaldata","CloseModal","AlertFunc","Provider","SearchWorkerName","EditWorker","children","Register","Consumer","ngo","parseInt","toString","alertInfo","context","register","prevProps","sm","contextType","Logout","removeItem","useStyles","makeStyles","root","minWidth","title","fontSize","pos","marginBottom","buttonMargin","marginTop","marginRight","WorkersListMap","useContext","md","Card","CardContent","gutterBottom","l_name","age","ward","phone","onClick","Title","formControl","margin","selectEmpty","inputSection","WorkerFilter","categorylist","map","categoryOption","Set","sort","index","MenuItem","key","districtlist","districtOption","municipalitylist","municipalityOption","kilnlist","kilnOption","FormControl","InputLabel","Select","labelId","WorkersPaginate","itemsPerPage","totalItems","paginate","useState","page","setPage","Pagination","count","Math","ceil","event","addIcon","AddIconLink","textDecoration","WorkersList","currentPage","setCurrentPage","workersPerPage","indexOfLastWorker","indexOfFirstWorker","sortedworkersInfoComp","slice","pageNumber","WorkersInfoInputComp","SubmitHandler","valuea","InputHandler","InputHandlerKiln","action","InputLabelProps","shrink","naike_l_name","country","workercategory","kiln_id","element","scroller","scrollTo","duration","delay","smooth","WorkersInfoInput","workers","salary","extra","setValue","workerInfoValue","setworkerInfoValue","setalertInfo","useEffect","toUpperCase","find","Navbar","AppBar","position","Toolbar","edge","textAlign","KilnInfoInputComp","KilnInfoInput","kilnInfoValue","setkilnInfoValue","posBtn","KilnListMap","KilnFilter","KilnList","kilnsPerPage","indexOfLastKiln","indexOfFirstKiln","kilnInfoComp","EditWorkerCompRe","match","params","ModalPayment","amount","timeofpay","amountpayer","setPaymentData","setAmount","placeholder","helperText","style","paymentdata","Date","toLocaleDateString","handleSubmit","NgoListMap","NgosList","ngos","ngolist","App","alert","Collapse","in","Alert","IconButton","aria-label","size","severity","super_user_routes","exact","path","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.fd9f1521.chunk.js","sourcesContent":["import React from 'react'\nimport { Redirect } from \"react-router-dom\";\n\n\n\n\n\nconst Home = () => {\n  \n    return (\n        <div>\n            <Redirect to ={{pathname:'workers'}} />\n            {/* home */}\n        </div>\n    )\n}\n\nexport default Home\n","import axios from 'axios'\n\nconst getCookie = (name) => {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n   \n    return cookieValue;\n};\n\nconst csrftoken = getCookie('csrftoken');\n\nexport default axios.create({\n    baseURL:`${process.env.REACT_APP_BASE_URL}/api`,\n    headers: {\n        'content-type':'application/json',\n        'X-CSRFToken':csrftoken,\n        Authorization:`Token ${JSON.parse(localStorage.getItem('item'))}`,\n       \n    }\n});\n\nexport {csrftoken}","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from 'axios'\nimport {csrftoken} from './Axiosapi'\nimport {\n  Grid,\n  Container,\n  Avatar,\n  Typography,\n  TextField,\n  Button,\n \n  Box,\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport \"../App.css\";\n\nconst styles = (theme) => ({\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    backgroundColor: \"#3f51b5\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n  },\n  submit: {},\n});\n\nclass Login extends React.Component {\n  state = {\n   userInfo:{\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n   }\n  };\n\n  InputHandle = (e) => {\n    let value = e.target.value;\n    let name = e.target.name;\n  \n    this.setState((prevState)=>{\n      return ({...prevState,[name]:value})\n    });\n  };\n\n  login = (e) => {\n    e.preventDefault();\n    \n      axios({\n        method:'POST',\n        headers: {\n          'X-CSRFToken':csrftoken\n      },\n        url : `${process.env.REACT_APP_BASE_URL}/auth/`,\n        data:this.state\n      })\n      .then(res=>{\n        localStorage.setItem(\"item\", JSON.stringify(res.data.token));\n      \n       \n       this.setState({})\n       window.location.href = ''\n      })\n      .catch((err) => console.log(err));\n\n\n  };\n\n  isAuthenticated = () => {\n    const token = localStorage.getItem(\"item\");\n    return token && token.length > 10;\n  };\n\n  render() {\n    const isAlreadyAuthenticated = this.isAuthenticated();\n    const { classes } = this.props;\n\n    return (\n      <div>\n        {isAlreadyAuthenticated ? (\n          <Redirect to={{ pathname: \"workers\" }} />\n        ) : (\n          <Container maxWidth=\"sm\" component=\"main\">\n            <Box component=\"div\" mt={10}>\n              <div className={classes.paper}>\n                <Box component=\"div\" my={1}>\n                  <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                  </Avatar>\n                </Box>\n                <Box component=\"div\" mb={2}>\n                  <Typography component=\"h1\" variant=\"h5\">\n                    Login\n                  </Typography>\n                </Box>\n                <form className={classes.form} onSubmit={this.login}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete=\"username\"\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        name=\"username\"\n                        value={this.state.username}\n                        onChange={this.InputHandle}\n                        id=\"userName\"\n                        label=\"User Name\"\n                        autoFocus\n                      />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        value={this.state.password}\n                        onChange={this.InputHandle}\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                      />\n                    </Grid>\n                  </Grid>\n                  <Box component=\"div\" my={3}>\n                    <Button\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.submit}\n                    >\n                      Login\n                    </Button>\n                  </Box>\n                </form>\n                <Grid container justify=\"flex-end\">\n                  <Grid item>\n                    <a href=\"#register\" className='registerLink'>\n                      Need an account? Register\n                    </a>\n                  </Grid>\n                </Grid>\n              </div>\n            </Box>\n          </Container>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Login);\n","import React from 'react'\n\nconst  Error = () => {\n    return (\n        <div>\n            hello from error page\n        </div>\n    )\n}\n\nexport default Error\n","import React, { Component } from \"react\";\nimport Axiosapi from './components/Axiosapi'\nconst myContext = React.createContext();\n\nclass ContextProvider extends Component {\n  state = {\n    workersInfo: [],\n    sortedWorkersInfo: [],\n    singleWorkerInfo: '',\n    editWorkerInfoId: '',\n    kilnInfo: [],\n    sortedkilnInfo: [],\n    kname: \"All\",\n    gender: \"All\",\n    searchbyworkername: '',\n    searchbycountry: '',\n    searchbydistrict:'All' ,\n    searchbymunicipality: 'All',\n    searchbyward: '',\n    searchbyworkercategory: 'All',\n    searchbynaike_f_name: '',\n    searchbykilnname: '',\n    mobileNav: false,\n    searchbykiln: '',\n    searchbykilnlocation: '',\n    searchbykilnowner: '',\n    ModalStatus:false,\n    ModalData:[],\n    alertData: null,\n    csrftoken:'',\n    user: null\n  };\n\n  componentDidMount() {\n    this.fetchAllData();\n  }\n\n  fetchAllData = () => {\n    Axiosapi.get('workers')\n    .then(res=>{\n    \n      this.hookState({ workersInfo: res.data, sortedWorkersInfo: res.data })\n    }) \n    .catch((err) => console.log(err));\n\n    Axiosapi.get('kiln')\n    .then(res=>{\n      this.hookState({ kilnInfo: res.data, sortedkilnInfo: res.data })\n    })\n    .catch((err) => console.log(err));\n\n    Axiosapi.get('user')\n    .then(res=>{\n      this.hookState({ user: res.data })\n    })\n    .catch((err) => console.log(err));\n  }\n\n  hookState = state => {\n    this.setState(state);\n  \n  }\n\n\n\n\n\n\n\n  KilnNewStatefunc =(newState)=> {\n          this.hookState({sortedkilnInfo:newState,kilnInfo:newState})\n  }\n\n  WorkerNewStatefunc =(newState)=> {\n    this.hookState({workersInfo:newState,sortedWorkersInfo:newState})\n  }\n\n  WorkerEditStatefunc =(worker)=> {\n    const workersInfo = this.state.workersInfo;\n    const idx = workersInfo.findIndex(e => e.id === worker.id);\n    if( idx > -1 ){\n      workersInfo.splice(idx, 1, worker);\n      this.hookState({workersInfo,sortedWorkersInfo: workersInfo});\n    }\n  }\n\n  ChangeOptionFilter = (e) => {\n    let value = e.target.value;\n    let name = e.target.name;\n  \n  \n    this.setState({ [name]: value }, () => {\n      this.filterAllOptions();\n      this.filterKilnData();\n    });\n  };\n\n  filterAllOptions = () => {\n    const {\n      kname,\n      workersInfo,\n      gender,\n      searchbyworkername,\n      \n      searchbydistrict,\n      searchbymunicipality,\n     \n      searchbyworkercategory,\n      searchbynaike_f_name,\n      \n    } = this.state;\n\n    let tempWorkersInfo = [...workersInfo];\n  \n    if (searchbyworkername !== null) {\n     const search = searchbyworkername.toLowerCase()\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return worker.f_name.toLowerCase().includes(search);\n      });\n    \n\n    }\n\n\n    if (searchbynaike_f_name !== null) {\n     const search = searchbynaike_f_name.toLowerCase()\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return worker.naike_f_name.toLowerCase().includes(search);\n      });\n     \n    }\n\n\n    if (gender !== \"All\") {\n     const search = gender.toLowerCase()\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return worker.gender && worker.gender.toLowerCase().startsWith(search);\n      });\n      \n    }\n\n   \n\n  \n\n    if (searchbydistrict !== \"All\") {\n      const search = searchbydistrict.toLowerCase()\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return worker.district.toLowerCase().includes(search);\n      });\n    }\n\n    if (searchbymunicipality !== \"All\") {\n      const search = searchbymunicipality.toLowerCase()\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return worker.municipality && worker.municipality.toLowerCase().includes(search);\n      });\n    }\n\n \n    if (searchbyworkercategory !== 'All') {\n    const search =  searchbyworkercategory.toLowerCase()\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return worker.category && worker.category.toLowerCase().includes(search);\n      });\n     \n    }\n\n    if (kname !== \"All\") {\n      const search = kname.toLowerCase()\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return worker.kiln.name.toLowerCase() === search;\n      });\n    }\n    \n    this.hookState({ sortedWorkersInfo: tempWorkersInfo });\n  };\n\n  filterKilnData = () => {\n    const {\n      kilnInfo,\n      searchbykiln,\n      searchbykilnlocation,\n     \n    } = this.state;\n\n    let tempkilnInfo = [...kilnInfo];\n\n    if (searchbykiln !== null) {\n      const search = searchbykiln.toLowerCase()\n      tempkilnInfo = tempkilnInfo.filter((kiln) => {\n        return kiln.name.toLowerCase().includes(search);\n      });\n    }\n\n    if (searchbykilnlocation !== null) {\n      const search = searchbykilnlocation.toLowerCase()\n      tempkilnInfo = tempkilnInfo.filter((kiln) => {\n        return kiln.address.toLowerCase().includes(search);\n      });\n    }\n\n\n    this.hookState({ sortedkilnInfo: tempkilnInfo });\n  };\n\n  OpenNavMenu = () => {\n    this.hookState({ mobileNav: true });\n  };\n\n  CloseNavMenu = () => {\n    this.hookState({ mobileNav: false });\n  };\n\n\n\n  filterByIdworker = (id) => {\n    let filteredList =this.state.workersInfo.filter(worker=>{\n      return worker.id !== id\n    })\n    return filteredList\n  }\n\n  filterByIdkiln = (id) => {\n    let filteredList =this.state.kilnInfo.filter(worker=>{\n      return worker.id !== id\n    })\n    return filteredList\n  }\n\n  deleteWorker = (id) => {\n\n      Axiosapi({\n        method:'DELETE',\n        url:`workers/${id}`,\n        \n      }).then(res=>{\n        if (res.status === 204 && res.statusText === \"No Content\") {\n        this.hookState({alertData:{type: 'success', msg: 'Worker deleted successfully'}})\n        let filteredWorker = this.filterByIdworker(id)\n        this.hookState({workersInfo:filteredWorker, sortedWorkersInfo:filteredWorker, searchbyworkername: '',\n        gender: 'All',\n        searchbydistrict:'All' ,\n        searchbymunicipality: 'All',  \n        searchbyworkercategory: 'All',\n        searchbynaike_f_name: '',\n        searchbykilnname: ''})\n      \n        }\n      })\n      .catch((err) => {\n        this.hookState({alertData:{type: 'error', msg: 'Something went wrong. Please try again.'}})\n      })\n      \n\n  };\n\n  deleteKiln = (id) => {\n\n      Axiosapi({\n        method:'DELETE',\n        url:`kiln/${id}`,\n        \n      }).then(res=>{\n        if (res.status === 204 && res.statusText === \"No Content\") {\n        this.hookState({alertData:{type: 'success', msg: 'Kiln deleted successfully'}})\n        let filteredKiln = this.filterByIdkiln(id)\n        this.hookState({kilnInfo:filteredKiln, sortedkilnInfo:filteredKiln, searchbykiln: '',\n        searchbykilnlocation: '',})\n       \n     \n        }\n      })\n      .catch((err) => {\n        this.hookState({alertData:{type: 'error', msg: 'Something went wrong. Please try again.'}})\n      })\n  };\n\n  isSuperUser = () => {\n      return this.state.user && this.state.user.is_superuser;\n  };\n\n\nOpenModal = (id) => {\n       \n        let modaldata =this.state.workersInfo.filter(worker=>{\n          return worker.id === id\n        })\n        console.log(modaldata)\n        this.hookState({ModalStatus:true,ModalData:modaldata})\n}\n\nCloseModal = (id) => {\n  this.hookState({ModalStatus:false})\n}\n\nAlertFunc = (res) => {\n  this.hookState({alertData:res})\n}\n\n\n  render() {\n    return (\n      <myContext.Provider\n        value={{\n          ...this.state,\n          ChangeOptionFilter: this.ChangeOptionFilter,\n          SearchWorkerName: this.SearchWorkerName,\n          EditWorker: this.EditWorker,\n          OpenNavMenu: this.OpenNavMenu,\n          CloseNavMenu: this.CloseNavMenu,\n          deleteWorker: this.deleteWorker,\n          deleteKiln:this.deleteKiln,\n          fetchAllData:this.fetchAllData,\n          KilnNewStatefunc:this.KilnNewStatefunc,\n          WorkerNewStatefunc:this.WorkerNewStatefunc,\n          WorkerEditStatefunc:this.WorkerEditStatefunc,\n          OpenModal:this.OpenModal,\n          CloseModal:this.CloseModal,\n          AlertFunc:this.AlertFunc,\n          isSuperUser: this.isSuperUser\n        }}\n      >\n        {this.props.children}\n      </myContext.Provider>\n    );\n  }\n}\nconst ContextConsumer = myContext.Consumer;\nexport { ContextProvider, myContext, ContextConsumer };\n","import React from \"react\";\nimport {Grid, Container,Avatar,Typography,TextField,Button,Box} from \"@material-ui/core\";\nimport { withStyles } from '@material-ui/styles';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport {csrftoken} from './Axiosapi'\nimport {Link, Redirect} from 'react-router-dom'\nimport axios from 'axios'\n\nimport { myContext } from \"../context\";\n\n\nconst styles = theme => ({\n    paper: {\n     \n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    avatar: {\n  \n    backgroundColor: '#3f51b5',\n    },\n    form: {\n      width: \"100%\", // Fix IE 11 issue.\n    \n    },\n    submit: {\n    \n    },\n  });\n\nclass Register extends React.Component {    \n    \n    state = {      \n           userInfo:{\n            username: \"\",\n            first_name:'',\n            last_name:'',\n            email:'',\n            password: \"\", \n            //ngo:''\n            ngo: parseInt(window.location.toString().split('ngo=')[1])\n           },\n           alertInfo:this.context.alertData\n    };\n\n    componentDidUpdate(prevProps,prevState){\n    \n      if( prevState.alertInfo !== this.state.alertInfo){\n       this.context.AlertFunc(this.state.alertInfo);\n      }\n    }\n    \n\n\n   register = (e) => {\n\n    e.preventDefault()\n  \n\n    axios({\n        method:'POST',\n        headers: {\n          'X-CSRFToken':csrftoken\n      },\n        url : `${process.env.REACT_APP_BASE_URL}/api/users/`,\n        data:this.state.userInfo\n      })\n      .then(res=>{\n       \n        if (res.status === 201 && res.statusText === \"Created\") {\n         \n          this.setState({alertInfo:{type: 'success', msg: 'Worker Registered Successfully.Please login to proceed.'}})\n          this.setState((prevState)=>{\n            return ({prevState, userInfo: this.state.userInfo})\n          })\n          window.location.href = `/#/login`\n         }\n        })\n        .catch((err) => {\n          this.setState({alertInfo:{type: 'error', msg: 'Something went wrong. Please try again.'}})\n      })\n    \n\n  };\n\n\n\n InputHandle = (e) => {\n     let value = e.target.value;\n     let name = e.target.name;\n      const {userInfo} = this.state;\n     this.setState({userInfo: {...userInfo, [name]:value}});\n   };\n\n\n   static contextType = myContext;\n  render(){\n    const { classes } = this.props;\n    if( !this.state.userInfo.ngo ){\n        return <Redirect to={{ pathname:'/login' }}/>\n    }\n\n  return (\n    <div>   \n    <Container maxWidth=\"sm\" component=\"main\">\n      <Box component='div' mt={5} >\n      <div className={classes.paper}>\n      <Box component='div' my={1} >\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        </Box>\n        <Box component='div' mb={2} >\n        <Typography component='h1' variant='h5'>\n           Register\n        </Typography>\n        </Box>\n        <form className={classes.form} onSubmit={this.register}>\n            <Grid container  spacing={2}>\n\n                <Grid item xs={12} sm={6}>\n                        <TextField\n                        autoComplete=\"username\"\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        \n                        name = 'username'\n                        value ={this.state.username}\n                        onChange={this.InputHandle}\n                        id=\"userName\"\n                        label=\"User Name\"\n                        autoFocus\n                        />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                        <TextField\n                        autoComplete=\"fname\"\n                        variant=\"outlined\"\n                       \n                        fullWidth\n                        \n                        name = 'first_name'\n                        value ={this.state.first_name}\n                        onChange={this.InputHandle}\n                        id=\"firstName\"\n                        label=\"First Name\"\n                        autoFocus\n                        />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                        <TextField\n                        autoComplete=\"lname\"\n                        variant=\"outlined\"\n                     \n                        fullWidth\n                        name = 'last_name'\n                        value ={this.state.last_name}\n                        onChange={this.InputHandle}\n                        id=\"lastName\"\n                        label=\"Last Name\"\n                        autoFocus\n                        />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    value ={this.state.email}\n                    onChange={this.InputHandle}\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                />\n                </Grid>\n\n\n\n                <Grid item xs={12}>\n                <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    value ={this.state.password}\n                    onChange={this.InputHandle}\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                />\n                </Grid>\n\n\n\n\n                <Grid item xs={12} sm={12}>\n              \n            </Grid>\n\n\n\n\n\n            </Grid>\n            <Box component='div' my={3} >\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n            >\n            Register\n          </Button>\n          </Box>\n\n\n        </form>\n        <Grid container  justify=\"flex-end\">\n            <Grid item>\n            <Link href=\"#login\" variant=\"body2\" >\n                Already have an account? Login\n              </Link>\n            </Grid>\n        </Grid>\n      </div></Box>\n    </Container>\n    </div>\n  );  }\n};\n\nexport default withStyles(styles)(Register);\n\n\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {Button} from '@material-ui/core'\n\nconst Logout = () => {\n  localStorage.removeItem(\"item\");\n\n  return (\n    <div className=\"logoutSection\">\n      <div className=\"logoutIn\">\n        <h2>You have been successfully logged out.</h2>\n\n        <Link to=\"login\">\n          <Button variant=\"contained\" color=\"primary\">\n            Login Again\n          </Button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Logout;\n","import React,{useContext} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Link} from 'react-router-dom'\nimport { myContext } from \"../context\";\n\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 8,\n  },\n  buttonMargin:{\n    marginTop:15,\n    marginRight:15,\n  }\n});\nconst WorkersListMap = ({ worker }) => {\n  const {deleteWorker,OpenModal, isSuperUser} = useContext(myContext);\n  const classes = useStyles();\n  return (\n    <Grid item xs={12} sm={6} md={4}>\n      <Card className={classes.root}>\n        <CardContent>\n         \n            \n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {worker.f_name} {worker.l_name}\n          </Typography>\n                \n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Worker Category: {worker.category}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Naike Name: {worker.naike_f_name}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Gender: {worker.gender}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Age: {worker.age}\n          </Typography>\n         \n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            District: {worker.district}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Municipality: {worker.municipality}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Ward: {worker.ward}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Phone: {worker.phone}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Kiln: {worker.kiln.name}\n          </Typography>\n          \n          {isSuperUser() ? <span>\n            <Link to={`/workers/${worker.id}/`}>\n            <Button  className={classes.buttonMargin} variant=\"contained\" color=\"primary\">\n              Edit\n            </Button>\n          </Link>\n          <Button onClick={()=>deleteWorker(worker.id)}   className={classes.buttonMargin} variant=\"contained\" color=\"secondary\">\n            Delete\n          </Button></span> : null\n          }<span>\n          <Button  onClick={()=>OpenModal(worker.id)} variant=\"contained\" color=\"secondary\" className={classes.buttonMargin}>\n            Payment\n          </Button></span>\n         \n        </CardContent>\n       \n      </Card>\n    </Grid>\n  );\n};\n\nexport default WorkersListMap;\n","import React from 'react'\nimport '../App.css';\n \n\nconst Title = ({title,children}) => {\n    return (\n        <div className='title'>\n           \n            <p>{title}</p>\n            <div/>\n        </div>\n    )\n}\n\nexport default Title\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { myContext } from \"../../context\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width:'90%'\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  inputSection: {\n    width: \"90%\",\n    \n    margin: \"auto\",\n  },\n}));\n\nconst WorkerFilter = () => {\n  const classes = useStyles();\n  const {\n    workersInfo,\n    kname,\n    gender,\n    searchbyworkername,\n    ChangeOptionFilter,\n    searchbydistrict,\n    searchbymunicipality,\n    searchbyworkercategory,\n    searchbynaike_f_name,\n  \n  } = useContext(myContext);\n\n\nlet categorylist = workersInfo.map((worker) => {\n  return worker.category;\n});\nlet uniquecategory = [...new Set(categorylist), \"All\"].sort();\n\nlet categoryOption = uniquecategory.map((category,index) => {\n  return <MenuItem key={index} value={category}>{category}</MenuItem>;\n});\n\n\n\nlet districtlist = workersInfo.map((worker) => {\n  return worker.district;\n});\nlet uniquedistrict = [...new Set(districtlist), \"All\"].sort();\n\nlet districtOption = uniquedistrict.map((district,index) => {\n  return <MenuItem key={index} value={district}>{district}</MenuItem>;\n});\n\n\nlet municipalitylist = workersInfo.map((worker) => {\n  return worker.municipality;\n});\nlet uniquemunicipality = [...new Set(municipalitylist), \"All\"].sort();\n\nlet municipalityOption = uniquemunicipality.map((municipality,index) => {\n  return <MenuItem key={index} value={municipality}>{municipality}</MenuItem>;\n});\n\n\n  let kilnlist = workersInfo.map((worker) => {\n    return worker.kiln.name;\n  });\n  let uniquekiln = [...new Set(kilnlist), \"All\"].sort();\n\n  let kilnOption = uniquekiln.map((kiln,index) => {\n    return <MenuItem key={index} value={kiln}>{kiln}</MenuItem>;\n  });\n\n\n\n\n\n  return (\n    <div>\n      <div className={classes.inputSection}>\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={6} md={4}>\n            <TextField\n              fullWidth\n              label=\"Search by Name\"\n              id=\"outlined-size-small\"\n              name=\"searchbyworkername\"\n              value={searchbyworkername}\n              onChange={ChangeOptionFilter}\n              variant=\"outlined\"\n             \n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={4}>\n            <TextField\n              fullWidth\n              label=\"Search by Naike name\"\n              id=\"outlined-size-normal\"\n              name=\"searchbynaike_f_name\"\n              value={searchbynaike_f_name}\n              onChange={ChangeOptionFilter}\n              variant=\"outlined\"\n              \n            />\n          \n        </Grid>\n\n\n        <Grid item xs={6} sm={4}  className='categoryMargin'>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                By Category\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                name=\"searchbyworkercategory\"\n                value={searchbyworkercategory}\n                onChange={ChangeOptionFilter}\n                label=\"Category\"\n               \n              >\n                {categoryOption}\n              </Select>\n            </FormControl>\n          </Grid>\n\n\n          <Grid item xs={6} sm={4} md={3}>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                By District\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                name=\"searchbydistrict\"\n                value={searchbydistrict}\n                onChange={ChangeOptionFilter}\n                label=\"Districtname\"\n                \n              >\n                {districtOption}\n              </Select>\n            </FormControl>\n          </Grid>\n\n\n          <Grid item xs={6} sm={4} md={3}>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                By Municipality\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                name=\"searchbymunicipality\"\n                value={searchbymunicipality}\n                onChange={ChangeOptionFilter}\n                label=\"Municipalityname\"\n              \n              >\n                {municipalityOption}\n              </Select>\n            </FormControl>\n          </Grid>\n\n\n\n\n\n        \n          <Grid item xs={6} sm={4} md={3}>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                By Kiln\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                name=\"kname\"\n                value={kname}\n                onChange={ChangeOptionFilter}\n                label=\"Kilnname\"\n               \n              >\n                {kilnOption}\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={6} sm={4} md={3}>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                By Gender\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                name=\"gender\"\n                value={gender}\n                onChange={ChangeOptionFilter}\n                label=\"Gender\"\n              >\n                <MenuItem value=\"All\">All</MenuItem>\n                <MenuItem value=\"Male\">Male</MenuItem>\n                <MenuItem value=\"Female\">Female</MenuItem>\n                <MenuItem value=\"Others\">Others</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkerFilter;\n","import React from 'react'\nimport Pagination from '@material-ui/lab/Pagination';\n\n\n\n\nconst WorkersPaginate = ({itemsPerPage,totalItems,paginate}) => {\n\n    const [page, setPage] = React.useState(1);\n    const handleChange = (event, value) => {\n      setPage(value);\n     \n    };\n   \n    return (\n        <div className='paginateClass'>\n            <div>      \n                <Pagination count={Math.ceil(totalItems/itemsPerPage)}   onClick={paginate(page)} page={page} onChange={handleChange} color=\"secondary\"  className='paginateInner'/>       \n            </div>\n        </div>\n    )\n}\n\nexport default WorkersPaginate\n","import React, {useState, useContext } from \"react\";\nimport WorkersListMap from \"./WorkersListMap\";\nimport {\n  Grid,\n \n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport Title from './Title'\nimport WorkerFilter from './FilterComponent/WorkerFilter'\nimport WorkersPaginate from './WorkersPaginate'\nimport {Link, Redirect} from 'react-router-dom'\nimport '../App.css';\nimport { myContext } from \"../context\";\n\n\nconst isAuthenticated = () => {\n  const token = localStorage.getItem(\"item\");\n  return token && token.length > 10;\n};\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  pos: {\n    marginTop: 30,\n    width: \"90%\",\n    margin: \"auto\",\n   \n  },\n  addIcon: {\n      width: \"90%\",\n      marginTop: 30,\n      margin: \"auto\",\n      display: \"flex\",\n      alignItems: \"center\",\n      color: \"primary\",\n  },\n  \n  AddIconLink:{\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration:'none'\n  }\n}));\n\nconst WorkersList = () => {\n  const classes = useStyles();\n  const isAlreadyAuthenticated = isAuthenticated();\n\n  const { sortedWorkersInfo ,isSuperUser} = useContext(myContext);\n  \n  const [currentPage,setCurrentPage] = useState(1)\n  const [workersPerPage] = useState(10)\n\n  \n  const indexOfLastWorker = currentPage * workersPerPage;\n  const indexOfFirstWorker  = indexOfLastWorker - workersPerPage\n  const curretWorkers = sortedWorkersInfo.slice(indexOfFirstWorker,indexOfLastWorker)\n\n  let sortedworkersInfoComp = curretWorkers.map((worker) => {\n    return <WorkersListMap worker={worker} key={worker.id}/>;\n  });\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber)\n  }\n\n\n  return (\n    <div>\n{ isAlreadyAuthenticated ?\n    \n    <div>\n      { isSuperUser() ? \n      <span className={classes.addIcon}>\n        <Link to='/inputnewworker' className={classes.AddIconLink}>\n          <AddCircleIcon color=\"primary\" fontSize=\"large\" />\n        <Typography className=\"addnewWorker\" color=\"primary\" component=\"h1\" variant=\"h6\">\n          Add new worker\n        </Typography>\n        </Link>\n      </span> : '' \n}\n      <Title title='Workers List'/>\n      <WorkerFilter/>\n      <div className={classes.pos}>\n        <Grid container spacing={2}>\n          {sortedworkersInfoComp}\n        </Grid>\n      </div>\n\n    <WorkersPaginate itemsPerPage={workersPerPage} totalItems={sortedWorkersInfo.length} paginate={paginate}/>\n     \n    </div> : <Redirect to={{ pathname:'/login' }}/> \n}\n    </div>\n  );\n};\n\nexport default WorkersList;\n","import Title from \"./Title\";\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { scroller } from \"react-scroll\";\nimport { Button, Grid, Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { Element } from \"react-scroll\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n}));\n\n\n\nconst WorkersInfoInputComp = ({\n  SubmitHandler,\n  valuea,\n  InputHandler,\n  kilnlist,\n  InputHandlerKiln,\n}) => {\n  const classes = useStyles();\n\n  const scrollToElement=(element)=>{\n    scroller.scrollTo(element,{\n\n     duration:1000,\n     delay:100,\n     smooth:true,\n\n    })\n  }\n  // let kilnlisting = kilnlist.map((kiln) => {\n  //   return kiln.name;\n  // });\n  // let uniquekiln = [...new Set(kilnlisting), \"All\"].sort();\n  // console.log(uniquekiln)\n  // let kilnOption = uniquekiln.map((kiln,index) => {\n  //   return <MenuItem key={index} value={kiln}>{kiln}</MenuItem>;\n  // });\n\n  let kilnOption = kilnlist.map((kiln) => {\n    return (\n      <MenuItem key={kiln.id} value={kiln.id}>\n        {kiln.name}, {kiln.address}\n      </MenuItem>\n    );\n  });\n\n\n\n  return (\n    <Container maxWidth=\"sm\" component=\"main\">\n      <div className={classes.paper}>\n       \n          <Title title=\"Add Worker\" />\n      \n        <form className={classes.form} action=\"\" onSubmit={SubmitHandler}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"f_name\"\n                value={valuea.f_name}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Firstname\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"l_name\"\n                value={valuea.l_name}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Lastname\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                name=\"naike_f_name\"\n                value={valuea.naike_f_name}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Naike name\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                name=\"naike_l_name\"\n                value={valuea.naike_l_name}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Naike last name\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                name=\"age\"\n                value={valuea.age}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Age\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                name=\"country\"\n                value={valuea.country}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Country\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                name=\"district\"\n                value={valuea.district}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter District\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                name=\"municipality\"\n                value={valuea.municipality}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Municipality\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                name=\"ward\"\n                value={valuea.ward}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Ward\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                name=\"workercategory\"\n                value={valuea.workercategory}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Category\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                name=\"phone\"\n                value={valuea.phone}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Phone\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <FormControl\n                variant=\"outlined\"\n                fullWidth\n                className={classes.formControl}\n              >\n                <InputLabel id=\"demo-simple-select-outlined-label\">\n                  Gender\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  value={valuea.gender}\n                  name=\"gender\"\n                  onChange={InputHandler}\n                  label=\"gender\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                >\n                  <MenuItem value=\"MALE\">Male</MenuItem>\n                  <MenuItem value=\"FEMALE\">Female</MenuItem>\n                  <MenuItem value=\"OTHERS\">Others</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <FormControl\n                variant=\"outlined\"\n                fullWidth\n                required\n                className={classes.formControl}\n              >\n                <InputLabel id=\"demo-simple-select-outlined-label\">\n                  Kiln Name\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  value={valuea.kiln_id}\n                  name=\"kiln_id\"\n                  onChange={InputHandlerKiln}\n                  label=\"kiln\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                >\n                  {kilnOption}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n\n          <Button\n            onClick={()=>scrollToElement(\"Home\")}\n            className={classes.submit}\n            fullWidth\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Submit\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nexport default WorkersInfoInputComp;\n","import React, { useState, useContext, useEffect } from \"react\";\n// import axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport Axiosapi from \"./Axiosapi\";\n\nimport { myContext } from \"../context\";\n\nimport WorkersInfoInputComp from \"./WorkersInfoInputComp\";\n\nconst isAuthenticated = () => {\n  const token = localStorage.getItem(\"item\");\n  return token && token.length > 10;\n};\n\nconst WorkersInfoInput = () => {\n  const {\n    workersInfo,\n    WorkerNewStatefunc,\n    kilnInfo,\n    alertData,\n    AlertFunc,\n  } = useContext(myContext);\n  const isAlreadyAuthenticated = isAuthenticated();\n\n  const workers = {\n    f_name: \"\",\n    l_name: \"\",\n    naike_f_name: \"\",\n    naike_l_name: \"\",\n    gender: \"\",\n    age: \"\",\n    country: \"\",\n    district: \"\",\n    municipality: \"\",\n    ward: \"\",\n    workercategory: \"\",\n    phone: \"\",\n    salary: \"\",\n    kiln_id: \"\",\n    extra: null,\n    children: null\n  };\n\n  const [valuea, setValue] = useState(workers);\n  const [workerInfoValue, setworkerInfoValue] = useState(workersInfo);\n  const [alertInfo, setalertInfo] = useState(alertData);\n\n  const InputHandler = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    value = value.toUpperCase();\n\n    setValue((prevState) => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const InputHandlerKiln = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    setValue((prevState) => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  useEffect(() => {\n    WorkerNewStatefunc([...workerInfoValue]);\n  }, [workerInfoValue]);\n\n  useEffect(() => {\n    AlertFunc(alertInfo);\n  }, [alertInfo]);\n\n  const SubmitHandler = (e) => {\n    e.preventDefault();\n\n    Axiosapi({\n      method: \"POST\",\n      url: \"workers/\",\n      data: valuea,\n    })\n      .then((res) => {\n        valuea.id = res.data.id;\n        valuea.kiln = kilnInfo.find((e) => e.id === valuea.kiln_id);\n        setworkerInfoValue([...workerInfoValue, valuea]);\n        if (res.status === 201 && res.statusText === \"Created\") {\n          setalertInfo({ type: \"success\", msg: \"Worker saved\" });\n        }\n      })\n      .catch((err) => {\n        setalertInfo({\n          type: \"error\",\n          msg: \"Something went wrong. Please try again.\",\n        });\n      });\n\n    setValue(workers);\n  };\n\n  return (\n    <div className='workerInputSection'>\n      {isAlreadyAuthenticated ? (\n        <div>\n          <WorkersInfoInputComp\n            kilnlist={kilnInfo}\n            InputHandlerKiln={InputHandlerKiln}\n            InputHandler={InputHandler}\n            SubmitHandler={SubmitHandler}\n            valuea={valuea}\n          />\n        </div>\n      ) : (\n        <Redirect to={{ pathname: \"login\" }} />\n      )}\n    </div>\n  );\n};\n\nexport default WorkersInfoInput;\n","import React, { useContext } from \"react\";\nimport { AppBar, Button } from \"@material-ui/core\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport {Link} from 'react-router-dom'\nimport { myContext } from \"../context\";\nimport \"../App.css\";\n\n\n\nconst isAuthenticated = () => {\n  const token = localStorage.getItem(\"item\");\n  return token && token.length > 10;\n};\n\nconst Navbar = () => {\n  const { mobileNav,CloseNavMenu,OpenNavMenu } = useContext(myContext);\n  const isAlreadyAuthenticated = isAuthenticated();\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar className=\"nav\">\n          <div className=\"navLeft\">\n            <Typography edge=\"start\" className=\"logoTitle\" variant=\"h6\">\n            Global Fairness Initiative\n            </Typography>\n            <div className=\"burgerBar\">\n              { mobileNav ?  \n\n              <MenuOpenIcon onClick= {()=>CloseNavMenu()}/>\n            :\n            <MenuIcon onClick= {()=>OpenNavMenu()}/>\n}\n            </div>\n          </div>\n\n          <div className={mobileNav ? 'navRight hide' : 'navRight' }>\n            <Link to='/kilnlist'>\n            <Button  className=\"loginButton\">\n              Kiln\n            </Button>\n            </Link>\n            <Link to='/workers'>\n            <Button  className=\"loginButton\" >\n              Workers\n            </Button>\n            </Link>\n            <Link to='/ngos'>\n            <Button  className=\"loginButton\" >\n              Ngos\n            </Button>\n            </Link>\n            <div>\n              {isAlreadyAuthenticated ? (\n                <div>\n                <span>\n                   <Link to='/logout'>\n                  <Button  className=\"loginButton\">\n                    Logout\n                  </Button>\n                  </Link>\n                </span>\n              </div>\n              ) : (\n                <span>\n                   <Link to='/login'>\n                  <Button  className=\"loginButton\" variant=\"h6\">\n                    Login\n                  </Button>\n                  </Link>\n                </span>\n              )}\n            </div>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react'\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button, Grid, Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Title from './Title'\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    form: {\n      width: \"100%\", // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n      textAlign: \"center\",\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n\n  }));\n\nconst KilnInfoInputComp = ({InputHandler,SubmitHandler,valuea})=> {\n\n    const classes = useStyles();\n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n      <div className={classes.paper}>\n      \n        <Title title='Add Kiln'/>\n        <form className={classes.form} action=\"\" onSubmit={SubmitHandler}>\n          <Grid container spacing={1}>\n            <Grid item xs={12} >\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"name\"\n                value={valuea.name}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Kilnname\"\n              />\n            </Grid>\n            <Grid item xs={12} >\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"address\"\n                value={valuea.address}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Kilnaddress\"\n              />\n            </Grid>\n\n\n           \n\n            </Grid>\n            <Button      \n            className={classes.submit}\n            fullWidth\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Submit\n          </Button>\n        </form>\n        </div>\n    </Container>\n    )\n}\n\nexport default KilnInfoInputComp\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport KilnInfoInputComp from \"./KilnInfoInputComp\";\nimport Axiosapi from './Axiosapi'\nimport { myContext } from \"../context\";\n\nconst isAuthenticated = () => {\n  const token = localStorage.getItem(\"item\");\n  return token && token.length > 10;\n};\n\n\nconst KilnInfoInput = () => {\n  const kiln = {\n    name: \"\",\n    address: \"\",\n  };\n\n  const { KilnNewStatefunc, kilnInfo ,alertData,AlertFunc} = useContext(myContext);\n  const [kilnInfoValue, setkilnInfoValue] = useState(kilnInfo);\n  const [valuea, setValue] = useState(kiln);\n  const [alertInfo, setalertInfo] = useState(alertData);\n\n\n  const isAlreadyAuthenticated = isAuthenticated();\n\n  const InputHandler = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    value = value.toUpperCase();\n    setValue((prevState) => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n\n  useEffect(() => {\n    KilnNewStatefunc([...kilnInfoValue]);\n  }, [kilnInfoValue]);\n\n  useEffect(() => {\n    AlertFunc(alertInfo);\n  },[alertInfo]);\n\n  const SubmitHandler = (e) => {\n    e.preventDefault();\n\n\n      Axiosapi({\n        method:'POST',\n        url:'kiln/',\n        data:valuea\n      })\n     .then(res =>\n       {\n        valuea.id = res.data.id;\n        setkilnInfoValue([...kilnInfoValue, valuea]);\n        if (res.status === 201 && res.statusText === \"Created\") {\n          setalertInfo({type: 'success', msg: 'Kiln saved'})\n         }\n        })\n        .catch((err) => {\n        setalertInfo({type: 'error', msg: 'Something went wrong. Please try again.'})\n      })\n\n\n      setValue(kiln)\n  }\n\n  return (\n    <div>\n      {isAlreadyAuthenticated ? (\n        <div>\n          <KilnInfoInputComp\n            InputHandler={InputHandler}\n            SubmitHandler={SubmitHandler}\n            valuea={valuea}\n          />\n        </div>\n      ) : (\n        <Redirect to={{ pathname: \"login\" }} />\n      )}\n    </div>\n  );\n};\n\nexport default KilnInfoInput;\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { myContext } from \"../context\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 8,\n  },\n  posBtn: {\n    marginTop: 10,\n  },\n});\n\nconst KilnListMap = ({ kiln }) => {\n  const classes = useStyles();\n  const { deleteKiln ,isSuperUser} = useContext(myContext);\n\n  return (\n    <Grid item xs={12} sm={6} md={4}>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            KilnName: {kiln.name}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body2\">\n            Kiln Address: {kiln.address}\n          </Typography>\n{ isSuperUser() ? \n          <Button\n            onClick={() => deleteKiln(kiln.id)}\n            className={classes.posBtn}\n            variant=\"contained\"\n            color=\"secondary\"\n          >\n            Delete\n          </Button>\n: null} \n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default KilnListMap;\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport { myContext } from \"../../context\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  inputSection: {\n    width: \"90%\",\n    margin: \"auto\",\n  },\n}));\n\nconst KilnFilter = () => {\n  const classes = useStyles();\n\n  const {searchbykiln,searchbykilnlocation,ChangeOptionFilter} = useContext(myContext);\n\n  return (\n    <div>\n      <div className={classes.inputSection}>\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={6} >\n            <TextField\n              fullWidth\n              label=\"Search by Name\"\n              id=\"outlined-size-small\"\n              name=\"searchbykiln\"\n              value={searchbykiln}\n              onChange={ChangeOptionFilter}\n              variant=\"outlined\"\n             \n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} >\n            <TextField\n              fullWidth\n              label=\"Search by Location\"\n              id=\"outlined-size-normal\"\n              name=\"searchbykilnlocation\"\n              value={searchbykilnlocation}\n              onChange={ChangeOptionFilter}\n              variant=\"outlined\"\n             \n            />\n          </Grid>\n\n      \n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default KilnFilter;\n","import React,{useContext,useState} from 'react'\nimport KilnListMap from './KilnListMap'\nimport { Grid, Typography ,makeStyles} from \"@material-ui/core\";\nimport {myContext} from '../context'\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport KilnFilter from './FilterComponent/KilnFilter'\nimport WorkersPaginate from './WorkersPaginate'\nimport {Link, Redirect} from 'react-router-dom'\n\nimport Title from './Title'\n\n\n\nconst useStyles = makeStyles({\n  \n    pos: {\n      marginTop: 30,\n      width: \"90%\",\n      margin: \"auto\",\n     \n    },\n\n    addIcon: {\n      width: \"90%\",\n      marginTop: 30,\n      margin: \"auto\",\n      display: \"flex\",\n      alignItems: \"center\",\n      color: \"primary\",\n    },\n\n    AddIconLink:{\n      display: \"flex\",\n      alignItems: \"center\",\n      textDecoration:'none'\n    }\n  });\n\n  const isAuthenticated = () => {\n    const token = localStorage.getItem(\"item\");\n    return token && token.length > 10;\n  };\n\n\nconst KilnList = () =>  {\n    const classes = useStyles()\n    const isAlreadyAuthenticated = isAuthenticated();\n\n    const {sortedkilnInfo,isSuperUser} = useContext(myContext)\n    const [currentPage,setCurrentPage] = useState(1)\n    const [kilnsPerPage] = useState(2)\n\n    const indexOfLastKiln = currentPage * kilnsPerPage;\n    const indexOfFirstKiln  = indexOfLastKiln - kilnsPerPage\n    const curretKilns = sortedkilnInfo.slice(indexOfFirstKiln,indexOfLastKiln)\n\n    let kilnInfoComp = curretKilns.map(kiln=>{\n        return <KilnListMap kiln={kiln} key = {kiln.id}/>\n    })\n\n    const paginate = (pageNumber) => {\n      setCurrentPage(pageNumber)\n    }\n  \n\n    return (\n      <div>\n\n     {isAlreadyAuthenticated ? \n      <div>\n{ isSuperUser() ? \n        <span className={classes.addIcon}>\n          <Link to=\"/kiln\" className={classes.AddIconLink}>\n            <AddCircleIcon color=\"primary\" fontSize=\"large\" />\n          <Typography  className=\"addnewWorker\" color=\"primary\" component=\"h1\" variant=\"h6\">\n            Add new kiln\n          </Typography>\n          </Link>\n        </span> : null\n}\n        <Title title='Kiln List'/>\n        <KilnFilter/>\n        <div className={classes.pos}>    \n              <Grid container spacing={2}>\n                      {kilnInfoComp}\n            </Grid>\n        </div>\n        <WorkersPaginate itemsPerPage={kilnsPerPage} totalItems={sortedkilnInfo.length} paginate={paginate}/>\n\n      </div> : <Redirect to={{pathname:'login'}}/>\n      }\n      </div>\n    )\n}\n\nexport default KilnList\n","import React, { Component } from 'react'\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button, Grid, Container } from \"@material-ui/core\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Title from './Title'\nimport Axiosapi from './Axiosapi'\n\n\nimport { myContext } from \"../context\";\n\n\nclass EditWorkerCompRe extends Component {\n\nstate={\n    singleWorkerInfo:{},\n    id:this.props.match.params.id,\n    alertInfo:this.context.alertData\n\n\n}\n\n   componentDidMount(){\n\n      Axiosapi({\n        method:'GET',\n        url:`workers/${this.state.id}`\n      })\n      .then(res=>{\n        this.setState({singleWorkerInfo: res.data})\n      })\n      .catch((err) => console.log(err));\n\n   }\n\n   componentDidUpdate(prevProps,prevState){\n    \n     if( prevState.alertInfo !== this.state.alertInfo){\n    \n      this.context.AlertFunc(this.state.alertInfo);\n     }\n   }\n\n\n    InputHandler = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n  \n    value = value.toUpperCase()\n    const singleWorkerInfo = {...this.state.singleWorkerInfo, [name]: value}\n    this.setState({singleWorkerInfo})\n   }\n\n\n    InputHandlerKiln = (e)=>{\n    let name = e.target.name;\n    let value = e.target.value;\n   \n    const singleWorkerInfo = {...this.state.singleWorkerInfo, [name]: value}\n    this.setState({singleWorkerInfo})\n  \n    }\n\n\n     SubmitHandler = (e) => {\n        e.preventDefault();\n\n          Axiosapi({\n            method:'PUT',\n            url:`workers/${this.state.singleWorkerInfo.id}`,\n            data:this.state.singleWorkerInfo\n          })\n          .then(res=>{\n          \n            if (res.status === 200 && res.statusText === \"OK\") {\n              this.state.singleWorkerInfo.id = res.data.id;\n              this.state.singleWorkerInfo.kiln = this.context.kilnInfo.find(e => e.id === this.state.singleWorkerInfo.kiln_id);\n              this.context.WorkerEditStatefunc(this.state.singleWorkerInfo);\n              this.setState({alertInfo:{type: 'success', msg: 'Worker Updated Successfully'}})\n             }\n            })\n            .catch((err) => {\n              this.setState({alertInfo:{type: 'error', msg: 'Something went wrong. Please try again.'}})\n          })\n    \n\n       \n      };\n\n  \n\n\n    static contextType = myContext;\n    render() {\n       \n     const {kilnInfo} =  this.context\n     let kilnOption = kilnInfo.map((kiln)=>{\n        return   <MenuItem value={kiln.id}>{kiln.name}</MenuItem>\n    }) \n\n        return (\n            <Container  maxWidth=\"sm\" component=\"main\">\n            <div>\n             \n              <Title title='Update Worker'/>\n              <form action=\"\" onSubmit={this.SubmitHandler}>\n                <Grid container spacing={2}>\n             \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      name=\"f_name\"\n                      value={this.state.singleWorkerInfo.f_name}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter firstname\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      name=\"l_name\"\n                      value={this.state.singleWorkerInfo.l_name}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter lastname\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n        \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                     \n                      fullWidth\n                      margin=\"normal\"\n                      name=\"naike_f_name\"\n                      value={this.state.singleWorkerInfo.naike_f_name}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter naike_f_name\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                    \n                      fullWidth\n                      margin=\"normal\"\n                      name=\"naike_l_name\"\n                      value={this.state.singleWorkerInfo.naike_l_name}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter naike_l_name\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n                \n      \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                   \n                      fullWidth\n                      margin=\"normal\"\n                      name=\"age\"\n                      value={this.state.singleWorkerInfo.age}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter age\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n              \n      \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                    \n                      fullWidth\n                      margin=\"normal\"\n                      name=\"district\"\n                      value={this.state.singleWorkerInfo.district}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter district\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                     \n                      fullWidth\n                      margin=\"normal\"\n                      name=\"municipality\"\n                      value={this.state.singleWorkerInfo.municipality}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter municipality\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                    \n                      fullWidth\n                      margin=\"normal\"\n                      name=\"ward\"\n                      value={this.state.singleWorkerInfo.ward}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter ward\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                    \n                      fullWidth\n                      margin=\"normal\"\n                      name=\"workercategory\"\n                      value={this.state.singleWorkerInfo.workercategory}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter workercategory\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n      \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                    \n                      fullWidth\n                      name=\"phone\"\n                      value={this.state.singleWorkerInfo.phone}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter phone\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n      \n                  <Grid item xs={12} sm={12}>\n                    <FormControl\n                      variant=\"outlined\"\n                      fullWidth                   \n                    >\n                      <InputLabel id=\"demo-simple-select-outlined-label\">\n                        Gender\n                      </InputLabel>\n                     \n                      <Select\n                        labelId=\"demo-simple-select-outlined-label\"\n                        id=\"demo-simple-select-outlined\"\n                        value={this.state.singleWorkerInfo.gender}\n                        name=\"gender\"\n                        onChange={this.InputHandler}\n                        label=\"gender\"\n                        InputLabelProps={{\n                          shrink: true,\n                        }}\n                      >\n                        <MenuItem value='MALE'>MALE</MenuItem>\n                        <MenuItem value='FEMALE'>FEMALE</MenuItem>\n                        <MenuItem value='OTHERS'>OTHERS</MenuItem>                   \n                      </Select>\n                    </FormControl>\n                  </Grid>\n      \n                 \n                  <Grid item xs={12} sm={12}>\n                    <FormControl\n                      variant=\"outlined\"\n                      fullWidth                  \n                    >\n                      <InputLabel id=\"demo-simple-select-outlined-label\">\n                        Kiln Name\n                      </InputLabel>\n                      <Select\n                        labelId=\"demo-simple-select-outlined-label\"\n                        id=\"demo-simple-select-outlined\"\n                        value={this.state.singleWorkerInfo.kiln_id}\n                        name=\"kiln_id\"\n                        onChange={this.InputHandlerKiln}\n                        label=\"kiln\"\n                        InputLabelProps={{\n                          shrink: true,\n                        }}\n                      >\n                       {kilnOption}                     \n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n               \n                <Button      \n                 className='editWorkerBtn'\n                  fullWidth\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Submit\n                </Button>\n              \n              </form>\n            </div>\n          </Container>\n        )\n    }\n}\n\n\nexport default EditWorkerCompRe\n","import React, { useContext,useState } from \"react\";\nimport { TextField, Container, Button } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { myContext } from \"../context\";\n\nconst ModalPayment = () => {\n\n  const paymentdat = {\n        amount:'',\n        timeofpay:'',\n        amountpayer:''\n  }\n\n  const [paymentData,setPaymentData] = useState(paymentdat)\n  const [amount,setAmount] = useState('')\n  const { CloseModal, ModalStatus ,ModalData} = useContext(myContext);\n\n  const handleChangeAmount = (e) => {\n    setAmount(e.target.value)\n    \n  }\n\n\n\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const paymentdata = {amount:amount,timeofpay:new Date().toLocaleDateString(),amountpayer:'hemant'}\n    setPaymentData(paymentdata)\n\n  }\n  \n\n\n  return (\n    <div className={ModalStatus ? \"modalOverlay\" : \"hideModal\"}>\n      <Container maxWidth=\"sm\" component=\"main\">\n        <div className=\"modalInner\">\n          <CloseIcon className=\"CloseModelIcon\" onClick={()=>CloseModal()}/>\n          <h2>Enter Amount</h2>\n          <TextField\n            id=\"outlined-full-width\"\n            label=\"Enter Amount\"\n            placeholder=\"Enter Amount\"\n            helperText=\"\"\n            fullWidth\n            value={amount}\n            onChange={handleChangeAmount}\n            name='amount'\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n          />\n          <Button\n            style={{ marginTop: 8 }}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={()=>{handleSubmit();CloseModal()}}\n            >\n            Save Payment\n          </Button>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default ModalPayment;\n","import React from 'react'\n\nfunction NgoListMap({ngo}) {\n    return (\n        <div>\n            {ngo.f_name}\n        </div>\n    )\n}\n\nexport default NgoListMap\n","import React, { Component } from 'react'\nimport Axiosapi from './Axiosapi'\nimport Title from './Title'\nimport NgoListMap from './NgoListMap'\nimport {myContext} from '../context'\nimport {Link, Redirect} from 'react-router-dom'\nimport Card from '@material-ui/core/Card';\nclass NgosList extends Component {\n\n    state={\n        ngos :[]\n    }\n\n    componentDidMount()\n    {\n        Axiosapi.get('ngos')\n        .then(res=>{   \n              \n            this.setState({ngos:res.data})\n        })\n    }\n    static contextType = myContext;\n    render() {\n        const {ngos} = this.state\n        if(!ngos){\n            return 'loading'\n        }\n        const {workersInfo} = this.context\n        console.log(ngos)\n        let ngolist = ngos.map(ngo=>{\n        return <Card style={{'margin-bottom':'.5em', 'padding': '1em'}}>\n             <p key={ngo.id}>{ngo.name}</p>\n             <div style={{'margin-top': '.5em'}}>\n                <a href={`#register?ngo=${ngo.id}`} className='registerLink'>\n                Registration link\n                </a>\n            </div>\n            </Card>\n        })\n        console.log(workersInfo)\n\n        \nconsole.log(ngos)\n\n        return (\n            <div className='ngoSection'>\n                <Title title='NgoList'/>\n                <div className='ngoInnerSection'>\n                    {ngolist}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NgosList\n","import React, { useContext } from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Error from \"./components/Error\";\nimport Register from \"./components/Register\";\nimport Logout from \"./components/Logout\";\nimport WorkersList from \"./components/WorkersList\";\nimport WorkersInfoInput from \"./components/WorkersInfoInput\";\nimport Navbar from \"./components/Navbar\";\nimport KilnInfoInput from \"./components/KilnInfoInput\";\nimport KilnList from \"./components/KilnList\";\nimport EditWorkerCompRe from \"./components/EditWorkerCompRe\";\nimport ModalPayment from \"./components/ModalPayment\";\nimport NgosList from \"./components/NgosList\";\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Element } from \"react-scroll\";\n\nimport { myContext } from \"./context\";\n\nfunction App() {\n // const [open, setOpen] = React.useState(true);\n  const { alertData, isSuperUser, AlertFunc } = useContext(myContext);\n  // console.log(setState);\n  const alert = alertData ? (\n    <Collapse in={true}>\n      <Alert\n        action={\n          <IconButton\n            aria-label=\"close\"\n            color=\"inherit\"\n            size=\"small\"\n            onClick={() => {\n              AlertFunc(null)\n            }}\n          >\n            <CloseIcon fontSize=\"inherit\" />\n          </IconButton>\n        }\n        severity={alertData.type}\n      >\n        {alertData.msg}\n      </Alert>\n    </Collapse>\n  ) : null;\n\n  const super_user_routes = isSuperUser() ? (\n    <Route exact path=\"/workers/:id/\" component={EditWorkerCompRe} />\n  ) : null;\n\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Element name=\"Home\">\n          <Navbar />\n        </Element>\n\n        {alert}\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/inputnewworker\" component={WorkersInfoInput} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/logout\" component={Logout} />\n          <Route exact path=\"/kiln\" component={KilnInfoInput} />\n          <Route exact path=\"/workers\" component={WorkersList} />\n          <Route exact path=\"/ngos\" component={NgosList} />\n          <Route exact path=\"/kilnlist\" component={KilnList} />\n          {super_user_routes}\n          <Route component={Error} />\n        </Switch>\n        <ModalPayment />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {ContextProvider} from './context'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n    <App />\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}