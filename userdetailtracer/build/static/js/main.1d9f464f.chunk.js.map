{"version":3,"sources":["components/SingleComponents/Axiosapi.js","context.js","components/mycsv.js","components/SingleComponents/Home.js","components/SingleComponents/Login.js","components/SingleComponents/Logout.js","components/SingleComponents/Register.js","components/SingleComponents/Error.js","components/SingleComponents/Navbar.js","components/SingleComponents/ModalPayment.js","components/SingleComponents/Spinner.js","components/WorkerComponent/WorkersListMap.js","components/SingleComponents/Title.js","components/FilterComponent/WorkerFilter.js","components/SingleComponents/WorkersPaginate.js","components/SingleComponents/SnackBar.js","components/WorkerComponent/WorkersList.js","components/WorkerComponent/WorkersInfoInputComp.js","components/WorkerComponent/WorkersInfoInput.js","components/WorkerComponent/EditWorkerCompRe.js","components/KilnComponent/KilnInfoInputComp.js","components/KilnComponent/KilnInfoInput.js","components/KilnComponent/KilnListMap.js","components/FilterComponent/KilnFilter.js","components/KilnComponent/KilnList.js","components/SingleComponents/NgosList.js","components/SingleComponents/NewSummary.js","components/SingleComponents/LoadingScreen.js","App.js","serviceWorker.js","index.js"],"names":["csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","axios","create","baseURL","process","headers","Authorization","JSON","parse","localStorage","getItem","myContext","React","createContext","ContextProvider","state","workersInfo","sortedWorkersInfo","singleWorkerInfo","editWorkerInfoId","kilnInfo","sortedkilnInfo","kname","gender","searchbyworkername","searchbycode","searchbycountry","searchbydistrict","searchbymunicipality","searchbyward","searchbyworkercategory","searchbynaike_f_name","searchbykilnname","searchbypaidstatus","mobileNav","searchbykiln","searchbykilnowner","ModalData","alertData","user","offlineWorkers","moneypaidworker","moneypaidkiln","InitialDataStatus","csvData","csvKilnData","ngos","syncing","searchbyngo","pageRefreshed","Date","getTime","isOnline","navigator","onLine","refreshCache","removeItem","window","location","href","syncPayments","setState","Axiosapi","method","url","data","Object","values","then","res","status","statusText","hookState","catch","err","console","log","cancelPayment","worker","extra","id","WorkerEditStatefunc","fetchAllData","keys","Promise","all","get","workers","kilns","er","cb","setItem","stringify","KilnNewStatefunc","newState","WorkerNewStatefunc","idx","findIndex","e","splice","WorkerEditPaymentFunc","ChangeOptionFilter","value","target","filterAllOptions","filterKilnData","tempWorkersInfo","search","toLowerCase","filter","f_name","includes","code","naike_name","startsWith","district","municipality","category","kiln","payment","amount","amountpayer","ngo","CsvWorkerDataFunc","tempkilnInfo","CsvKilnDataFunc","ReduceKeyValFunc","s","k","v","reduce","acc","cur","parseInt","xy","peoplecount","totalamount","entries","clone","map","item","kilnname","kilnaddress","address","amountpaid","username","children","join","OpenNavMenu","CloseNavMenu","filterById","arr","deleteWorker","type","msg","filteredWorker","deleteKiln","filteredKiln","isSuperUser","is_superuser","isSuperUserSummary","OpenModal","ModalStatus","CloseModal","AlertFunc","this","Provider","SearchWorkerName","EditWorker","props","Component","Consumer","Mycsv","useContext","useEffect","className","filename","label","key","Button","variant","color","Home","to","pathname","Login","userInfo","first_name","last_name","email","password","alertInfo","context","InputHandle","prevState","login","preventDefault","token","isAuthenticated","prevProps","isAlreadyAuthenticated","classes","Container","maxWidth","component","Box","mt","paper","my","Avatar","avatar","mb","Typography","form","onSubmit","Grid","container","spacing","xs","TextField","autoComplete","required","fullWidth","onChange","autoFocus","submit","contextType","withStyles","theme","display","flexDirection","alignItems","backgroundColor","width","Logout","Register","toString","register","sm","justify","Error","Card","style","Navbar","AppBar","position","Toolbar","edge","onClick","reload","amounts","Fireman","Moulder","Transporter","Others","dAmount","ModalPayment","valuea","paymentdat","timeofpay","handleChangeAmount","setUpdatedPayment","handleSubmit","toLocaleString","pay_id","uuidv4","ModalDataId","sendModalData","placeholder","helperText","margin","InputLabelProps","shrink","marginTop","Spinner","CircularProgress","useStyles","makeStyles","root","minWidth","title","fontSize","pos","marginBottom","buttonMargin","marginRight","WorkersListMap","cancelBtn","md","CardContent","gutterBottom","l_name","age","ward","phone","marginLeft","borderBottom","element","scroller","scrollTo","duration","delay","smooth","disabled","Title","formControl","selectEmpty","inputSection","WorkerFilter","uniqueFilter","grp","Set","selectOptionFunc","val","index","MenuItem","categoryOption","sort","ngosOption","districtOption","municipalityOption","kilnlist","kilnOption","FormControl","InputLabel","Select","labelId","WorkersPaginate","itemsPerPage","totalItems","paginate","useState","page","setPage","Pagination","count","Math","ceil","event","Alert","elevation","SnackBar","severity","addIcon","justifyContent","AddIconLink","textDecoration","WorkersList","currentPage","setCurrentPage","workersPerPage","indexOfLastWorker","indexOfFirstWorker","sortedworkersInfoComp","slice","pageNumber","csvFunc","csvheader","WorkersInfoInputComp","SubmitHandler","InputHandler","InputHandlerKiln","action","country","kiln_id","WorkersInfoInput","naike_l_name","salary","setValue","workerInfoValue","setworkerInfoValue","setalertInfo","toUpperCase","codes","curr","substr","c","genCode","find","EditWorkerCompRe","match","params","scrollToElement","textAlign","KilnInfoInputComp","KilnInfoInput","kilnInfoValue","setkilnInfoValue","posBtn","KilnListMap","KilnFilter","KilnList","kilnsPerPage","indexOfLastKiln","indexOfFirstKiln","kilnInfoComp","NgosList","ngolist","uuid","NewSummary","allworkers","summary","ga","kpis","max_amount","total","getSummaryFunc","summarystate","group","getProp","push","paymentSum","parseFloat","nest","nkpis","k2","g","max","OuterAmountBar","height","styled","div","LoadingScreen","App","alert","Collapse","in","IconButton","aria-label","size","super_user_routes","exact","path","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","getElementById","URL","origin","addEventListener","fetch","response","contentType","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1d9f464f.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst getCookie = (name) => {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n   \n    return cookieValue;\n};\n\nconst csrftoken = getCookie('csrftoken');\n\nexport default axios.create({\n    baseURL:`${process.env.REACT_APP_BASE_URL}/api`,\n    headers: {\n        'content-type':'application/json',\n        'X-CSRFToken':csrftoken,\n        Authorization:`Token ${JSON.parse(localStorage.getItem('item'))}`,\n       \n    }\n});\n\nexport {csrftoken}","import { CssBaseline } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport Axiosapi from \"./components/SingleComponents/Axiosapi\";\nconst myContext = React.createContext();\n\nclass ContextProvider extends Component {\n  state = {\n    workersInfo: [],\n    sortedWorkersInfo: [],\n    singleWorkerInfo: \"\",\n    editWorkerInfoId: \"\",\n    kilnInfo: [],\n    sortedkilnInfo: [],\n    kname: \"All\",\n    gender: \"All\",\n    searchbyworkername: \"\",\n    searchbycode: \"\",\n    searchbycountry: \"\",\n    searchbydistrict: \"All\",\n    searchbymunicipality: \"All\",\n    searchbyward: \"\",\n    searchbyworkercategory: \"All\",\n    searchbynaike_f_name: \"\",\n    searchbykilnname: \"\",\n    searchbypaidstatus: \"All\",\n    mobileNav: false,\n    searchbykiln: \"\",\n    searchbykilnowner: \"\",\n    ModalData: null,\n    alertData: null,\n    csrftoken: \"\",\n    user: null,\n    offlineWorkers: {},\n    moneypaidworker: \"All\",\n    moneypaidkiln: \"All\",\n    InitialDataStatus: false,\n    csvData: [],\n    csvKilnData: [],\n    ngos: [],\n    syncing: false,\n    searchbyngo:'',\n    pageRefreshed:new Date().getTime(),\n    \n  };\n\n  componentDidMount() {\n    this.fetchAllData();\n  }\n\n  isOnline = () => {\n    return navigator.onLine\n  }\n\n  refreshCache = () =>{\n    localStorage.removeItem('app-data')\n    window.location.href = ''\n  }\n\n  syncPayments = () => {\n    this.setState({ syncing: true });\n    Axiosapi({\n      method: \"POST\",\n      url: `sync-payments/`,\n      data: Object.values(this.state.offlineWorkers),\n    })\n      .then((res) => {\n        if (res.status === 200 && res.statusText === \"OK\") {\n          this.hookState({ offlineWorkers: {} });\n          this.setState({ syncing: false });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({ syncing: false });\n      });\n  };\n\n  cancelPayment = (worker) => {\n    worker.extra = null;\n    Axiosapi({\n      method: \"PUT\",\n      url: `workers/${worker.id}`,\n      data: worker,\n    })\n      .then((res) => {\n        if (res.status === 200 && res.statusText === \"OK\") {\n          this.WorkerEditStatefunc(worker);\n        }\n      })\n      .catch((err) => {\n        this.setState({});\n      });\n  };\n\n  //********Data Fetching**********/\n\n  fetchAllData = () => {\n    if (localStorage.getItem(\"app-data\")) {\n      const values = JSON.parse(localStorage.getItem(\"app-data\"));\n\n      if (\n        values.workersInfo.length &&\n        values.kilnInfo.length &&\n        values.user &&\n        values.ngos.length\n      ) {\n        if ((new Date().getTime() - values.pageRefreshed) / 1000 < 60) {\n\n          this.setState(\n            {\n              workersInfo: values.workersInfo,\n              sortedWorkersInfo: values.workersInfo,\n\n              kilnInfo: values.kilnInfo,\n              sortedkilnInfo: values.kilnInfo,\n              offlineWorkers: values.offlineWorkers,\n              user: values.user,\n              ngos: values.ngos,\n              InitialDataStatus: true,\n            },\n            () => {\n              if (\n                navigator.onLine &&\n                Object.keys(values.offlineWorkers).length\n              ) {\n                this.syncPayments();\n              }\n            }\n          );\n        } else {\n         \n          Promise.all([\n            Axiosapi.get(\"workers\"),\n            Axiosapi.get(\"kiln\"),\n            Axiosapi.get(\"user\"),\n            Axiosapi.get(\"ngos\"),\n          ])\n            .then(([workers, kilns, user, ngos]) => {\n              this.hookState({\n                workersInfo: workers.data,\n                sortedWorkersInfo: workers.data,\n                kilnInfo: kilns.data,\n                sortedkilnInfo: kilns.data,\n                user: user.data,\n                InitialDataStatus: true,\n                ngos: ngos.data,\n              });\n            })\n            .catch((er) => console.log(er));\n        }\n      } else {\n        localStorage.removeItem(\"app-data\");\n        window.location.href = \"\";\n      }\n    } else {\n      Promise.all([\n        Axiosapi.get(\"workers\"),\n        Axiosapi.get(\"kiln\"),\n        Axiosapi.get(\"user\"),\n        Axiosapi.get(\"ngos\"),\n      ])\n        .then(([workers, kilns, user, ngos]) => {\n          this.hookState({\n            workersInfo: workers.data,\n            sortedWorkersInfo: workers.data,\n            kilnInfo: kilns.data,\n            sortedkilnInfo: kilns.data,\n            user: user.data,\n            InitialDataStatus: true,\n            ngos: ngos.data,\n          });\n        })\n        .catch((er) => console.log(er));\n    }\n  };\n\n  hookState = (state, cb) => {\n    this.setState(state, cb);\n    const { workersInfo, kilnInfo, user, offlineWorkers, ngos,pageRefreshed } = this.state;\n\n    localStorage.setItem(\n      \"app-data\",\n      JSON.stringify({\n        pageRefreshed,\n        workersInfo,\n        kilnInfo,\n        user,\n        offlineWorkers,\n        ngos,\n      })\n    );\n  };\n\n  //**********Add new values to state******//\n\n  KilnNewStatefunc = (newState) => {\n    this.hookState({ sortedkilnInfo: newState, kilnInfo: newState });\n  };\n\n  WorkerNewStatefunc = (newState) => {\n    this.hookState({ workersInfo: newState, sortedWorkersInfo: newState });\n  };\n\n  WorkerEditStatefunc = (worker) => {\n    const workersInfo = this.state.workersInfo;\n    const idx = workersInfo.findIndex((e) => e.id === worker.id);\n    if (idx > -1) {\n      workersInfo.splice(idx, 1, worker);\n      this.hookState({ workersInfo, sortedWorkersInfo: workersInfo });\n    }\n  };\n\n  WorkerEditPaymentFunc = (worker) => {\n    this.state.offlineWorkers[worker.id] = worker;\n    this.hookState({ offlineWorkers: this.state.offlineWorkers });\n  };\n\n  //********* SelectOption in filter worker/kiln******//\n\n  ChangeOptionFilter = (e) => {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState({ [name]: value }, () => {\n      this.filterAllOptions();\n      this.filterKilnData();\n    });\n  };\n\n  //**********Filter func for worker*************//\n\n  filterAllOptions = () => {\n    const {\n      kname,\n      workersInfo,\n      gender,\n      searchbyworkername,\n      searchbydistrict,\n      searchbymunicipality,\n      searchbyworkercategory,\n      searchbynaike_f_name,\n      searchbycode,\n      searchbypaidstatus,\n      searchbyngo\n    } = this.state;\n    let tempWorkersInfo = [...workersInfo];\n    if (searchbyworkername !== \"\") {\n      const search = searchbyworkername.toLowerCase();\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return worker.f_name.toLowerCase().includes(search);\n      });\n    }\n\n    if (searchbycode !== \"\") {\n      const search = searchbycode.toLowerCase();\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return worker.code.toLowerCase().includes(search);\n      });\n    }\n\n    if (searchbynaike_f_name !== \"\") {\n      const search = searchbynaike_f_name.toLowerCase();\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return (\n          worker.naike_name && worker.naike_name.toLowerCase().includes(search)\n        );\n      });\n    }\n\n    if (gender !== \"All\") {\n      const search = gender.toLowerCase();\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return worker.gender && worker.gender.toLowerCase().startsWith(search);\n      });\n    }\n\n    if (searchbydistrict !== \"All\") {\n      const search = searchbydistrict.toLowerCase();\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return worker.district.toLowerCase().includes(search);\n      });\n    }\n\n    if (searchbymunicipality !== \"All\") {\n      const search = searchbymunicipality.toLowerCase();\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return (\n          worker.municipality &&\n          worker.municipality.toLowerCase().includes(search)\n        );\n      });\n    }\n\n    if (searchbyworkercategory !== \"All\") {\n      const search = searchbyworkercategory.toLowerCase();\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return (\n          worker.category && worker.category.toLowerCase().includes(search)\n        );\n      });\n    }\n\n    if (kname !== \"All\") {\n      const search = kname.toLowerCase();\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return worker.kiln.name.toLowerCase() === search;\n      });\n    }\n\n    if (searchbypaidstatus == \"paid\") {\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return (\n          worker.extra &&\n          (worker.extra.payment || worker.extra.payment.amount > 0)\n        );\n      });\n    } else if (searchbypaidstatus == \"unpaid\") {\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return worker.extra == null;\n      });\n    } else {\n      tempWorkersInfo = tempWorkersInfo;\n    }\n\n\n\n    if (searchbyngo !== \"All\") {\n      const search = searchbyngo.toLowerCase();\n      tempWorkersInfo = tempWorkersInfo.filter((worker) => {\n        return worker.extra && worker.extra.payment && \n        worker.extra.payment.amountpayer.ngo.name.toLowerCase().includes(search);\n      });\n    }\n\n\n\n    this.hookState({ sortedWorkersInfo: tempWorkersInfo }, () => {\n      this.CsvWorkerDataFunc();\n    });\n  };\n\n  //**********Filter func for kiln*************//\n\n  filterKilnData = () => {\n    const { kilnInfo, searchbykiln } = this.state;\n\n    let tempkilnInfo = [...kilnInfo];\n\n    if (searchbykiln !== \"\") {\n      const search = searchbykiln.toLowerCase();\n      tempkilnInfo = tempkilnInfo.filter((kiln) => {\n        return kiln.name.toLowerCase().includes(search);\n      });\n    }\n\n    this.hookState({ sortedkilnInfo: tempkilnInfo }, () =>\n      this.CsvKilnDataFunc()\n    );\n  };\n\n  ReduceKeyValFunc = (s) => {\n    let data = {};\n\n    for (var [k, v] of Object.entries(s)) {\n      const amount = v.reduce((acc, cur) => {\n        if (cur.extra !== null) {\n          acc = acc + parseInt(cur.extra.amount);\n          return acc;\n        }\n        return acc;\n      }, 0);\n\n      var xy = v.reduce((acc, cur) => {\n        acc[k] = { peoplecount: v.length, totalamount: amount };\n        return acc;\n      }, {});\n\n      data = { ...data, ...xy };\n    }\n    return data;\n  };\n\n  clone = (v) => {\n    return JSON.parse(JSON.stringify(v));\n  };\n\n  CsvWorkerDataFunc = () => {\n    const { sortedWorkersInfo } = this.state;\n\n    const data = this.clone(sortedWorkersInfo).map((item) => {\n      item.kilnname = item.kiln.name;\n      item.kilnaddress = item.kiln.address;\n\n      if (item.extra !== null) {\n        item.amountpaid = item.extra.payment.amount;\n        item.amountpayer = item.extra.payment.amountpayer.username;\n      }\n\n      if (item.children !== null) {\n        item.children = item.children.map((e) => e.join(\"/\")).join(\",\");\n      }\n      delete item[\"kiln\"];\n      return item;\n    });\n\n    this.setState({ csvData: data });\n  };\n\n  CsvKilnDataFunc = () => {\n    const { sortedkilnInfo } = this.state;\n\n    const data = this.clone(sortedkilnInfo).map((item) => {\n      return item;\n    });\n\n    this.setState({ csvKilnData: data });\n  };\n\n  OpenNavMenu = () => {\n    this.hookState({ mobileNav: true });\n  };\n\n  CloseNavMenu = () => {\n    this.hookState({ mobileNav: false });\n  };\n\n  filterById = (id, arr) => {\n    let filteredList = arr.filter((item) => {\n      return item.id !== id;\n    });\n    return filteredList;\n  };\n\n  deleteWorker = (id) => {\n    Axiosapi({\n      method: \"DELETE\",\n      url: `workers/${id}`,\n    })\n      .then((res) => {\n        if (res.status === 204 && res.statusText === \"No Content\") {\n          this.hookState({\n            alertData: { type: \"success\", msg: \"Worker deleted successfully\" },\n          });\n          let filteredWorker = this.filterById(id, this.state.workersInfo);\n          this.hookState({\n            workersInfo: filteredWorker,\n            sortedWorkersInfo: filteredWorker,\n            searchbyworkername: \"\",\n            gender: \"All\",\n            searchbydistrict: \"All\",\n            searchbymunicipality: \"All\",\n            searchbyworkercategory: \"All\",\n            searchbynaike_f_name: \"\",\n            searchbykilnname: \"\",\n          });\n        }\n      })\n      .catch((err) => {\n        this.hookState({\n          alertData: {\n            type: \"error\",\n            msg: \"Something went wrong. Please try again.\",\n          },\n        });\n      });\n  };\n\n  deleteKiln = (id) => {\n    Axiosapi({\n      method: \"DELETE\",\n      url: `kiln/${id}`,\n    })\n      .then((res) => {\n        if (res.status === 204 && res.statusText === \"No Content\") {\n          this.hookState({\n            alertData: { type: \"success\", msg: \"Kiln deleted successfully\" },\n          });\n          let filteredKiln = this.filterById(id, this.state.kilnInfo);\n          this.hookState({\n            kilnInfo: filteredKiln,\n            sortedkilnInfo: filteredKiln,\n            searchbykiln: \"\",\n          });\n        }\n      })\n      .catch((err) => {\n        this.hookState({\n          alertData: {\n            type: \"error\",\n            msg: \"Something went wrong. Please try again.\",\n          },\n        });\n      });\n  };\n\n  isSuperUser = () => {\n    return navigator.onLine && this.state.user && this.state.user.is_superuser;\n  };\n\n  isSuperUserSummary = () => {\n    return this.state.user && this.state.user.is_superuser;\n  };\n\n  OpenModal = (worker) => {\n    this.setState({ ModalStatus: true, ModalData: worker });\n  };\n\n  CloseModal = (id) => {\n    this.hookState({ ModalData: null });\n    this.filterAllOptions();\n  };\n\n  AlertFunc = (res) => {\n    this.hookState({ alertData: res });\n  };\n\n  render() {\n\n    return (\n      <myContext.Provider\n        value={{\n          ...this.state,\n          ChangeOptionFilter: this.ChangeOptionFilter,\n          SearchWorkerName: this.SearchWorkerName,\n          EditWorker: this.EditWorker,\n          OpenNavMenu: this.OpenNavMenu,\n          CloseNavMenu: this.CloseNavMenu,\n          deleteWorker: this.deleteWorker,\n          deleteKiln: this.deleteKiln,\n          fetchAllData: this.fetchAllData,\n          KilnNewStatefunc: this.KilnNewStatefunc,\n          WorkerNewStatefunc: this.WorkerNewStatefunc,\n          WorkerEditStatefunc: this.WorkerEditStatefunc,\n          OpenModal: this.OpenModal,\n          CloseModal: this.CloseModal,\n          AlertFunc: this.AlertFunc,\n          isSuperUser: this.isSuperUser,\n          WorkerEditPaymentFunc: this.WorkerEditPaymentFunc,\n          CsvWorkerDataFunc: this.CsvWorkerDataFunc,\n          CsvKilnDataFunc: this.CsvKilnDataFunc,\n          cancelPayment: this.cancelPayment,\n          filterAllOptions: this.filterAllOptions,\n          isSuperUserSummary: this.isSuperUserSummary,\n          isOnline:this.isOnline,\n          refreshCache:this.refreshCache\n        }}\n      >\n        {this.props.children}\n      </myContext.Provider>\n    );\n  }\n}\nconst ContextConsumer = myContext.Consumer;\nexport { ContextProvider, myContext, ContextConsumer };\n","import React,{useContext,useEffect} from 'react'\nimport { Button } from \"@material-ui/core\";\nimport { myContext } from \"../context\";\nimport { CSVLink } from \"react-csv\";\n\n\nconst Mycsv = () => {\n  \n  const { csvData,CsvWorkerDataFunc} = useContext(myContext);\n  useEffect(()=>{\n    CsvWorkerDataFunc()\n  },[])\n\n const headers = [\n    { label: \"First Name\", key: \"f_name\" },\n    { label: \"Last Name\", key: \"l_name\" },\n    { label: \"Naike\", key: \"naike_name\" },\n    { label: \"NaikePhone\", key: \"naike_phone\" },\n    { label: \"Priority\", key: \"priority\" },\n    { label: \"Ngo\", key: \"org\" },\n    { label: \"Duplicate\", key: \"duplicate\" },\n    { label: \"Gender\", key: \"gender\" },\n    { label: \"Age\", key: \"age\" },\n    { label: \"Country\", key: \"country\" },\n    { label: \"District\", key: \"district\" },\n    { label: \"Municipality\", key: \"municipality\" },\n    { label: \"Ward\", key: \"ward\" },\n    { label: \"Category\", key: \"category\" },\n    { label: \"Kiln Id\", key: \"kiln_id\" },\n    { label: \"Children\", key: \"children\" },\n    { label: \"Kiln\", key: \"kilnname\" },\n    { label: \"Kiln Address\", key: \"kilnaddress\" },\n    { label: \"Amount Paid\", key: \"amountpaid\" },\n    { label: \"Amount Payer\", key: \"amountpayer\" },\n  ];\n\n    return (\n        <div className='csvBtn'>\n        \n        <CSVLink  filename={\"kiln-workers.csv\"} data={csvData} headers={headers}>\n          <Button variant=\"contained\" color=\"secondary\">\n\n              Export CSV\n          </Button>\n      </CSVLink>\n        </div>\n    )\n}\n\nexport default Mycsv\n\n","import React from 'react'\nimport { Redirect } from \"react-router-dom\";\n\nconst Home = () => {\n  \n    return (\n        <div>\n            <Redirect to ={{pathname:'workers'}} />     \n        </div>\n    )\n}\n\nexport default Home\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from 'axios'\nimport {csrftoken} from './Axiosapi'\nimport { myContext } from \"../../context\";\n\nimport {\n  Grid,\n  Container,\n  Avatar,\n  Typography,\n  TextField,\n  Button,\n \n  Box,\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport \"../../App.css\";\n\nconst styles = (theme) => ({\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    backgroundColor: \"#3f51b5\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n  },\n  submit: {},\n});\n\nclass Login extends React.Component {\n  state = {\n   userInfo:{\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n   },\n   alertInfo:this.context.alertData\n  };\n\n  componentDidUpdate(prevProps,prevState){\n    \n    if( prevState.alertInfo !== this.state.alertInfo){\n   \n     this.context.AlertFunc(this.state.alertInfo);\n    }\n  }\n\n  InputHandle = (e) => {\n    let value = e.target.value;\n    let name = e.target.name;\n  \n    this.setState((prevState)=>{\n      return ({...prevState,[name]:value})\n    });\n  };\n\n  login = (e) => {\n    e.preventDefault();\n    \n      axios({\n        method:'POST',\n        headers: {\n          'X-CSRFToken':csrftoken\n      },\n        url : `${process.env.REACT_APP_BASE_URL}/auth/`,\n        data:this.state\n      })\n      .then(res=>{\n        localStorage.setItem(\"item\", JSON.stringify(res.data.token));\n      \n     \n       this.setState({})\n       window.location.href = ''\n      })\n      .catch((err) => this.setState({alertInfo:{type: 'error', msg: 'Something went wrong. Please try again.'}}));\n      \n\n\n  };\n\n  isAuthenticated = () => {\n    const token = localStorage.getItem(\"item\");\n    return token && token.length > 10;\n  };\n\n  static contextType = myContext;\n\n  render() {\n    const isAlreadyAuthenticated = this.isAuthenticated();\n    const { classes } = this.props;\n\n    return (\n      <div>\n        {isAlreadyAuthenticated ? (\n          <Redirect to={{ pathname: \"workers\" }} />\n        ) : (\n          <Container maxWidth=\"sm\" component=\"main\">\n            <Box component=\"div\" mt={10}>\n              <div className={classes.paper}>\n                <Box component=\"div\" my={1}>\n                  <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                  </Avatar>\n                </Box>\n                <Box component=\"div\" mb={2}>\n                  <Typography component=\"h1\" variant=\"h5\">\n                    Login\n                  </Typography>\n                </Box>\n                <form className={classes.form} onSubmit={this.login}>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                      <TextField\n                        autoComplete=\"username\"\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        name=\"username\"\n                        value={this.state.username}\n                        onChange={this.InputHandle}\n                        id=\"userName\"\n                        label=\"User Name\"\n                        autoFocus\n                      />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        value={this.state.password}\n                        onChange={this.InputHandle}\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                      />\n                    </Grid>\n                  </Grid>\n                  <Box component=\"div\" my={3}>\n                    <Button\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.submit}\n                      \n                    >\n                      Login\n                    </Button>\n                  </Box>\n                </form>\n           \n              </div>\n            </Box>\n          </Container>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Login);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {Button,Box} from '@material-ui/core'\n\nconst Logout = () => {\n  \n  localStorage.removeItem(\"item\");\n  localStorage.removeItem(\"app-data\");\n\n  return (\n    <div className=\"logoutSection\">\n      <div className=\"logoutIn\">\n        <h2>You have been successfully logged out.</h2>\n          <Box component=\"div\" mb={2}></Box>\n        <Link to=\"login\">\n          <Button variant=\"contained\" color=\"primary\">\n            Login Again\n          </Button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Logout;\n","import React from \"react\";\nimport {\n  Grid,\n  Container,\n  Avatar,\n  Typography,\n  TextField,\n  Button,\n  Box,\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { csrftoken } from \"./Axiosapi\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport { myContext } from \"../../context\";\n\nconst styles = (theme) => ({\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    backgroundColor: \"#3f51b5\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n  },\n  submit: {},\n});\n\nclass Register extends React.Component {\n  state = {\n    userInfo: {\n      username: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      password: \"\",\n      ngo: window.location.toString().split(\"ngo=\")[1],\n    },\n    alertInfo: this.context.alertData,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.alertInfo !== this.state.alertInfo) {\n      this.context.AlertFunc(this.state.alertInfo);\n    }\n  }\n\n  register = (e) => {\n    e.preventDefault();\n\n    axios({\n      method: \"POST\",\n      headers: {\n        \"X-CSRFToken\": csrftoken,\n      },\n      url: `${process.env.REACT_APP_BASE_URL}/api/users/`,\n      data: this.state.userInfo,\n    })\n      .then((res) => {\n        if (res.status === 201 && res.statusText === \"Created\") {\n          this.setState({\n            alertInfo: {\n              type: \"success\",\n              msg: \"Worker Registered Successfully.\",\n            },\n          });\n          this.setState((prevState) => {\n            return { prevState, userInfo: this.state.userInfo };\n          });\n          window.location.href = `/#/login`;\n        }\n      })\n      .catch((err) => {\n        this.setState({\n          alertInfo: {\n            type: \"error\",\n            msg: \"Something went wrong. Please try again.\",\n          },\n        });\n      });\n  };\n\n  InputHandle = (e) => {\n    let value = e.target.value;\n    let name = e.target.name;\n    const { userInfo } = this.state;\n    this.setState({ userInfo: { ...userInfo, [name]: value } });\n  };\n\n  static contextType = myContext;\n  render() {\n    const { classes } = this.props;\n    if (!this.state.userInfo.ngo) {\n      return <Redirect to={{ pathname: \"/login\" }} />;\n    }\n\n    return (\n      <div>\n        <Container maxWidth=\"sm\" component=\"main\">\n          <Box component=\"div\" mt={5}>\n            <div className={classes.paper}>\n              <Box component=\"div\" my={1}>\n                <Avatar className={classes.avatar}>\n                  <LockOutlinedIcon />\n                </Avatar>\n              </Box>\n              <Box component=\"div\" mb={2}>\n                <Typography component=\"h1\" variant=\"h5\">\n                  Register\n                </Typography>\n              </Box>\n              <form className={classes.form} onSubmit={this.register}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      autoComplete=\"username\"\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      name=\"username\"\n                      value={this.state.username}\n                      onChange={this.InputHandle}\n                      id=\"userName\"\n                      label=\"User Name\"\n                      autoFocus\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      autoComplete=\"fname\"\n                      variant=\"outlined\"\n                      fullWidth\n                      name=\"first_name\"\n                      value={this.state.first_name}\n                      onChange={this.InputHandle}\n                      id=\"firstName\"\n                      label=\"First Name\"\n                      autoFocus\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      autoComplete=\"lname\"\n                      variant=\"outlined\"\n                      fullWidth\n                      name=\"last_name\"\n                      value={this.state.last_name}\n                      onChange={this.InputHandle}\n                      id=\"lastName\"\n                      label=\"Last Name\"\n                      autoFocus\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      value={this.state.email}\n                      onChange={this.InputHandle}\n                      id=\"email\"\n                      label=\"Email Address\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      value={this.state.password}\n                      onChange={this.InputHandle}\n                      name=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      id=\"password\"\n                      autoComplete=\"current-password\"\n                    />\n                  </Grid>\n                </Grid>\n                <Box component=\"div\" my={3}>\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                  >\n                    Register\n                  </Button>\n                </Box>\n              </form>\n              <Grid container justify=\"flex-end\">\n                <Grid item>\n                  <Typography>\n                  <Link href=\"#login\" variant=\"body2\" className='alreadyLogin'>\n                    Already have an account? Login\n                  </Link>\n                  </Typography>\n                </Grid>\n              </Grid>\n            </div>\n          </Box>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Register);\n","import React from \"react\";\nimport { Typography ,Card} from \"@material-ui/core\";\n\nconst Error = () => {\n  return (\n    <div className='errorSection'>\n      {\" \"}\n      <Card style={{'padding':'20px'}} >\n        <Typography\n         \n          color=\"primary\"\n          component=\"h1\"\n          variant=\"h4\"\n        >\n          Error! 404 Not Found\n        </Typography>\n      </Card>\n    </div>\n  );\n};\n\nexport default Error;\n","import React, { useContext } from \"react\";\nimport { AppBar, Button } from \"@material-ui/core\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuOpenIcon from \"@material-ui/icons/MenuOpen\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Link } from \"react-router-dom\";\nimport { myContext } from \"../../context\";\nimport \"../../App.css\";\n\nconst isAuthenticated = () => {\n  const token = localStorage.getItem(\"item\");\n  return token && token.length > 10;\n};\n\nconst Navbar = () => {\n  const {\n    mobileNav,\n    CloseNavMenu,\n    OpenNavMenu,\n    isOnline,\n    refreshCache,\n  } = useContext(myContext);\n  const isAlreadyAuthenticated = isAuthenticated();\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar className=\"nav\">\n          <div className=\"navLeft\">\n            <Typography edge=\"start\" className=\"logoTitle\" variant=\"h6\">\n              Global Fairness Initiative\n            </Typography>\n            <div className=\"burgerBar\">\n              {mobileNav ? (\n                <MenuOpenIcon onClick={() => CloseNavMenu()} />\n              ) : (\n                <MenuIcon onClick={() => OpenNavMenu()} />\n              )}\n            </div>\n          </div>\n\n          <div className={mobileNav ? \"navRight hide\" : \"navRight\"}>\n            <Link to=\"/kilnlist\">\n              <Button className=\"loginButton\">Kiln</Button>\n            </Link>\n            <Link to=\"/workers\">\n              <Button className=\"loginButton\">Workers</Button>\n            </Link>\n            <Link to=\"/ngos\">\n              <Button className=\"loginButton\">Ngos</Button>\n            </Link>\n            <div>\n              {isAlreadyAuthenticated ? (\n                <div>\n                  {isOnline() ? (\n                    <span>\n                      <Link to=\"/logout\">\n                        <Button\n                          onClick={() => window.location.reload()}\n                          className=\"loginButton\"\n                        >\n                          Logout\n                        </Button>\n                      </Link>\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              ) : (\n                <span>\n                  <Link to=\"/login\">\n                    <Button className=\"loginButton\" variant=\"h6\">\n                      Login\n                    </Button>\n                  </Link>\n                </span>\n              )}\n            </div>\n            {isOnline() ? (\n              <Button onClick={refreshCache} variant=\"contained\">\n                Refresh\n              </Button>\n            ) : null}\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { TextField, Container, Button } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { myContext } from \"../../context\";\nimport Axiosapi from './Axiosapi'\nimport { v4 as uuidv4 } from 'uuid';\n\nconst amounts  = {\n  Fireman:5650,\n  Moulder:7750,\n  Transporter:7400,\n  Others:5150\n};\n\nconst dAmount = (ModalData) => {\n  if( ModalData ){\n    const amount = ModalData.extra && ModalData.extra.payment ?\n       ModalData.extra.payment.amount : \n       amounts[ModalData.category];\n      return amount;\n  }\n  return 0;\n};\n\nclass ModalPayment extends React.Component {\n  state = {\n      valuea:this.context.ModalData,\n\n      paymentdat: {\n      amount:dAmount(this.context.ModalData),\n      timeofpay: \"\",\n      amountpayer:this.context.user && this.context.user.username\n    }\n\n  };\n\n\n  handleChangeAmount = (e) => {\n          const amount = e.target.value     \n          this.setState({paymentdat:{...this.state.paymentdat,amount:amount }})\n  };\n\n  setUpdatedPayment = (worker) => {\n    this.context.WorkerEditStatefunc(worker);\n}\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const worker = this.context.ModalData;\n    if (!worker.extra){\n      worker.extra = {}\n    }\n    worker.extra.payment = {...this.state.paymentdat,amountpayer:this.context.user,timeofpay:new Date().toLocaleString(),pay_id:uuidv4()}\n    const ModalDataId = this.context.ModalData.id\n\n\n    if(navigator.onLine ){\n\n      Axiosapi({\n        method:'PUT',\n        url:`workers/${ModalDataId}`,\n        data:worker\n      })\n      .then(res=>{\n        if (res.status === 200 && res.statusText === \"OK\") {\n            this.setUpdatedPayment(worker);\n        }\n        this.context.CloseModal()\n\n        })\n        .catch((err) => {\n          this.setState({})\n          this.context.CloseModal()\n\n\n      });\n\n    } else {\n      this.setUpdatedPayment(worker);\n      this.context.WorkerEditPaymentFunc(\n        worker\n     );\n     this.context.CloseModal()\n\n   }\n\n\n\n  };\n\n  \n\n    // componentDidUpdate(prevProps, prevState) {\n    //   if (prevState.valuea !== this.state.valuea) {\n    //     const data = this.context.sendModalData()\n    //     console.log(data)\n    //   }\n    // }\n\n  \n  static contextType = myContext;\n  render() {\n    const { CloseModal, ModalStatus, ModalData, user,sendModalData } = this.context;\n   \n    return (\n      <div className=\"modalOverlay\">\n        <Container maxWidth=\"sm\" component=\"main\">\n          <div className=\"modalInner\">\n            <CloseIcon\n              className=\"CloseModelIcon\"\n              onClick={() => CloseModal()}\n            />\n            <form onSubmit={this.handleSubmit}>\n            <h2>Enter Amount</h2>\n            <TextField\n              id=\"outlined-full-width\"\n              label=\"Enter Amount\"\n              placeholder=\"Enter Amount\"\n              helperText=\"\"\n              fullWidth\n              value={this.state.paymentdat.amount}\n              onChange={this.handleChangeAmount}\n              name=\"amount\"\n              margin=\"normal\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n            />\n            <Button\n              style={{ marginTop: 8 }}\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Save Payment\n            </Button>\n            </form>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default ModalPayment;\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst Spinner = () => {\n    return (\n        <div className='spinnerSection'>\n            <div>\n            <CircularProgress color=\"secondary\" />\n            </div>\n        </div>\n    )\n}\n\nexport default Spinner\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { scroller } from \"react-scroll\";\nimport { Link } from \"react-router-dom\";\nimport { myContext } from \"../../context\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 8,\n  },\n  buttonMargin: {\n    marginTop: 15,\n    marginRight: 15,\n  },\n});\nconst WorkersListMap = ({ worker }) => {\n  const { deleteWorker, OpenModal, isSuperUser ,user,cancelPayment} = useContext(myContext);\n  const classes = useStyles();\n\n  const scrollToElement = (element) => {\n    scroller.scrollTo(element, {\n      duration: 1000,\n      delay: 100,\n      smooth: true,\n    });\n  };\n\n  const cancelBtn =  navigator.onLine ? \n            (\n              <span>\n            <Button\n              onClick={() => cancelPayment(worker)}\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.buttonMargin}\n            >\n              Cancel Payment\n            </Button>\n          </span>\n            ) : null\n\n  return (\n    <Grid item xs={12} sm={6} md={4}>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {worker.f_name} {worker.l_name}\n          </Typography>\n          <Typography gutterBottom variant=\"h6\" >\n            {worker.code} \n          </Typography>\n\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Category: {worker.category}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Naike: {worker.naike_name}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Gender: {worker.gender}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Age: {worker.age}\n          </Typography>\n\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            District: {worker.district}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Municipality: {worker.municipality}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Ward: {worker.ward}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Phone: {worker.phone}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            Kiln: {worker.kiln.name}\n          </Typography>\n          <Typography className={classes.pos} variant=\"body1\" component=\"p\">\n            <span>Children :</span>\n            {worker.children ? (\n              worker.children.map((e,i)=><span key={i} style={{ marginLeft:'10px', borderBottom: '1px solid' }} >{e.join('/')}</span>)\n            ) : null}\n          </Typography>\n\n          <Typography className={classes.pos} variant=\"body1\" component=\"div\">\n            <span>Paid By: </span>\n\n            {worker.extra && worker.extra.payment? (\n              <div style={{display:\"inline\"}}>\n                <strong>{worker.extra.payment.amountpayer.username}</strong> from \n               <strong> {worker.extra.payment.amountpayer.ngo.name}</strong> on {worker.extra.payment.timeofpay}\n              </div>\n            ) : 'None'}\n          </Typography>\n\n          <Typography className={classes.pos} variant=\"body1\" component=\"div\">\n            <span>Paid Amount:  </span>\n\n            {worker.extra && worker.extra.payment ? (\n              <Typography variant=\"subtitle2\" display=\"inline\">Rs.{worker.extra.payment.amount} </Typography>\n            ) : 'Not Paid'}\n          </Typography>\n\n\n\n          <span>\n            {isSuperUser() ? (\n              <span>\n                <Link to={`/workers/${worker.id}/`}>\n                  <Button\n                    className={classes.buttonMargin}\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Edit\n                  </Button>\n                </Link>\n                <Button\n                  onClick={() => {\n                    deleteWorker(worker.id);\n                    scrollToElement(\"Home\");\n                  }}\n                  className={classes.buttonMargin}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Delete\n                </Button>\n              </span>\n            ) : null}{\" \"}\n          </span>\n{\n  user.ngo ?\n          <span>\n            <Button\n              onClick={() => OpenModal(worker)}\n              variant=\"contained\"\n              color=\"secondary\"\n              disabled = {worker.extra && worker.extra.payment}\n              className={classes.buttonMargin}\n            >\n             {worker.extra && worker.extra.payment ? 'Paid' : 'Pay' } \n            </Button>\n          </span>\n             :\n             cancelBtn\n} \n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default WorkersListMap;\n","import React from 'react'\nimport '../../App.css';\n \n\nconst Title = ({title,children}) => {\n    return (\n        <div className='title'>        \n            <p>{title}</p>\n            <div/>\n        </div>\n    )\n}\n\nexport default Title\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { myContext } from \"../../context\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n   \n    width:'100%'\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  inputSection: {\n    width: \"95%\",\n    margin: \"auto\",\n  },\n}));\n\nconst WorkerFilter = () => {\n  const classes = useStyles();\n  const {\n    workersInfo,\n    kname,\n    gender,\n    searchbyworkername,\n    searchbycode,\n    ChangeOptionFilter,\n    searchbydistrict,\n    searchbymunicipality,\n    searchbyworkercategory,\n    searchbynaike_f_name,\n    searchbypaidstatus,\n    ngos,\n    searchbyngo\n  \n  } = useContext(myContext);\n\n const uniqueFilter = (arr,grp) => {\n\n  return ['All',...new Set(arr.map(e => e[grp]))];\n\n}\n\n const   selectOptionFunc = (arr,val) => {\n    return  arr.map((val, index) => {\n    return (\n      <MenuItem key={index} value={val}>\n        {val}\n      </MenuItem>\n    );\n    });\n    }\n\nlet uniquecategory = uniqueFilter(workersInfo,'category').sort();\nlet categoryOption = selectOptionFunc(uniquecategory,'category')\n\n\nlet uniquengos = uniqueFilter(ngos,'name').sort();\nlet ngosOption = selectOptionFunc(uniquengos,'name')\n\nlet uniquedistrict = uniqueFilter(workersInfo,'district').sort();\nlet districtOption = selectOptionFunc(uniquedistrict,'district')\n\nlet uniquemunicipality = uniqueFilter(workersInfo,'municipality').sort();\nlet municipalityOption = selectOptionFunc(uniquemunicipality,'municipality')\n\n  let kilnlist = workersInfo.map((worker) => {\n    return worker.kiln.name;\n  });\n  let uniquekiln = [...new Set(kilnlist), \"All\"].sort();\n\n  let kilnOption = uniquekiln.map((kiln,index) => {\n    return <MenuItem key={index} value={kiln}>{kiln}</MenuItem>;\n  });\n\n\n\n\n\n  return (\n    <div>\n      <div className={classes.inputSection}>\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={6} md={4}>\n            <TextField\n              fullWidth\n              label=\"Search by Name\"\n              id=\"outlined-size-small\"\n              name=\"searchbyworkername\"\n              value={searchbyworkername}\n              onChange={ChangeOptionFilter}\n              variant=\"outlined\"\n             \n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={4}>\n            <TextField\n              fullWidth\n              label=\"Search by Code\"\n              id=\"outlined-size-small\"\n              name=\"searchbycode\"\n              value={searchbycode}\n              onChange={ChangeOptionFilter}\n              variant=\"outlined\"\n             \n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={4}>\n            <TextField\n              fullWidth\n              label=\"Search by Naike name\"\n              id=\"outlined-size-normal\"\n              name=\"searchbynaike_f_name\"\n              value={searchbynaike_f_name}\n              onChange={ChangeOptionFilter}\n              variant=\"outlined\"\n              \n            />\n          \n        </Grid>\n\n\n        <Grid item xs={6} sm={6} md={4}  className='categoryMargin'>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                By Category\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                name=\"searchbyworkercategory\"\n                value={searchbyworkercategory}\n                onChange={ChangeOptionFilter}\n                label=\"Category\"\n               \n              >\n                {categoryOption}\n              </Select>\n            </FormControl>\n          </Grid>\n\n\n          <Grid item xs={6} sm={4} >\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                By District\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                name=\"searchbydistrict\"\n                value={searchbydistrict}\n                onChange={ChangeOptionFilter}\n                label=\"Districtname\"\n                \n              >\n                {districtOption}\n              </Select>\n            </FormControl>\n          </Grid>\n\n\n          <Grid item xs={6} sm={4}>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                By Municipality\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                name=\"searchbymunicipality\"\n                value={searchbymunicipality}\n                onChange={ChangeOptionFilter}\n                label=\"Municipalityname\"\n              \n              >\n                {municipalityOption}\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={6} sm={4}>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                By Kiln\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                name=\"kname\"\n                value={kname}\n                onChange={ChangeOptionFilter}\n                label=\"Kilnname\"\n               \n              >\n                {kilnOption}\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={6} sm={4}>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                By Gender\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                name=\"gender\"\n                value={gender}\n                onChange={ChangeOptionFilter}\n                label=\"Gender\"\n              >\n                <MenuItem value=\"All\">All</MenuItem>\n                <MenuItem value=\"Male\">Male</MenuItem>\n                <MenuItem value=\"Female\">Female</MenuItem>\n                <MenuItem value=\"Others\">Others</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={6} sm={4}>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                Paid Status\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                name=\"searchbypaidstatus\"\n                value={searchbypaidstatus}\n                onChange={ChangeOptionFilter}\n                label=\"Paid Status\"\n              >\n                <MenuItem value=\"All\">All</MenuItem>\n                <MenuItem value=\"paid\">Paid</MenuItem>\n                <MenuItem value=\"unpaid\">Unpaid</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={6} sm={4}>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                Ngo\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                name=\"searchbyngo\"\n                value={searchbyngo}\n                onChange={ChangeOptionFilter}\n                label=\"Paid Status\"\n              >\n               {ngosOption}\n              </Select>\n            </FormControl>\n          </Grid>\n\n\n\n\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkerFilter;\n","import React from 'react'\n\nimport Pagination from '@material-ui/lab/Pagination';\n\nconst WorkersPaginate = ({itemsPerPage,totalItems,paginate}) => {\n\n    const [page, setPage] = React.useState(1);\n    const handleChange = (event, value) => {\n      setPage(value);     \n    };\n   \n    return (\n        <div className='paginateClass'>\n            <div>      \n                <Pagination count={Math.ceil(totalItems/itemsPerPage)}   onClick={paginate(page)} page={page} onChange={handleChange} color=\"secondary\"  className='paginateInner'/>       \n            </div>\n            <div >\n         \n               \n            </div>\n        </div>\n    )\n}\n\nexport default WorkersPaginate\n","import React from 'react'\nimport MuiAlert from '@material-ui/lab/Alert';\nimport {Box} from '@material-ui/core'\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\nconst SnackBar = () => {\n    return (\n        <Box mt={3}>\n                  <Alert severity=\"info\">You are currently working on offline mode.</Alert>\n        </Box>\n    )\n}\n\nexport default SnackBar\n","import React, { useState, useContext } from \"react\";\nimport WorkersListMap from \"./WorkersListMap\";\nimport { Grid, Typography, makeStyles,Box } from \"@material-ui/core\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport Title from \"../SingleComponents/Title\";\nimport WorkerFilter from \"../FilterComponent/WorkerFilter\";\nimport WorkersPaginate from \"../SingleComponents/WorkersPaginate\";\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport Spinner from '../SingleComponents/Spinner'\nimport Mycsv from '../mycsv'\nimport SnackBar from '../SingleComponents/SnackBar'\n\n\nimport { Link, Redirect } from \"react-router-dom\";\nimport \"../../App.css\";\nimport { myContext } from \"../../context\";\n\nconst isAuthenticated = () => {\n  const token = localStorage.getItem(\"item\");\n  return token && token.length > 10;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  pos: {\n    marginTop: 15,\n    width: \"95%\",\n    margin: \"auto\",\n  \n  },\n  addIcon: {\n    width: \"95%\",\n    marginTop: 30,\n    margin: \"auto\",\n    display: \"flex\",\n    justifyContent:'space-between',\n    alignItems: \"center\",\n    color: \"primary\",\n  },\n\n  AddIconLink: {\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n  },\n}));\n\nconst WorkersList = () => {\n  const classes = useStyles();\n  const isAlreadyAuthenticated = isAuthenticated();\n\n  const { sortedWorkersInfo, isSuperUserSummary,isSuperUser, workersInfo,csvData,CsvWorkerDataFunc} = useContext(myContext);\n const workerscsvHeaders =  ['Id','First Name', 'Last Name','Naike Name','NaikePhone','Priority','Ngo','Duplicate','Gender','Age','Country','District','Municipality','Village','Ward','Phone','Category','Kiln Id','Children','Kiln','Kiln Address','Amount Paid','Amount Payer'] \n  const [currentPage, setCurrentPage] = useState(1);\n  const [workersPerPage] = useState(9);\n  if(!sortedWorkersInfo)\n  {\n    return <Spinner/>\n  }\n\n  const indexOfLastWorker = currentPage * workersPerPage;\n  const indexOfFirstWorker = indexOfLastWorker - workersPerPage;\n  const curretWorkers = sortedWorkersInfo.slice(\n    indexOfFirstWorker,\n    indexOfLastWorker\n  );\n\n  let sortedworkersInfoComp = curretWorkers.map((worker) => {\n    return <WorkersListMap worker={worker} key={worker.id} />;\n  });\n\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <div className='workerList-Section'>\n   {\n     navigator.onLine ? '' :  <SnackBar/>\n   }\n      {isAlreadyAuthenticated ? (\n        <div>\n          {isSuperUser() ? (\n            <span className={classes.addIcon}>\n              <Link to=\"/inputnewworker\" className={classes.AddIconLink}>\n                <AddCircleIcon color=\"primary\" fontSize=\"large\" />\n                <Typography\n                  className=\"addnewWorker\"\n                  color=\"primary\"\n                  component=\"h1\"\n                  variant=\"h6\"\n                >\n                  Add new worker\n                </Typography>\n              </Link>\n              <Link to=\"/summary\" className={classes.AddIconLink}>\n              \n                <Typography\n                  className=\"addnewWorker\"\n                  color=\"primary\"\n                  component=\"h1\"\n                  variant=\"h6\"\n                >\n                 \n                  Summary\n                </Typography>\n                <ArrowRightAltIcon color=\"primary\" fontSize=\"large\" />\n              </Link>\n            </span>\n          ) :  ( isSuperUserSummary() ?\n           <span className='offlineSummaryLink'>\n              <Link to=\"/summary\" className={classes.AddIconLink}>\n              \n              <Typography\n                className=\"addnewWorker\"\n                color=\"primary\"\n                component=\"h1\"\n                variant=\"h6\"\n              >\n               \n                Summary\n              </Typography>\n              <ArrowRightAltIcon color=\"primary\" fontSize=\"large\" />\n            </Link>\n           </span>\n          : '' )}\n          <Title title=\"Workers List\" />\n          <WorkerFilter />\n          <Box>\n          <Typography variant='h5' className='SelectedWorkers'>Selected <strong className='sortedOutof'>{sortedWorkersInfo.length}</strong> out of <strong className='sortedOutoflength'>{workersInfo.length}</strong> workers</Typography>\n          </Box>\n          <div className={classes.pos}>\n            <Grid container spacing={2}>\n              {sortedworkersInfoComp}\n            </Grid>\n          </div>\n\n         <div className='CsvBtnSec'>\n            <WorkersPaginate\n                itemsPerPage={workersPerPage}\n                totalItems={sortedWorkersInfo.length}\n                paginate={paginate}\n                csvData = {csvData}\n                csvFunc = {CsvWorkerDataFunc}\n                csvheader = {workerscsvHeaders}\n              />\n             <div className='csvbtn'>\n             <Mycsv/>\n             </div>\n         </div>\n        </div>\n      ) : (\n        <Redirect to={{ pathname: \"/login\" }} />\n      )}\n    </div>\n  );\n};\n\nexport default WorkersList;\n","import Title from \"../SingleComponents/Title\";\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { scroller } from \"react-scroll\";\nimport { Button, Grid, Container,InputLabel,MenuItem,FormControl,Select } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n}));\n\n\n\nconst WorkersInfoInputComp = ({\n  SubmitHandler,\n  valuea,\n  InputHandler,\n  kilnlist,\n  InputHandlerKiln,\n}) => {\n  const classes = useStyles();\n\n  const scrollToElement=(element)=>{\n    scroller.scrollTo(element,{\n\n     duration:1000,\n     delay:100,\n     smooth:true,\n\n    })\n  }\n\n\n  let kilnOption = kilnlist.map((kiln) => {\n    return (\n      <MenuItem key={kiln.id} value={kiln.id}>\n        {kiln.name}, {kiln.address}\n      </MenuItem>\n    );\n  });\n\n\n\n  return (\n    <Container maxWidth=\"sm\" component=\"main\">\n      <div className={classes.paper}>\n       \n          <Title title=\"Add Worker\" />\n      \n        <form className={classes.form} action=\"\" onSubmit={SubmitHandler}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"f_name\"\n                value={valuea.f_name}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Firstname\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"l_name\"\n                value={valuea.l_name}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Lastname\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                name=\"naike_name\"\n                value={valuea.naike_name}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Naike name\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                margin=\"normal\"\n                name=\"age\"\n                value={valuea.age}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Age\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                name=\"country\"\n                value={valuea.country}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Country\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                name=\"district\"\n                value={valuea.district}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter District\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                name=\"municipality\"\n                value={valuea.municipality}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Municipality\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                name=\"ward\"\n                value={valuea.ward}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Ward\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                name=\"category\"\n                value={valuea.category}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Category\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                name=\"phone\"\n                value={valuea.phone}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Phone\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <FormControl\n                variant=\"outlined\"\n                required\n                fullWidth\n                className={classes.formControl}\n              >\n                <InputLabel id=\"demo-simple-select-outlined-label\">\n                  Gender\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  value={valuea.gender}\n                  name=\"gender\"\n                  onChange={InputHandler}\n                  label=\"gender\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                >\n                  <MenuItem value=\"MALE\">Male</MenuItem>\n                  <MenuItem value=\"FEMALE\">Female</MenuItem>\n                  <MenuItem value=\"OTHERS\">Others</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n\n\n\n            <Grid item xs={12} sm={12}>\n              <FormControl\n                variant=\"outlined\"\n                fullWidth\n                required\n                className={classes.formControl}\n              >\n                <InputLabel id=\"demo-simple-select-outlined-label\">\n                  Kiln Name\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  value={valuea.kiln_id}\n                  name=\"kiln_id\"\n                  onChange={InputHandlerKiln}\n                  label=\"kiln\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                >\n                  {kilnOption}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n\n          <Button\n            onClick={()=>scrollToElement(\"Home\")}\n            className={classes.submit}\n            fullWidth\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Submit\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nexport default WorkersInfoInputComp;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Axiosapi from \"../SingleComponents/Axiosapi\";\n\nimport { myContext } from \"../../context\";\n\nimport WorkersInfoInputComp from \"./WorkersInfoInputComp\";\n\nconst isAuthenticated = () => {\n  const token = localStorage.getItem(\"item\");\n  return token && token.length > 10;\n};\n\nconst WorkersInfoInput = () => {\n  const {\n    workersInfo,\n    WorkerNewStatefunc,\n    kilnInfo,\n    alertData,\n    AlertFunc,\n    isSuperUser\n  } = useContext(myContext);\n  const isAlreadyAuthenticated = isAuthenticated();\n\n  const workers = {\n    f_name: \"\",\n    l_name: \"\",\n    naike_name: \"\",\n    naike_l_name: \"\",\n    gender: \"\",\n    age: \"\",\n    country: \"\",\n    district: \"\",\n    municipality: \"\",\n    ward: \"\",\n    category: \"\",\n    phone: \"\",\n    salary: \"\",\n    kiln_id: \"\",\n    extra: null,\n    children: []\n  };\n\n  const [valuea, setValue] = useState(workers);\n  const [workerInfoValue, setworkerInfoValue] = useState(workersInfo);\n  const [alertInfo, setalertInfo] = useState(alertData);\n\n  const InputHandler = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    value = value.toUpperCase();\n\n    setValue((prevState) => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const InputHandlerKiln = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    setValue((prevState) => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  useEffect(() => {\n    WorkerNewStatefunc([...workerInfoValue]);\n  }, [workerInfoValue]);\n\n  useEffect(() => {\n    AlertFunc(alertInfo);\n  }, [alertInfo]);\n\n  const genCode = (valuea, codes) => {\n    const code = `${valuea.f_name.substr(0, 2)}${valuea.l_name.substr(0, 2)}-${valuea.gender[0]}-${valuea.age}`.toUpperCase();\n    let c = code;\n    let i = 1;\n    while( codes[c] ){\n      c = `${code}-${i}`;\n      i++;\n    }\n    return c;\n  };\n\n  const SubmitHandler = (e) => {\n    e.preventDefault();\n\n    const codes = workerInfoValue.reduce((acc,curr)=>{\n      acc[curr.code] = true;\n      return acc;\n    }, {});\n    valuea.code =  genCode(valuea, codes);\n    \n    Axiosapi({\n      method: \"POST\",\n      url: \"workers/\",\n      data: valuea,\n    })\n      .then((res) => {\n        valuea.id = res.data.id;\n        valuea.kiln = kilnInfo.find((e) => e.id === valuea.kiln_id);\n        setworkerInfoValue([...workerInfoValue, valuea]);\n        if (res.status === 201 && res.statusText === \"Created\") {\n          setalertInfo({ type: \"success\", msg: \"Worker saved\" });\n        }\n      })\n      .catch((err) => {\n        setalertInfo({\n          type: \"error\",\n          msg: \"Something went wrong. Please try again.\",\n        });\n      });\n\n    setValue(workers);\n  };\n\n  return (\n    <div className='workerInputSection'>\n      {isAlreadyAuthenticated && isSuperUser() ? (\n        <div>\n          <WorkersInfoInputComp\n            kilnlist={kilnInfo}\n            InputHandlerKiln={InputHandlerKiln}\n            InputHandler={InputHandler}\n            SubmitHandler={SubmitHandler}\n            valuea={valuea}\n          />\n        </div>\n      ) : (\n        <Redirect to={{ pathname: \"login\" }} />\n      )}\n    </div>\n  );\n};\n\nexport default WorkersInfoInput;\n","import React, { Component } from 'react'\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button, Grid, Container } from \"@material-ui/core\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Title from '../SingleComponents/Title'\nimport {scroller} from 'react-scroll'\nimport Axiosapi from '../SingleComponents/Axiosapi'\n\n\nimport { myContext } from \"../../context\";\n\n\nclass EditWorkerCompRe extends Component {\n\nstate={\n    singleWorkerInfo:{},\n    id:this.props.match.params.id,\n    alertInfo:this.context.alertData\n\n\n}\n\n   componentDidMount(){\n\n      Axiosapi({\n        method:'GET',\n        url:`workers/${this.state.id}`\n      })\n      .then(res=>{\n        this.setState({singleWorkerInfo: res.data})\n      })\n      .catch((err) => console.log(err));\n\n   }\n\n   componentDidUpdate(prevProps,prevState){\n    \n     if( prevState.alertInfo !== this.state.alertInfo){\n    \n      this.context.AlertFunc(this.state.alertInfo);\n     }\n   }\n\n    scrollToElement=(element)=>{\n    scroller.scrollTo(element,{\n\n     duration:1000,\n     delay:100,\n     smooth:true,\n\n    })\n  }\n\n\n    InputHandler = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n  \n    value = value.toUpperCase()\n    const singleWorkerInfo = {...this.state.singleWorkerInfo, [name]: value}\n    this.setState({singleWorkerInfo})\n   }\n\n\n    InputHandlerKiln = (e)=>{\n    let name = e.target.name;\n    let value = e.target.value;\n   \n    const singleWorkerInfo = {...this.state.singleWorkerInfo, [name]: value}\n    this.setState({singleWorkerInfo})\n  \n    }\n\n\n     SubmitHandler = (e) => {\n        e.preventDefault();\n          Axiosapi({\n            method:'PUT',\n            url:`workers/${this.state.singleWorkerInfo.id}`,\n            data:this.state.singleWorkerInfo\n          })\n          .then(res=>{\n          \n            if (res.status === 200 && res.statusText === \"OK\") {\n              this.state.singleWorkerInfo.id = res.data.id;\n              this.state.singleWorkerInfo.kiln = this.context.kilnInfo.find(e => e.id === this.state.singleWorkerInfo.kiln_id);\n              this.context.WorkerEditStatefunc(this.state.singleWorkerInfo);\n              this.setState({alertInfo:{type: 'success', msg: 'Worker Updated Successfully'}})\n             }\n            })\n            .catch((err) => {\n              this.setState({alertInfo:{type: 'error', msg: 'Something went wrong. Please try again.'}})\n          })\n    \n      };\n\n  \n\n\n    static contextType = myContext;\n    render() {\n     const {kilnInfo} =  this.context\n     let kilnOption = kilnInfo.map((kiln)=>{\n        return   <MenuItem value={kiln.id}>{kiln.name}</MenuItem>\n    }) \n\n        return (\n            <Container  maxWidth=\"sm\" component=\"main\">\n            <div>\n             \n              <Title title='Update Worker'/>\n              <form action=\"\" onSubmit={this.SubmitHandler}>\n                <Grid container spacing={2}>\n             \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      name=\"f_name\"\n                      value={this.state.singleWorkerInfo.f_name}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter firstname\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      name=\"l_name\"\n                      value={this.state.singleWorkerInfo.l_name}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter lastname\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n        \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                     \n                      fullWidth\n                      margin=\"normal\"\n                      name=\"naike_name\"\n                      value={this.state.singleWorkerInfo.naike_name}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter naike_name\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                    \n                      fullWidth\n                      margin=\"normal\"\n                      name=\"country\"\n                      value={this.state.singleWorkerInfo.country}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter country\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n                \n      \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      margin=\"normal\"\n                      name=\"age\"\n                      value={this.state.singleWorkerInfo.age}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter age\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n              \n      \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                    \n                      fullWidth\n                      margin=\"normal\"\n                      name=\"district\"\n                      value={this.state.singleWorkerInfo.district}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter district\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                     \n                      fullWidth\n                      margin=\"normal\"\n                      name=\"municipality\"\n                      value={this.state.singleWorkerInfo.municipality}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter municipality\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                    \n                      fullWidth\n                      margin=\"normal\"\n                      name=\"ward\"\n                      value={this.state.singleWorkerInfo.ward}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter ward\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                    \n                      fullWidth\n                      margin=\"normal\"\n                      name=\"category\"\n                      value={this.state.singleWorkerInfo.category}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter category\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n      \n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                    \n                      fullWidth\n                      name=\"phone\"\n                      value={this.state.singleWorkerInfo.phone}\n                      onChange={this.InputHandler}\n                      id=\"standard-basic\"\n                      label=\"Enter phone\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n      \n      \n                  <Grid item xs={12} sm={12}>\n                    <FormControl\n                      variant=\"outlined\"\n                      fullWidth                   \n                    >\n                      <InputLabel id=\"demo-simple-select-outlined-label\">\n                        Gender\n                      </InputLabel>\n                     \n                      <Select\n                        labelId=\"demo-simple-select-outlined-label\"\n                        id=\"demo-simple-select-outlined\"\n                        value={this.state.singleWorkerInfo.gender}\n                        name=\"gender\"\n                        onChange={this.InputHandler}\n                        label=\"gender\"\n                        InputLabelProps={{\n                          shrink: true,\n                        }}\n                      >\n                        <MenuItem value='MALE'>MALE</MenuItem>\n                        <MenuItem value='FEMALE'>FEMALE</MenuItem>\n                        <MenuItem value='OTHERS'>OTHERS</MenuItem>                   \n                      </Select>\n                    </FormControl>\n                  </Grid>\n      \n                 \n                  <Grid item xs={12} sm={12}>\n                    <FormControl\n                      variant=\"outlined\"\n                      fullWidth                  \n                    >\n                      <InputLabel id=\"demo-simple-select-outlined-label\">\n                        Kiln Name\n                      </InputLabel>\n                      <Select\n                        labelId=\"demo-simple-select-outlined-label\"\n                        id=\"demo-simple-select-outlined\"\n                        value={this.state.singleWorkerInfo.kiln_id}\n                        name=\"kiln_id\"\n                        onChange={this.InputHandlerKiln}\n                        label=\"kiln\"\n                        InputLabelProps={{\n                          shrink: true,\n                        }}\n                      >\n                       {kilnOption}                     \n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n               \n                <Button    \n                onClick={()=>this.scrollToElement(\"Home\")}   \n                 className='editWorkerBtn'\n                  fullWidth\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Submit\n                </Button>\n              \n              </form>\n            </div>\n          </Container>\n        )\n    }\n}\n\n\nexport default EditWorkerCompRe\n","import React from 'react'\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button, Grid, Container } from \"@material-ui/core\";\nimport {scroller} from 'react-scroll'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Title from '../SingleComponents/Title'\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    form: {\n      width: \"100%\", // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n      textAlign: \"center\",\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n\n  }));\n\nconst KilnInfoInputComp = ({InputHandler,SubmitHandler,valuea})=> {\n\n    const classes = useStyles();\n    const scrollToElement=(element)=>{\n      scroller.scrollTo(element,{\n  \n       duration:1000,\n       delay:100,\n       smooth:true,\n  \n      })\n    }\n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n      <div className={classes.paper}>\n      \n        <Title title='Add Kiln'/>\n        <form className={classes.form} action=\"\" onSubmit={SubmitHandler}>\n          <Grid container spacing={1}>\n            <Grid item xs={12} >\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"name\"\n                value={valuea.name}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Kilnname\"\n              />\n            </Grid>\n            <Grid item xs={12} >\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"address\"\n                value={valuea.address}\n                onChange={InputHandler}\n                id=\"standard-basic\"\n                label=\"Enter Kilnaddress\"\n              />\n            </Grid>\n\n\n           \n\n            </Grid>\n            <Button   \n           onClick={()=>scrollToElement(\"Home\")} \n            className={classes.submit}\n            fullWidth\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Submit\n          </Button>\n        </form>\n        </div>\n    </Container>\n    )\n}\n\nexport default KilnInfoInputComp\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport KilnInfoInputComp from \"./KilnInfoInputComp\";\nimport Axiosapi from '../SingleComponents/Axiosapi'\nimport { myContext } from \"../../context\";\n\nconst isAuthenticated = () => {\n  const token = localStorage.getItem(\"item\");\n  return token && token.length > 10;\n};\n\n\nconst KilnInfoInput = () => {\n  const kiln = {\n    name: \"\",\n    address: \"\",\n  };\n\n  const { KilnNewStatefunc, kilnInfo ,alertData,AlertFunc,isSuperUser} = useContext(myContext);\n  const [kilnInfoValue, setkilnInfoValue] = useState(kilnInfo);\n  const [valuea, setValue] = useState(kiln);\n  const [alertInfo, setalertInfo] = useState(alertData);\n\n\n  const isAlreadyAuthenticated = isAuthenticated();\n\n  const InputHandler = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    value = value.toUpperCase();\n    setValue((prevState) => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n\n  useEffect(() => {\n    KilnNewStatefunc([...kilnInfoValue]);\n  }, [kilnInfoValue]);\n\n  useEffect(() => {\n    AlertFunc(alertInfo);\n  },[alertInfo]);\n\n  const SubmitHandler = (e) => {\n    e.preventDefault();\n\n\n      Axiosapi({\n        method:'POST',\n        url:'kiln/',\n        data:valuea\n      })\n     .then(res =>\n       {\n        valuea.id = res.data.id;\n        setkilnInfoValue([...kilnInfoValue, valuea]);\n        if (res.status === 201 && res.statusText === \"Created\") {\n          setalertInfo({type: 'success', msg: 'Kiln saved'})\n         }\n        })\n        .catch((err) => {\n        setalertInfo({type: 'error', msg: 'Something went wrong. Please try again.'})\n      })\n\n\n      setValue(kiln)\n  }\n\n  return (\n    <div>\n      {isAlreadyAuthenticated && isSuperUser() ? (\n        <div>\n          <KilnInfoInputComp\n            InputHandler={InputHandler}\n            SubmitHandler={SubmitHandler}\n            valuea={valuea}\n          />\n        </div>\n      ) : (\n        <Redirect to={{ pathname: \"login\" }} />\n      )}\n    </div>\n  );\n};\n\nexport default KilnInfoInput;\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { scroller } from \"react-scroll\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { myContext } from \"../../context\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 8,\n  },\n  posBtn: {\n    marginTop: 10,\n  },\n});\n\nconst KilnListMap = ({ kiln }) => {\n  const classes = useStyles();\n  const { deleteKiln, isSuperUser } = useContext(myContext);\n\n  const scrollToElement = (element) => {\n    scroller.scrollTo(element, {\n      duration: 1000,\n      delay: 100,\n      smooth: true,\n    });\n  };\n\n  return (\n    <Grid item xs={12} sm={6} md={4}>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {kiln.name}\n          </Typography>\n\n          {isSuperUser() ? (\n            <Button\n              onClick={() => {\n                deleteKiln(kiln.id);\n                scrollToElement(\"Home\");\n              }}\n              className={classes.posBtn}\n              variant=\"contained\"\n              color=\"secondary\"\n            >\n              Delete\n            </Button>\n          ) : null}\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default KilnListMap;\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport { myContext } from \"../../context\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  inputSection: {\n    width: \"95%\",\n    margin: \"auto\",\n  },\n}));\n\nconst KilnFilter = () => {\n  const classes = useStyles();\n\n  const {searchbykiln,ChangeOptionFilter} = useContext(myContext);\n\n  return (\n    <div>\n      <div className={classes.inputSection}>\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={6} >\n            <TextField\n              fullWidth\n              label=\"Search by Name\"\n              id=\"outlined-size-small\"\n              name=\"searchbykiln\"\n              value={searchbykiln}\n              onChange={ChangeOptionFilter}\n              variant=\"outlined\"\n             \n            />\n          </Grid>\n\n\n      \n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default KilnFilter;\n","import React, { useContext, useState } from \"react\";\nimport KilnListMap from \"./KilnListMap\";\nimport { Grid, Typography, makeStyles, Box } from \"@material-ui/core\";\nimport { myContext } from \"../../context\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport KilnFilter from \"../FilterComponent/KilnFilter\";\nimport WorkersPaginate from \"../SingleComponents/WorkersPaginate\";\nimport Spinner from \"../SingleComponents/Spinner\";\nimport ArrowRightAltIcon from \"@material-ui/icons/ArrowRightAlt\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport SnackBar from \"../SingleComponents/SnackBar\";\nimport Title from \"../SingleComponents/Title\";\n\nconst useStyles = makeStyles({\n  pos: {\n    marginTop: 30,\n    width: \"95%\",\n    margin: \"auto\",\n  },\n\n  addIcon: {\n    width: \"95%\",\n    marginTop: 30,\n    margin: \"auto\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    color: \"primary\",\n  },\n\n  AddIconLink: {\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n  },\n});\n\nconst isAuthenticated = () => {\n  const token = localStorage.getItem(\"item\");\n  return token && token.length > 10;\n};\n\nconst KilnList = () => {\n  const classes = useStyles();\n  const isAlreadyAuthenticated = isAuthenticated();\n\n  const { sortedkilnInfo, isSuperUserSummary,isSuperUser, kilnInfo } = useContext(\n    myContext\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [kilnsPerPage] = useState(9);\n  if (!sortedkilnInfo) {\n    return <Spinner />;\n  }\n  const indexOfLastKiln = currentPage * kilnsPerPage;\n  const indexOfFirstKiln = indexOfLastKiln - kilnsPerPage;\n  const curretKilns = sortedkilnInfo.slice(indexOfFirstKiln, indexOfLastKiln);\n\n  let kilnInfoComp = curretKilns.map((kiln) => {\n    return <KilnListMap kiln={kiln} key={kiln.id} />;\n  });\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <div className=\"kilnList-Section\">\n      {navigator.onLine ? \"\" : <SnackBar />}\n      {isAlreadyAuthenticated ? (\n        <div>\n          {isSuperUser() ? (\n            <span className={classes.addIcon}>\n              <Link to=\"/kiln\" className={classes.AddIconLink}>\n                <AddCircleIcon color=\"primary\" fontSize=\"large\" />\n                <Typography\n                  className=\"addnewWorker\"\n                  color=\"primary\"\n                  component=\"h1\"\n                  variant=\"h6\"\n                >\n                  Add new kiln\n                </Typography>\n              </Link>\n              <Link to=\"/summary\" className={classes.AddIconLink}>\n                <Typography\n                  className=\"addnewWorker\"\n                  color=\"primary\"\n                  component=\"h1\"\n                  variant=\"h6\"\n                >\n                  Summary\n                </Typography>\n                <ArrowRightAltIcon color=\"primary\" fontSize=\"large\" />\n              </Link>\n            </span>\n          ) : isSuperUserSummary() ? (\n            <span className=\"offlineSummaryLink\">\n              <Link to=\"/summary\" className={classes.AddIconLink}>\n                <Typography\n                  className=\"addnewWorker\"\n                  color=\"primary\"\n                  component=\"h1\"\n                  variant=\"h6\"\n                >\n                  Summary\n                </Typography>\n                <ArrowRightAltIcon color=\"primary\" fontSize=\"large\" />\n              </Link>\n            </span>\n          ) : (\n            \"\"\n          )}\n\n          <Title title=\"Kiln List\" />\n          <KilnFilter />\n          <Box>\n            <Typography variant=\"h5\" className=\"SelectedWorkers\">\n              Selected{\" \"}\n              <strong className=\"sortedOutof\">{sortedkilnInfo.length}</strong>{\" \"}\n              out of{\" \"}\n              <strong className=\"sortedOutoflength\">{kilnInfo.length}</strong>{\" \"}\n              kilns\n            </Typography>\n          </Box>\n          <div className={classes.pos}>\n            <Grid container spacing={2}>\n              {kilnInfoComp}\n            </Grid>\n          </div>\n          <WorkersPaginate\n            itemsPerPage={kilnsPerPage}\n            totalItems={sortedkilnInfo.length}\n            paginate={paginate}\n          />\n        </div>\n      ) : (\n        <Redirect to={{ pathname: \"login\" }} />\n      )}\n    </div>\n  );\n};\n\nexport default KilnList;\n","import React, { Component } from 'react'\nimport Axiosapi from './Axiosapi'\nimport Title from './Title'\nimport {myContext} from '../../context'\nimport {Card,Typography} from '@material-ui/core';\nimport Spinner from './Spinner'\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport {Redirect,Link} from 'react-router-dom'\nimport SnackBar from './SnackBar'\n\n\n\n\nconst isAuthenticated = () => {\n    const token = localStorage.getItem(\"item\");\n    return token && token.length > 10;\n  };\n\nclass NgosList extends Component {\n\n   \n    state={\n        ngos :this.context.ngos,\n    }\n\n    static contextType = myContext;\n    render() {\n        const {isSuperUserSummary} = this.context\n        const {ngos} = this.state\n        const isAlreadyAuthenticated = isAuthenticated();\n\n        if(!ngos){\n            return <Spinner/>\n        }\n        const {workersInfo} = this.context\n       \n        let ngolist = ngos.map(ngo=>{\n        return <Card key={ngo.uuid} style={{'margin-bottom':'.5em', 'padding': '1em'}}>\n             <Typography key={ngo.uuid}>{ngo.name}</Typography>\n             <div style={{'margin-top': '.5em'}}>\n                <a href={`#register?ngo=${ngo.uuid}`} className='registerLink'>\n                Registration link\n                </a>\n            </div>\n            </Card>\n        })\n\n        return (\n            <div className='ngolist-Section'>\n                {\n                  navigator.onLine ? '' :  <SnackBar/>\n                }\n               {\n                   isSuperUserSummary() ? \n                   <div className='ngosummaryLink'>\n                   <Link to=\"/summary\" >\n                 \n                 <Typography\n                   className=\"ngosummarytext\"\n                   color=\"primary\"\n                   component=\"h1\"\n                   variant=\"h6\"\n                 >\n                  \n                   Summary\n                 </Typography>\n               </Link>\n                 <ArrowRightAltIcon color=\"primary\" fontSize=\"large\" />\n                   </div> : ''\n               }\n                { isAlreadyAuthenticated ? \n            <div className='ngoSection'>\n                <Title title='NgoList'/>\n                <div className='ngoInnerSection'>\n                    {ngolist}\n                </div>\n            </div> : <Redirect to={{pathname:'/login'}}/>}\n            </div>\n        )\n    }\n}\n\nexport default NgosList\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Title from \"./Title\";\nimport { myContext } from \"../../context\";\nimport { Redirect } from \"react-router-dom\";\n\n\nimport {\n  Button,\n  Grid,\n  InputLabel,\n  MenuItem,\n  FormControl,\n  Select,\n  Typography,\n  Box,\n} from \"@material-ui/core\";\n\nconst isAuthenticated = () => {\n  const token = localStorage.getItem(\"item\");\n  return token && token.length > 10;\n};\n\nclass NewSummary extends Component {\n  state = {\n    allworkers: [],\n    summary: \"district\",\n    ga: {},\n    kpis: {},\n    max_amount: 0,\n    total: {\n      amount: 0,\n      workers: 0,\n    },\n  };\n\n  componentDidMount() {\n    this.setState({ allworkers: this.context.workersInfo }, () =>\n      this.getSummaryFunc()\n    );\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.summary !== this.state.summary) {\n      this.getSummaryFunc();\n    }\n  }\n\n  isAlreadyAuthenticated = isAuthenticated();\n\n  getSummaryFunc = () => {\n    const summarystate = this.state.summary;\n    const getProp = (v, k) => {\n      if (k !== \"ngo\") return v[k];\n      return v.extra.payment.amountpayer.ngo.name;\n    };\n\n    const workers = this.state.allworkers.filter(\n      (e) => e.extra && e.extra.payment\n    );\n\n    const group = (workers, key) => {\n      return workers.reduce((acc, cur) => {\n        const k = getProp(cur, key);\n        if (!acc[k]) acc[k] = [];\n        acc[k].push(cur);\n        return acc;\n      }, {});\n    };\n\n    const paymentSum = (workers) =>\n      workers.reduce(\n        (acc, cur) => acc + parseFloat(cur.extra.payment.amount),\n        0\n      );\n\n    const ga = group(workers, summarystate);\n    this.setState({\n      ga,\n      total: {\n        amount: paymentSum(workers),\n        workers: workers.length,\n      },\n    });\n\n    const kpis = {};\n    for (const k in ga) {\n      const nest = group(\n        ga[k],\n        summarystate == \"district\" ? \"ngo\" : \"district\"\n      );\n      const nkpis = {};\n      for (const k2 in nest) {\n        nkpis[k2] = {\n          name: k2,\n          value: paymentSum(nest[k2]),\n        };\n      }\n      kpis[k] = {\n        name: k,\n        value: paymentSum(ga[k]),\n        nest: {\n          g: nest,\n          nkpis,\n        },\n      };\n    }\n    this.setState({ kpis });\n\n    const max_amount = Math.max(...Object.values(kpis).map((e) => e.value));\n    this.setState({ max_amount });\n  };\n\n  InputHandler = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n    this.setState({ [name]: value });\n  };\n\n  static contextType = myContext;\n  render() {\n    return (\n      <div>\n      \n        {this.isAlreadyAuthenticated && this.context.isSuperUser()? (\n          <div className=\"newSummary\">\n            <Title title=\"Summary\" />\n            <div className='mysum'>\n              <Grid item xs={12} sm={12}>\n                <FormControl\n                  variant=\"outlined\"\n                  fullWidth\n                  className='Summarydrop'\n                >\n                  <InputLabel id=\"demo-simple-select-outlined-label\">\n                    Summary\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    value={this.state.summary}\n                    name=\"summary\"\n                    onChange={this.InputHandler}\n                    label=\"Summamry\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  >\n                    <MenuItem name=\"district\" value=\"district\">\n                      District\n                    </MenuItem>\n                    <MenuItem name=\"ngo\" value=\"ngo\">\n                      Ngo\n                    </MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </div>\n            <div>\n              <Typography className='summaryTotalamount' style={{marginTop:'20px'}}>\n                Rs.{this.state.total.amount.toLocaleString(\"en-hi\")} paid to <span></span>\n                {this.state.total.workers.toLocaleString(\"en-hi\")} of <span></span>\n                {this.state.allworkers.length.toLocaleString(\"en-hi\")} workers\n              </Typography>\n            </div>\n            <div style={{ width: \"100%\" }}>\n              {Object.entries(this.state.ga).map(([k, workers], i) => {\n                return (\n                  <div key={i}>\n                    <OuterAmountBar>\n                      <Box mb={2}>\n                        <Typography variant=\"h6\">{k}</Typography>\n\n                        <Typography>\n                          Rs.{this.state.kpis[k].value.toLocaleString(\"en-hi\")}{\" \"}\n                          paid to {workers.length.toLocaleString(\"en-hi\")}{\" \"}\n                          workers\n                        </Typography>\n                        <div\n                          className=\"pay-bar\"\n                          style={{\n                            width: `${\n                              (this.state.kpis[k].value /\n                                this.state.max_amount) *\n                              100\n                            }%`,\n                            marginBottom: \".5em\",\n                          }}\n                        ></div>\n                      </Box>\n                      {Object.entries(this.state.kpis[k].nest.nkpis).map(\n                        ([k2], i) => {\n                          return (\n                            <div key={i}>\n                              <Box my={1}>\n                                <Typography>{k2}</Typography>\n                                <Typography variant=\"body2\">\n                                  Rs.\n                                  {this.state.kpis[k].nest.nkpis[\n                                    k2\n                                  ].value.toLocaleString(\"en-hi\")}{\" \"}\n                                  paid to{\" \"}\n                                  {this.state.kpis[k].nest.g[\n                                    k2\n                                  ].length.toLocaleString(\"en-hi\")}{\" \"}\n                                  workers\n                                </Typography>\n                                <div\n                                  className=\"pay-bar\"\n                                  style={{\n                                    width: `${\n                                      (this.state.kpis[k].nest.nkpis[k2].value /\n                                        this.state.max_amount) *\n                                      100\n                                    }%`,\n                                    height: \"10px\",\n                                  }}\n                                ></div>\n                              </Box>\n                            </div>\n                          );\n                        }\n                      )}\n                    </OuterAmountBar>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        ) : (\n          <Redirect to={{ pathname: \"/login\" }} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst OuterAmountBar = styled.div`\n  width: ${(props) => (props.width ? props.width : \"\")};\n\n  border-radius: 5px;\n  margin: 20px 0;\n  padding: 10px;\n  background-color: aliceblue;\n\n  .pay-bar {\n    background-color: orange;\n    height: 15px;\n    transition: 0.5s ease all;\n    text-align: center;\n    color: white;\n    border-radius: 5px;\n    padding: 3px 0;\n  }\n`;\n\nexport default NewSummary;\n","import React, { Component } from 'react'\n\nclass LoadingScreen extends Component {\n    render() {\n        return (\n            <div className='loadingscreen'>\n              <div>\n              <h1>Syncing offline data...</h1>\n              </div>\n            </div>\n        )\n    }\n}\n\nexport default LoadingScreen\n","import React, { useContext } from \"react\";\nimport \"./App.css\";\n\nimport Mycsv from './components/mycsv'\n\nimport Home from \"./components/SingleComponents/Home\";\nimport Login from \"./components/SingleComponents/Login\";\nimport Logout from \"./components/SingleComponents/Logout\";\nimport Register from \"./components/SingleComponents/Register\";\nimport Error from \"./components/SingleComponents/Error\";\nimport Navbar from \"./components/SingleComponents/Navbar\";\nimport ModalPayment from \"./components/SingleComponents/ModalPayment\";\nimport Spinner from './components/SingleComponents/Spinner'\n\nimport WorkersList from \"./components/WorkerComponent/WorkersList\";\nimport WorkersInfoInput from \"./components/WorkerComponent/WorkersInfoInput\";\nimport EditWorkerCompRe from \"./components/WorkerComponent/EditWorkerCompRe\";\n\nimport KilnInfoInput from \"./components/KilnComponent/KilnInfoInput\";\nimport KilnList from \"./components/KilnComponent/KilnList\";\n\nimport NgosList from \"./components/SingleComponents/NgosList\";\nimport NewSummary from './components/SingleComponents/NewSummary'\nimport LoadingScreen from './components/SingleComponents/LoadingScreen'\n\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {IconButton,Collapse} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Element } from \"react-scroll\";\nimport { myContext } from \"./context\";\n\n    const isAuthenticated = () => {\n      const token = localStorage.getItem(\"item\");\n      return token && token.length > 10;\n    };\n\nfunction App() {\n  const { alertData, isSuperUser, AlertFunc, user, ModalData,syncing,isOnline } = useContext(myContext);\n  const isAlreadyAuthenticated = isAuthenticated();\n\n  if(isAlreadyAuthenticated){\n    if( !user )return <Spinner></Spinner>;\n  }\n\n  const alert = alertData ? (\n    <Collapse in={true}>\n      <Alert\n        action={\n          <IconButton\n            aria-label=\"close\"\n            color=\"inherit\"\n            size=\"small\"\n            onClick={() => {\n              AlertFunc(null)\n            }}\n          >\n            <CloseIcon fontSize=\"inherit\" />\n          </IconButton>\n        }\n        severity={alertData.type}\n      >\n        {alertData.msg}\n      </Alert>\n    </Collapse>\n  ) : null;\n\n  const super_user_routes = isSuperUser() ? (\n    <Route exact path=\"/workers/:id/\" component={EditWorkerCompRe} />\n  ) : null;\n\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Element name=\"Home\">\n          <Navbar />\n        </Element>\n\n        {alert}\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/inputnewworker\" component={WorkersInfoInput} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          {\n            isOnline() ? <Route exact path=\"/logout\" component={Logout} /> : null\n          }\n          <Route exact path=\"/kiln\" component={KilnInfoInput} /> \n          <Route exact path=\"/workers\" component={WorkersList} />\n          <Route exact path=\"/ngos\" component={NgosList} />\n          <Route exact path=\"/kilnlist\" component={KilnList} />\n          {/* <Route exact path=\"/csv\" component={Mycsv} /> */}\n          <Route exact path=\"/summary\" component={NewSummary} />\n          {super_user_routes}\n          <Route component={Error} />\n        </Switch>\n        {ModalData ? <ModalPayment/> : null}\n       {syncing ?  <LoadingScreen/> : null }\n      </HashRouter>\n    </div>\n  );\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {ContextProvider} from './context'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n    <App />\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif(process.env.NODE_ENV === 'production'){\n  serviceWorker.register();\n}else{\n  serviceWorker.unregister();\n}\n\n"],"sourceRoot":""}